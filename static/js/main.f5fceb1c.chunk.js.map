{"version":3,"sources":["../../core/Simulation/simulation.worker.js","ui-components/Tour/images/bifurcation.gif","ui-components/Tour/images/context-menu.gif","ui-components/Tour/images/simulation.gif","ui-components/Tour/images/wire.gif","../../core/Diagram/states/common.js","../../core/Simulation/utils.js","../../core/Link/LinkModel.js","../../core/Port/PortModel.js","../../core/Simulation/AudioEngine.js","../../core/Simulation/serialize.js","../../core/Simulation/SimulationEngine.js","../../core/BaseModel.js","../../core/ComponentContext.jsx","../../core/Component.jsx","../../core/Diagram/DiagramContext.jsx","../../core/Diagram/DroppableLayer.jsx","../../core/Diagram/Diagram.jsx","../../core/Link/LinkWidget.jsx","../../core/Link/LinkFactory.jsx","../../core/Port/PortFactory.js","../../core/Diagram/actions/ClipboardAction.js","../../core/Diagram/actions/DeleteAction.js","../../core/Diagram/actions/DuplicateAction.js","../../core/Diagram/actions/UndoRedoAction.js","../../core/Diagram/actions/ZoomAction.js","../../core/Diagram/Command/commandHandlers.js","../../core/Diagram/Command/Command.js","../../core/Diagram/Command/CommandManager.js","../../core/Diagram/states/handleLinkDrag.js","../../core/Port/Port.jsx","../../core/Diagram/states/BifurcateLinkState.js","../../core/Diagram/states/DragCanvasState.js","../../core/Diagram/states/DragNewLinkState.js","../../core/Diagram/states/MoveItemsState.js","../../core/Diagram/states/SelectionBoxState.js","../../core/Diagram/states/SelectingState.js","../../core/Diagram/states/States.js","../../core/Diagram/DiagramEngine.js","../../components/portExtendUtils.js","../../components/And/AndWidget.jsx","../../components/And/AndIcon.jsx","../../components/And/AndRegister.js","../../components/And/AndModel.js","../../components/Buffer/BufferWidget.jsx","../../components/Buffer/BufferIcon.jsx","../../components/Buffer/BufferRegister.js","../../components/Buffer/BufferModel.js","../../components/Button/ButtonWidget.jsx","../../components/Button/ButtonIcon.jsx","../../components/Button/ButtonRegister.js","../../components/Button/ButtonModel.js","../../components/Buzzer/BuzzerWidget.jsx","../../components/Buzzer/BuzzerIcon.jsx","../../components/Buzzer/BuzzerRegister.js","../../components/Buzzer/BuzzerModel.js","../../components/Clock/ClockWidget.jsx","../../components/Clock/ClockIcon.jsx","../../components/Clock/ClockRegister.js","../../components/Clock/ClockModel.js","../../components/ControlledBuffer/ControlledBufferWidget.jsx","../../components/ControlledBuffer/ControlledBufferIcon.jsx","../../components/ControlledBuffer/ControlledBufferRegister.js","../../components/ControlledBuffer/ControlledBufferModel.js","../../components/ControlledInverter/ControlledInverterWidget.jsx","../../components/ControlledInverter/ControlledInverterIcon.jsx","../../components/ControlledInverter/ControlledInverterRegister.js","../../components/ControlledInverter/ControlledInverterModel.js","../../components/Counter/CounterWidget.jsx","../../components/Counter/CounterIcon.jsx","../../components/Counter/CounterRegister.js","../../components/Counter/CounterModel.js","../../components/Demux/DemuxWidget.jsx","../../components/Demux/DemuxIcon.jsx","../../components/Demux/DemuxRegister.js","../../components/Demux/DemuxModel.js","../../components/Ground/GroundWidget.jsx","../../components/Ground/GroundIcon.jsx","../../components/Ground/GroundRegister.js","../../components/Ground/GroundModel.js","../../components/Input/InputWidget.jsx","../../components/Input/InputIcon.jsx","../../components/Input/InputRegister.js","../../components/Input/InputModel.js","../../components/Joiner/JoinerWidget.jsx","../../components/Joiner/JoinerIcon.jsx","../../components/Joiner/JoinerRegister.js","../../components/Joiner/JoinerModel.js","../../components/Led/LedWidget.jsx","../../components/Led/LedIcon.jsx","../../components/Led/LedRegister.js","../../components/Led/LedModel.js","../../components/Mux/MuxWidget.jsx","../../components/Mux/MuxIcon.jsx","../../components/Mux/MuxRegister.js","../../components/Mux/MuxModel.js","../../components/Nand/NandWidget.jsx","../../components/Nand/NandIcon.jsx","../../components/Nand/NandRegister.js","../../components/Nand/NandModel.js","../../components/Nor/NorWidget.jsx","../../components/Nor/NorIcon.jsx","../../components/Nor/NorRegister.js","../../components/Nor/NorModel.js","../../components/Not/NotWidget.jsx","../../components/Not/NotIcon.jsx","../../components/Not/NotRegister.js","../../components/Not/NotModel.js","../../components/Or/OrWidget.jsx","../../components/Or/OrIcon.jsx","../../components/Or/OrRegister.js","../../components/Or/OrModel.js","../../components/Output/OutputWidget.jsx","../../components/Output/OutputIcon.jsx","../../components/Output/OutputRegister.js","../../components/Output/OutputModel.js","../../components/Power/PowerWidget.jsx","../../components/Power/PowerIcon.jsx","../../components/Power/PowerRegister.js","../../components/Power/PowerModel.js","../../components/Ram/RamIcon.jsx","../../components/Ram/RamWidget.jsx","../../components/Ram/RamRegister.js","../../components/Ram/RamModel.js","../../components/Rom/RomIcon.jsx","../../components/Rom/RomWidget.jsx","../../components/Rom/RomRegister.js","../../components/Rom/RomModel.js","../../components/Splitter/SplitterWidget.jsx","../../components/Splitter/SplitterIcon.jsx","../../components/Splitter/SplitterRegister.js","../../components/Splitter/SplitterModel.js","../../components/Ssd/SsdWidget.jsx","../../components/Ssd/SsdIcon.jsx","../../components/Ssd/SsdRegister.js","../../components/Ssd/SsdModel.js","../../components/Switch/SwitchWidget.jsx","../../components/Switch/SwitchIcon.jsx","../../components/Switch/SwitchRegister.js","../../components/Switch/SwitchModel.js","../../components/Xnor/XnorWidget.jsx","../../components/Xnor/XnorIcon.jsx","../../components/Xnor/XnorRegister.js","../../components/Xnor/XnorModel.js","../../components/Xor/XorWidget.jsx","../../components/Xor/XorIcon.jsx","../../components/Xor/XorRegister.js","../../components/Xor/XorModel.js","../../components/index.js","ui-components/Buttons/ComponentSelectButton.jsx","ui-components/Icons/ArrowLeft.jsx","ui-components/Icons/Chevron.jsx","ui-components/Icons/Chevrons.jsx","ui-components/Icons/Close.jsx","ui-components/Icons/Copy.jsx","ui-components/Icons/Cut.jsx","ui-components/Icons/Delete.jsx","ui-components/Icons/Duplicate.jsx","ui-components/Icons/Edit.jsx","ui-components/Icons/Paste.jsx","ui-components/Icons/Pause.jsx","ui-components/Icons/Play.jsx","ui-components/Icons/Redo.jsx","ui-components/Icons/Settings.jsx","ui-components/Icons/Stop.jsx","ui-components/Icons/Undo.jsx","ui-components/Icons/ZoomIn.jsx","ui-components/Icons/ZoomOut.jsx","ui-components/Buttons/SimulationControlButtons.jsx","ui-components/Modal/Modal.jsx","ui-components/Modal/ModalContentLayout.jsx","ui-components/ComponentSelect/ComponentConfigurationInput.jsx","ui-components/ComponentSelect/DraggableComponent.jsx","ui-components/ComponentSelect/ComponentConfiguration.jsx","ui-components/ComponentSelect/ComponentEdit.jsx","ui-components/ComponentSelect/ComponentGroup.jsx","ui-components/ComponentSelect/ComponentSearch.jsx","ui-components/ComponentSelect/ComponentSelect.jsx","ui-components/Key/Key.jsx","ui-components/ContextMenus/ContextMenuIconContainer.jsx","ui-components/ContextMenus/ContextMenuShortcutContainer.jsx","ui-components/ContextMenus/ComponentContextMenu.jsx","ui-components/ContextMenus/DiagramContextMenu.jsx","ui-components/ContextMenus/ContextMenus.jsx","ui-components/Help/HelpAbout.jsx","ui-components/Help/HelpKeyboardShortcuts.jsx","ui-components/LoadingExample/LoadingExample.jsx","ui-components/Snackbar/Snackbar.jsx","ui-components/Titlebar/Titlebar.jsx","ui-components/Tour/tourCircuit.js","ui-components/Tour/Tour.jsx","App.jsx","serviceWorker.js","../../core/common/prototype.js","index.js"],"names":["module","exports","Worker","snap","position","gridSize","Point","Math","round","x","y","samePosition","p1","p2","sameX","points","map","p","every","i","arr","sameY","sameAxis","closestPointToLink","P","link","distance","A","B","hypot","closestPointOnSegment","Q","segment","v","u","t","closest","point","distanceToA","distanceToB","hasMiddlePoint","getFirstPosition","getLastPosition","firstSegment","getMiddlePosition","lastSegment","isPointOverSegment","max","min","isPointOverLink","getSecondPosition","isPointOverFirstLinkSegment","isPointOverSecondLinkSegment","getLandingLink","engine","getLastPoint","getPosition","Object","values","getModel","getLinkLayers","getLinks","find","target","getID","getIncompatibleWidthsErrorMessage","source","getBits","MAX_VALUE","1","2","4","8","16","isValueValid","value","Array","isArray","isValueError","some","LinkModel","options","type","bifurcations","bifurcationSource","bifurcationTarget","bits","this","getParent","getOptions","label","LabelModel","newLabel","DefaultLabelModel","setLabel","getBifurcationSource","getBifurcationTarget","bifurcation","push","filter","b","result","forEach","getAllBifurcations","flat","Infinity","selected","setSelected","getSourcePort","getTargetPort","remove","removeBifurcation","event","registerModel","data","requestAnimationFrame","PointModel","then","addBifurcation","setBifurcationSource","setBifurcationTarget","repaintCanvas","pointModel","index","setPosition","getGridSize","getPoints","length","getFirstPoint","getSecondPoint","getMiddlePoint","getSecondLastPoint","first","middle","last","includes","Error","isSelected","asNumber","getComputedStyle","document","body","getPropertyValue","RDLinkModel","validateDefaultValue","portName","PortModel","maximumLinks","input","defaultFloatingValue","defaultErrorValue","getName","fill","bit","getDefaultFloatingValue","getDefaultErrorValue","keys","getMaximumLinks","port","isNewLinkAllowed","setBits","links","getMainLink","getColor","RDPortModel","AudioEngine","context","AudioContext","destination","audios","id","frequency","waveform","gainNode","createGain","gain","oscillator","createOscillator","connect","start","getGainNode","e","disconnect","getOscillator","payload","command","create","play","pause","setFrequency","setWaveform","getAudio","audio","stop","serializeComponents","components","component","getType","configurations","ports","name","isInput","properties","instance","key","reduce","obj","getPortInfo","componentId","getLinkId","serialize","diagram","models","Class","Model","methods","getOwnPropertyNames","prototype","methodName","toString","getActiveLinkLayer","getModels","getBifurcations","isBifurcation","getActiveNodeLayer","worker","SimulationWorker","SimulationEngine","onSimulationMessage","appendDiff","audioEngine","handlePayload","cleanUp","addEventListener","state","clearDiff","postMessage","undefined","a","Promise","resolve","waitForEnd","removeEventListener","diff","getPort","nameOrInstance","BaseModel","initialize","floating","error","setAsInput","setDefaultFloatingValue","setDefaultErrorValue","setAsOutput","configuration","addInputPort","isOutput","addOutputPort","fromEntries","entries","getPorts","args","clone","getX","getY","from","emitted","emit","NodeModel","ComponentContext","React","createContext","Component","description","group","model","widget","icon","Widget","Icon","storeRef","Provider","initialConfig","AbstractReactFactory","DiagramContext","DroppableLayer","styled","div","attrs","disabled","props","onDragOver","preventDefault","onDrop","JSON","parse","dataTransfer","getData","handleComponentDrop","FullscreenCanvas","CanvasWidget","Diagram","test","isLocked","getEngine","LinkWidget","refPaths","updateRenderedPaths","clearRenderedPaths","setRenderedPaths","ref","current","to","tuple","path","factory","createRef","cloneElement","generateLinkSegment","loose","color","r","getPointRadius","stroke","strokeWidth","cx","cy","bifurcationOrigin","lastSourcePoint","renderPoint","bifurcationTargetPosition","data-default-link-test","testName","generatePathPoints","renderSegment","generateLinePath","renderBifurcationSourcePoint","renderBifurcationTargetPoint","renderLooseLinkPoint","Path","LinkFactory","diagramEngine","getLineWidth","d","DefaultLinkFactory","PortFactory","AbstractModelFactory","ClipboardAction","areShortcutsAllowed","InputType","KEY_DOWN","fire","matchesInput","code","handleCut","handleCopy","handlePaste","ctrlKey","getSelectedComponents","getSelectedEntities","entity","copies","fireEvent","nodes","node","getAllLinks","localStorage","setItem","stringify","clipboard","getItem","clearSelection","serialized","modelInstance","getChildModelFactoryBank","getFactory","generateModel","deserialize","addNode","Action","DeleteAction","handleAction","entities","nodesLinks","DuplicateAction","clones","UndoRedoAction","shiftKey","handleUndo","handleRedo","commands","undo","redo","ZOOM_LEVELS","ZoomAction","MOUSE_WHEEL","stopPropagation","getLayers","layer","allowRepaint","nextZoomLevelIndex","zoomDirection","sign","deltaY","currentZoomLevelIndex","indexOf","getZoomLevel","oldZoomFactor","setZoomLevel","zoomFactor","boundingRect","getCanvas","getBoundingClientRect","clientWidth","width","clientHeight","height","widthDiff","heightDiff","clientX","left","clientY","top","xFactor","getOffsetX","yFactor","getOffsetY","setOffset","commandHandlers","editComponentConfiguration","adjustLink","nodeList","sourcePort","n","setSourcePort","addLink","targetPort","setTargetPort","componentsAdded","add","execute","componentEdited","after","before","linkAdded","linkChanged","handleLinkChanged","getLink","setPoints","oldTarget","entitiesRemoved","sort","l1","l2","entitiesMoved","handleEntitiesMoved","getNode","Command","CommandManager","clear","stack","nextLinkPosition","initialRelative","sourcePosition","zoomLevelPercentage","engineOffsetX","engineOffsetY","getRelativePoint","initialXRelative","initialYRelative","linkNextX","virtualDisplacementX","linkNextY","virtualDisplacementY","handleLinkDrag","next","hasStartedMoving","removePoint","moveDirection","addPoint","generatePoint","WrappedComponent","BifurcateLinkState","showSnackbar","sourceEdited","sourceBefore","getLinkPoints","registerAction","MOUSE_DOWN","getMouseElement","snapPointToSourceLink","getRelativeMousePoint","eject","getLinkFactories","MOUSE_UP","isNearbySourcePosition","reportPosition","adjustBifurcationOverlayingSource","landing","mergeWithBifurcation","sourcePoints","closestCorner","getClosestCornerToPosition","closestPath","getClosestPathToPosition","snappedPosition","axis","sourcePoint","getPathPoints","pathPosition","getPathDirections","abs","secondLast","getSecondLastPosition","bifurcationToMerge","newMiddle","newLast","isStraight","adjustBifurcationPoints","newSource","call","AbstractDisplacementState","DragCanvasState","prev","initialCanvasX","initialCanvasY","nativeEvent","which","targetTouches","displacementX","displacementY","DragNewLinkState","createLinkModel","getPrototypeOf","isNearbySourcePort","canLinkToPort","reverse","getFactoryForLink","tolerance","sourcePortSize","sourcePortPosition","MoveItemsState","getNodesPositions","getLinksPoints","adjustLinkPoints","linkDirections","adjustLinkBifurcations","lastDisplacement","element","getActionEventBus","getModelForEvent","getLinkDirections","nodesBefore","linksBefore","previous","initialPositions","entry","getBifurcatedLinks","getLinksFromNode","acc","getLinkDirection","currentDisplacement","moveEntity","adjustNodeLinks","item","initial","getGridPosition","adjustFirstAndLastPoints","closestToFirst","closestToLast","SelectionBoxState","SelectionLayerModel","addLayer","rel","right","bottom","setBox","getBoxDimensions","relative","initialX","initialY","rect","Rectangle","getSelectionEntities","getBoundingBox","allowSelection","bounds","containsPoint","getTopLeft","getBottomRight","SelectingState","transitionWithEvent","State","States","childStates","dragCanvas","dragNewLink","bifurcateLink","dragItems","TOUCH_START","DiagramEngine","initializeEngine","createEngine","registerDefaultDeleteItemsAction","registerDefaultZoomCanvasAction","registerListener","getStateMachine","pushState","getPortFactories","registerFactory","registerComponents","initializeModel","DiagramModel","setGridSize","setLocked","eventDidFire","function","adjustGridOffset","adjustGridZoom","realignGrid","setModel","getNodeFactories","load","circuit","deserializeModel","locked","repaint","offsetX","offsetY","zoom","style","setProperty","c","getSnappedRelativeMousePoint","window","innerWidth","innerHeight","getSnappedWindowCenter","handleComponentEdit","configurationsBefore","portsBefore","hasNewPort","newPort","hasRemovedPort","oldPort","portBefore","getSelectedNodes","fireAction","duplicateSelected","cutSelected","copySelected","pasteSelected","deleteSelected","zoomIn","zoomOut","synchronizeLink","setValue","synchronizeComponent","output","clearAllValues","clearLinkValues","clearPortValues","getNodes","Circle","Port","className","data-name","data-nodeid","title","PortWidget","withProps","useContext","distributePorts","numPorts","isNumberOfPortsEven","closestEven","startAt","floor","splice","PortExtensionBar","size","place","PortExtension","portPositions","lastPortPosition","Wrapper","PositionedPort","Shape","viewBox","transform","AndWidget","inputPorts","getInputPorts","AndIcon","default","validate","INPUT_PORTS_NUMBER","Number","dataBits","DATA_BITS","executeBit","step","out","asArray","transpose","stepFloating","stepError","BufferWidget","BufferIcon","in","Button","button","ButtonWidget","buttonRef","useRef","handleReleaseAway","contains","onRelease","useEffect","onMouseDown","onClick","onMouseUp","ButtonIcon","as","onSimulationStart","Body","isActive","Hole","children","data-testid","BuzzerWidget","BuzzerIcon","frequencyHz","FREQUENCY_HZ","WAVEFORM","createAudio","getInput","onSimulationPause","getValue","Decoration","periodMs","animateTransition","transformOrigin","transition","ClockWidget","ClockIcon","emitInterval","highCount","lowCount","setInterval","lastOutput","getNextOutput","HIGH_DURATION","LOW_DURATION","clearInterval","onSimulationStop","getOutput","x1","y1","x2","y2","ControlledBufferWidget","ControlledBufferIcon","control","ControlledInverterWidget","ControlledInverterIcon","CounterWidget","CounterIcon","START_AT","countOnRising","COUNT_ON","wrapAt","WRAP_AT","stepValue","STEP_VALUE","isRisingEdge","meta","risingEdge","fallingEdge","outputNumber","strokeLinecap","DemuxWidget","outputPorts","getOutputPorts","DemuxIcon","OUTPUT_NUMBER","log2","_","selection","strokeLinejoin","GroundWidget","GroundIcon","SHAPE_SIZES","PIN_BACKGROUND","0","PIN_BORDER","PinContainer","Pin","InputWidget","getBitAt","InputIcon","threeState","THREE_STATE","nextValue","bitHeight","JoinerWidget","JoinerIcon","LedWidget","LedIcon","activeWhen","ACTIVE_WHEN","colors","on","ON_COLOR","off","OFF_COLOR","inputNumber","MuxWidget","MuxIcon","INPUT_NUMBER","NandWidget","NandIcon","PortExtensionConnector","NorWidget","NorIcon","NotWidget","NotIcon","OrWidget","OrIcon","format","span","ErrorMessage","FloatingMessage","OutputWidget","OUTPUT_FORMAT","mapBits","number","padStart","showAsNumber","OutputIcon","fillOpacity","PowerWidget","PowerIcon","RamIcon","Memory","Cell","ActiveAddress","AddressValueContainer","Address","Value","RamWidget","memory","getMemory","selectedAddress","getAddress","range","address","getMemoryDisplayRange","slice","formattedAddress","dataWidth","DATA_WIDTH","addressWidth","ADDRESS_WIDTH","CONTENT","parseBinary","clearMemory","select","currentAddress","clock","getWireValue","RomIcon","RomWidget","SplitterWidget","SplitterIcon","SEGMENTS","horizontal","vertical","segments","opacity","f","g","dp","getPositionForSegment","SsdIcon","Switch","SwitchValue","SwitchWidget","SwitchIcon","mask","XnorWidget","XnorIcon","behavior","MULTIPLE_INPUT_BEHAVIOR","executeOne","executeOdd","bind","XorWidget","XorIcon","Input","Output","Clock","Led","Ssd","Buzzer","And","Nand","Or","Nor","Xor","Xnor","Buffer","Not","ControlledBuffer","ControlledInverter","Splitter","Joiner","Power","Ground","Mux","Demux","Ram","Rom","Counter","groupedComponents","Container","ComponentSelectButton","handleClick","data-for","data-tip","data-place","ArrowLeft","Chevron","Chevrons","Close","Copy","rx","ry","Cut","Delete","Duplicate","Edit","Paste","Pause","Play","Redo","Settings","Stop","Undo","ZoomIn","ZoomOut","SimulationControlButtons","handleClickStart","handleClickPause","handleClickStop","Overlay","Window","Modal","Header","Title","h1","Subtitle","h2","Content","IconButton","form","field","componentType","innerRef","htmlFor","option","accept","onChange","files","handleError","fr","FileReader","onerror","onload","file","setFieldValue","exception","readAsText","ComponentConfigurationInput","errors","diagramEngineStub","getPortCoords","getWidth","getHeight","getTooltip","ErrorWidget","DraggableComponent","handleClose","draggable","onDragStart","setDragImage","currentTarget","setData","Tooltip","hide","DragArea","FormScroll","Footer","Hint","SubmitButton","getInitialValues","ComponentConfiguration","editMode","handleBack","handleSubmit","firstInputRef","focus","rebuild","initialValues","onSubmit","isValid","autoComplete","getFormSubmitLabel","ComponentEdit","isOpen","callback","useCallback","closeOnEsc","edit","HorizontalSeparator","hr","ComponentsGrid","ComponentButton","ComponentTitle","ComponentIcon","ComponentGroup","handleComponentSelect","useState","setOpen","SearchBar","Scroll","ComponentSearch","groups","filteredGroups","setFilteredGroups","searchText","setSearchText","autoFocus","placeholder","like","RegExp","newFilteredGroups","match","handleSearchChange","onKeyDown","handleKeyDown","ComponentSelect","selectedComponent","setSelectedComponent","Key","ContextMenuIconContainer","ContextMenuShortcutContainer","ComponentContextMenu","configureComponent","DiagramContextMenu","ContextMenus","Version","Divider","HelpAbout","paddingTop","marginTop","overflowY","display","flexDirection","alignItems","src","process","alt","version","margin","textAlign","href","namespace","repo","TableContainer","Table","table","TableColumn","td","HelpKeyboardShortcuts","LoadingExample","BACKGROUND_COLOR","warning","info","success","open","Message","progress","keyframes","ProgressBar","paused","timeout","TRANSITION_DURATION","Snackbar","message","split","string","isHidden","NameContainer","isFocused","NameInput","ButtonsContainer","FileInput","HelpButton","HelpButtonMenu","HelpButtonMenuItem","HideButton","Titlebar","circuitName","isCircuitNameFocused","handleChangeCircuitName","handleFocusCircuitName","handleBlurCircuitName","handleClickSave","handleFileLoad","handleClickKeyboardShortcuts","handleClickRedoTour","handleClickAbout","helpButtonRef","helpMenuRef","nameInputRef","fileInputRef","isHelpMenuOpen","setHelpMenuOpen","setHidden","handleToggleHelpMenu","handleClickAway","onFocus","onBlur","blur","maxLength","click","hidden","DIMENSIONS","createdAt","updatedAt","layers","isSvg","transformed","labels","parentNode","and","not","pulse","Pulse","Beacon","forwardRef","imageStyle","alignSelf","borderRadius","boxShadow","marginBottom","Tour","recenterTourCircuit","currentStep","run","recenterCircuit","action","setTourRunning","loadCircuit","clearCircuit","EVENTS","STEP_AFTER","ACTIONS","NEXT","PREV","setState","TOUR_END","CLOSE","steps","content","placement","showProgress","disableOverlayClose","locale","skip","spotlightPadding","contextMenu","wire","simulation","lineHeight","showSkipButton","stepIndex","continuous","scrollToFirstStep","styles","tooltip","tooltipContent","fontSize","buttonBack","buttonNext","background","buttonSkip","border","back","close","beaconComponent","App","isComponentSelectOpen","isComponentEditOpen","isHelpKeyboardOpen","isHelpAboutOpen","isTourRunning","shortcutHandler","isStopped","showAddComponent","selectedNodes","showEditComponent","isRunning","handleClickLoad","isCircuitEmpty","loadFile","circuitCreatedAt","loadExample","isLoadingExample","fetch","response","json","loadHandler","lastSaved","isTourAvailable","confirm","removeItem","shouldWarnUnload","currentCircuit","lastSavedCircuit","unloadHandler","generateFile","returnValue","Date","autoSave","synchronizeSimulation","getDiff","componentDiff","renderSimulation","handleCircuitNameChange","handleCircuitNameFocus","handleCircuitNameBlur","blob","Blob","filename","replace","FileSaver","saveAs","getElementById","forceUpdate","hideAddComponent","componentEdit","hideEditComponent","showHelpTour","showHelpKeyboard","hideHelpKeyboard","showHelpAbout","hideHelpAbout","snackbar","clearTimeout","timeoutID","hideSnackbar","res","setTimeout","handleLoadTourCircuit","circuitBeforeTour","tourCircuit","handleCenterTourCircuitOffset","handleUnloadTourCircuit","example","URLSearchParams","location","search","get","autoSaveInterval","getState","globalEventOff","Boolean","hostname","curr","concat","String","char","arrayLength","fillWith","sanitize","chunk","parseInt","original","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2GAAAA,EAAOC,QAAU,WACf,OAAO,IAAIC,OAAO,IAA0B,8C,2ECD9CF,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,wRCK9BE,EAAO,SAACC,GAA6B,IAAnBC,EAAkB,uDAAP,GACxC,OAAID,aAAoBE,QACf,IAAIA,QACTC,KAAKC,MAAMJ,EAASK,EAAIJ,GAAYA,EACpCE,KAAKC,MAAMJ,EAASM,EAAIL,GAAYA,GAIjCE,KAAKC,MAAMJ,EAAWC,GAAYA,GAM9BM,EAAe,SAACC,EAAIC,GAAL,OAC1BD,GACAC,GACAN,KAAKC,MAAMI,EAAGH,KAAOF,KAAKC,MAAMK,EAAGJ,IACnCF,KAAKC,MAAMI,EAAGF,KAAOH,KAAKC,MAAMK,EAAGH,IAKxBI,EAAQ,sCAAIC,EAAJ,yBAAIA,EAAJ,uBACnBA,EAAOC,KAAI,SAAAC,GAAC,OAAIV,KAAKC,MAAMS,EAAER,MAAIS,OAAM,SAACD,EAAGE,EAAGC,GAAP,OAAeH,IAAMG,EAAI,OAKrDC,EAAQ,sCAAIN,EAAJ,yBAAIA,EAAJ,uBACnBA,EAAOC,KAAI,SAAAC,GAAC,OAAIV,KAAKC,MAAMS,EAAEP,MAAIQ,OAAM,SAACD,EAAGE,EAAGC,GAAP,OAAeH,IAAMG,EAAI,OAKrDE,EAAW,kBACtBR,EAAK,WAAL,cAAoBO,EAAK,WAAL,cAYTE,EAAqB,SAACC,EAAGC,GACpC,IAAMC,EAAW,SAACC,EAAGC,GAAJ,OAAUrB,KAAKsB,MAAMF,EAAElB,EAAImB,EAAEnB,EAAGkB,EAAEjB,EAAIkB,EAAElB,IAEnDoB,EAAwB,SAACC,EAAGC,GAAa,IACrCL,EAASK,EAATL,EAAGC,EAAMI,EAANJ,EAELK,EAAI,IAAI3B,QAAMsB,EAAEnB,EAAIkB,EAAElB,EAAGmB,EAAElB,EAAIiB,EAAEjB,GACjCwB,EAAI,IAAI5B,QAAMqB,EAAElB,EAAIsB,EAAEtB,EAAGkB,EAAEjB,EAAIqB,EAAErB,GAKjCyB,IAHKF,EAAExB,EAAIyB,EAAEzB,EAAIwB,EAAEvB,EAAIwB,EAAExB,IACpB,SAAAuB,EAAExB,EAAK,GAAP,SAAWwB,EAAEvB,EAAK,IAK7B,GAAIyB,GAAK,GAAKA,GAAK,EAAG,CACpB,IAAMC,EAAU,IAAI9B,SACjB,EAAI6B,GAAKR,EAAElB,EAAI0B,EAAIP,EAAEnB,GACrB,EAAI0B,GAAKR,EAAEjB,EAAIyB,EAAIP,EAAElB,GAExB,MAAO,CACL2B,MAAOD,EACPV,SAAUA,EAASK,EAAGK,IAK1B,IAAME,EAAcZ,EAASK,EAAGJ,GAC1BY,EAAcb,EAASK,EAAGH,GAEhC,OAAOU,GAAeC,EAClB,CAAEF,MAAOV,EAAGD,SAAUY,GACtB,CAAED,MAAOT,EAAGF,SAAUa,IAG5B,IAAKd,EAAKe,iBACR,OAAOV,EAAsBN,EAAG,CAC9BG,EAAGF,EAAKgB,mBACRb,EAAGH,EAAKiB,oBACPL,MAGL,IAAMM,EAAeb,EAAsBN,EAAG,CAC5CG,EAAGF,EAAKgB,mBACRb,EAAGH,EAAKmB,sBAGJC,EAAcf,EAAsBN,EAAG,CAC3CG,EAAGF,EAAKmB,oBACRhB,EAAGH,EAAKiB,oBAGV,OAAIC,EAAajB,UAAYmB,EAAYnB,SAChCiB,EAAaN,MAEfQ,EAAYR,OAMfS,EAAqB,SAACT,EAAOL,GAAa,IACtCL,EAASK,EAATL,EAAGC,EAAMI,EAANJ,EAEX,GAAId,EAAMa,EAAGU,EAAOT,GAAI,CACtB,IAAMmB,EAAMxC,KAAKwC,IAAIpB,EAAEjB,EAAGkB,EAAElB,GAG5B,OAFYH,KAAKyC,IAAIrB,EAAEjB,EAAGkB,EAAElB,IAEd2B,EAAM3B,GAAK2B,EAAM3B,GAAKqC,EAGtC,GAAI1B,EAAMM,EAAGU,EAAOT,GAAI,CACtB,IAAMmB,EAAMxC,KAAKwC,IAAIpB,EAAElB,EAAGmB,EAAEnB,GAG5B,OAFYF,KAAKyC,IAAIrB,EAAElB,EAAGmB,EAAEnB,IAEd4B,EAAM5B,GAAK4B,EAAM5B,GAAKsC,EAGtC,OAAO,GA2BIE,EAAkB,SAACZ,EAAOZ,GAAR,OArBY,SAACY,EAAOZ,GAAR,OACzCqB,EAAmBT,EAAO,CACxBV,EAAGF,EAAKgB,mBACRb,EAAGH,EAAKyB,sBAmBVC,CAA4Bd,EAAOZ,IAbO,SAACY,EAAOZ,GAClD,QAAKA,EAAKe,kBAEHM,EAAmBT,EAAO,CAC/BV,EAAGF,EAAKyB,oBACRtB,EAAGH,EAAKiB,oBASVU,CAA6Bf,EAAOZ,IAKzB4B,EAAiB,SAAC5B,EAAM6B,GACnC,IAAMjB,EAAQZ,EAAK8B,eAAeC,cAElC,OAAOC,OAAOC,OACZJ,EACGK,WACAC,gBAAgB,GAChBC,YACHC,MAAK,SAAAC,GACL,OAAIA,EAAOC,UAAYvC,EAAKuC,SACrBf,EAAgBZ,EAAO0B,OAQrBE,EAAoC,SAC/CC,EACAH,GAF+C,oDAIrCG,EAAOC,UAJ8B,eAIdD,EAAOC,UAAY,EAAI,IAAM,GAJf,uBAKrCJ,EAAOI,UAL8B,eAKdJ,EAAOI,UAAY,EAAI,IAAM,K,QC1LnDC,EAAY,CACvBC,EAAG,EACHC,EAAG,EACHC,EAAG,GACHC,EAAG,IACHC,GAAI,OAkBOC,EAAe,SAAAC,GAAK,OACrB,OAAVA,GACCC,MAAMC,QAAQF,IAAUA,EAAMzD,OAAM,SAAAe,GAAC,MAAiB,kBAANA,MAKtC6C,EAAe,SAAAH,GAAK,MACrB,MAAVA,GACCC,MAAMC,QAAQF,IAAUA,EAAMI,MAAK,SAAA9C,GAAC,MAAU,MAANA,MCnBtB+C,E,kDACnB,WAAYC,GAAU,IAAD,8BACnB,2BACEC,KAAM,QACHD,KAGAE,aAAe,GACpB,EAAKC,kBAAoB,KACzB,EAAKC,kBAAoB,KAEzB,EAAKV,MAAQ,KACb,EAAKW,KAAO,KAXO,E,+CAcrB,WACE,OAAOC,KAAKC,YACTA,YACAC,aAAapF,W,sBAGlB,SAASqF,GACP,GAAIA,aAAiBC,aACnB,OAAO,gEAAeD,GAGxB,IAAME,EAAW,IAAIC,oBAErB,OADAD,EAASE,SAASJ,GACX,gEAAeE,K,kCAGxB,SAAqBnE,GACnB8D,KAAKH,kBAAoB3D,I,kCAG3B,WACE,OAAO8D,KAAKH,oB,kCAGd,SAAqB3D,GACnB8D,KAAKF,kBAAoB5D,I,kCAG3B,WACE,OAAO8D,KAAKF,oB,2BAGd,WACE,SACEE,KAAKQ,yBAA0BR,KAAKS,0B,4BAIxC,SAAevE,GAEX8D,KAAKJ,aAAarB,MAChB,SAAAmC,GAAW,OAAIA,EAAYjC,UAAYvC,EAAKuC,YAMhDuB,KAAKJ,aAAae,KAAKzE,K,+BAGzB,SAAkBA,GAChB8D,KAAKJ,aAAeI,KAAKJ,aAAagB,QACpC,SAAAC,GAAC,OAAIA,EAAEpC,UAAYvC,EAAKuC,a,6BAI5B,WACE,OAAOuB,KAAKJ,e,gCAGd,WACE,IAAMkB,EAAM,YAAOd,KAAKJ,cAIxB,OAHAI,KAAKJ,aAAamB,SAAQ,SAAAL,GAAW,OACnCI,EAAOH,KAAKD,EAAYM,yBAEnBF,EAAOG,KAAKC,O,kCAGrB,WACE,MAAM,GAAN,6GAA4ClB,KAAKJ,iB,yBAGnD,SAAYuB,GACV,mEAAkBA,GAClBnB,KAAKJ,aAAamB,SAAQ,SAAAF,GAAC,OAAIA,EAAEO,YAAYD,MAEzCnB,KAAKqB,iBACPrB,KAAKqB,gBAAgBD,YAAYD,GAE/BnB,KAAKsB,iBACPtB,KAAKsB,gBAAgBF,YAAYD,K,oBAIrC,WACEnB,KAAKJ,aAAamB,SAAQ,SAAAL,GAAW,OAAIA,EAAYa,YAEjDvB,KAAKH,mBACPG,KAAKH,kBAAkB2B,kBAAkBxB,MAGvCA,KAAKF,mBACPE,KAAKF,kBAAkB0B,kBAAkBxB,MAG3C,iE,uBAGF,WACE,OAAO,kGAELJ,aAAcI,KAAKJ,aAAanE,KAAI,SAAAoF,GAAC,OAAIA,EAAEpC,WAC3CoB,kBAAmBG,KAAKH,kBACpBG,KAAKH,kBAAkBpB,QACvB,KACJqB,kBAAmBE,KAAKF,kBACpBE,KAAKF,kBAAkBrB,QACvB,KACJW,MAAOY,KAAKZ,MACZW,KAAMC,KAAKD,S,yBAIf,SAAY0B,GAAQ,IAAD,OACjB,mEAAkBA,GADD,IAIfrD,EAQEqD,EARFrD,SACAsD,EAOED,EAPFC,cALe,EAYbD,EANFE,KACE9B,EAPa,EAObA,kBACAC,EARa,EAQbA,kBACAF,EATa,EASbA,aACAG,EAVa,EAUbA,KAIJ2B,EAAc1B,MAEd4B,uBAAsB,WACpB,EAAK7B,KAAOA,EAEZ,EAAKvE,OAASiG,EAAME,KAAKnG,OAAOC,KAC9B,SAAAqB,GAAK,OACH,IAAI+E,aAAW,CACb3F,KAAM,EACNrB,SAAU,IAAIE,QAAM+B,EAAM5B,EAAG4B,EAAM3B,QAIzCyE,EAAamB,SAAQ,SAAAF,GAAC,OACpBzC,EAASyC,GAAGiB,MAAK,SAAApB,GAAW,OAC1B,EAAKqB,eAAerB,SAIpBb,GACFzB,EAASyB,GAAmBiC,MAAK,SAAAnD,GAAM,OACrC,EAAKqD,qBAAqBrD,MAI1BmB,GACF1B,EAAS0B,GAAmBgC,MAAK,SAAAtD,GAAM,OACrC,EAAKyD,qBAAqBzD,MAI9BiD,EAAM1D,OAAOmE,qB,sBAIjB,SAASC,GAAwB,IAAZC,EAAW,uDAAH,EAG3B,OAFA,gEAAeD,EAAYC,GAEpBD,I,2BAGT,SAAcjH,EAAGC,GACf,IAAM2B,EAAK,qEAAuB5B,EAAGC,GAMrC,OALA2B,EAAMuF,YACJzH,EAAKM,EAAG8E,KAAKsC,eACb1H,EAAKO,EAAG6E,KAAKsC,gBAGRxF,I,4BAGT,WACE,OAAKkD,KAAK/C,iBAEH+C,KAAKuC,YAAY,GAFW,O,4BAKrC,WACE,OAAOvC,KAAKuC,YAAY,K,gCAG1B,WACE,IAAM/G,EAASwE,KAAKuC,YACpB,OAAO/G,EAAOA,EAAOgH,OAAS,K,8BAGhC,WACE,OAAO5H,EACLoF,KAAKyC,gBAAgBxE,cACrB+B,KAAKsC,iB,+BAIT,WACE,OAAO1H,EACLoF,KAAK0C,iBAAiBzE,cACtB+B,KAAKsC,iB,+BAIT,WACE,OAAKtC,KAAK/C,iBAEHrC,EACLoF,KAAK2C,iBAAiB1E,cACtB+B,KAAKsC,eAJ4B,O,mCAQrC,WACE,OAAO1H,EACLoF,KAAK4C,qBAAqB3E,cAC1B+B,KAAKsC,iB,6BAIT,WACE,OAAO1H,EACLoF,KAAKhC,eAAeC,cACpB+B,KAAKsC,iB,4BAIT,WACE,OAAmC,IAA5BtC,KAAKuC,YAAYC,S,wBAG1B,WACE,IAAKxC,KAAK/C,iBAAkB,OAAO,EAEnC,IAAM4F,EAAQ7C,KAAK9C,mBACb4F,EAAS9C,KAAK3C,oBACd0F,EAAO/C,KAAK7C,kBAElB,QAAIpB,EAAS8G,EAAOC,EAAQC,K,qBAK9B,WACE,OAAO/C,KAAKD,O,qBAGd,SAAQA,GACN,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,IAAIiD,SAASjD,GAC7B,MAAM,IAAIkD,MACR,gEAGJjD,KAAKD,KAAOA,I,sBAGd,WACE,OAAOC,KAAKZ,Q,sBAGd,SAASA,GACPY,KAAKZ,MAAQA,I,sBAGf,WACE,OAAIY,KAAKkD,aAAqB,uBAEzB/D,EAAaa,KAAKZ,MAAOY,KAAKD,MAIhB,OAAfC,KAAKZ,MACD,cAAN,OAAqBY,KAAKD,MAAQ,EAAlC,eAEI,eAAN,OAAsB/E,KAAKC,MACxB+E,KAAKZ,MAAM+D,WAAatE,EAAUmB,KAAKD,MAAS,IADnD,KANMR,EAAaS,KAAKZ,OAAe,qBAC9B,0B,0BAUX,WACE,MAAM,cAAN,OAAqBY,KAAKD,MAAQ,EAAlC,iB,4BAGF,WACE,OAAOqD,iBAAiBC,SAASC,MAAMC,iBAAhC,iBACKvD,KAAKD,MAAQ,EADlB,yB,GA9S4ByD,aCXjCC,EAAuB,SAACrE,EAAOO,EAAM+D,GACzC,GAAc,IAAVtE,GACU,IAAVA,GACU,MAAVA,GACU,MAAVA,EAEJ,MAAM,IAAI6D,MAAJ,qCAC0BtD,EAD1B,qCAC4D+D,EAD5D,2CAKaC,E,kDACnB,aAA2B,IAAD,EAAdjE,EAAc,uDAAJ,GAAI,4BACxB,2BACEC,KAAM,OACNiE,aAAc,GACXlE,KAGAN,MAAQ,KACb,EAAKyE,MAAQ,KACb,EAAK9D,KAAO,KACZ,EAAK+D,qBAAuB,KAC5B,EAAKC,kBAAoB,KAXD,E,6CAc1B,WACE,OAAO,kGAELF,MAAO7D,KAAK6D,MACZzE,MAAOY,KAAKZ,MACZW,KAAMC,KAAKD,KACX+D,qBAAsB9D,KAAK8D,qBAC3BC,kBAAmB/D,KAAK+D,sB,yBAI5B,SAAYtC,EAAO1D,GACjB,mEAAkB0D,EAAO1D,GACzBiC,KAAKZ,MAAQqC,EAAME,KAAKvC,MACxBY,KAAK6D,MAAQpC,EAAME,KAAKkC,MACxB7D,KAAKD,KAAO0B,EAAME,KAAK5B,KACvBC,KAAK8D,qBAAuBrC,EAAME,KAAKmC,qBACvC9D,KAAK+D,kBAAoBtC,EAAME,KAAKoC,oB,wBAGtC,WACE/D,KAAK6D,OAAQ,I,yBAGf,WACE7D,KAAK6D,OAAQ,I,qBAGf,WACE,OAAsB,IAAf7D,KAAK6D,Q,sBAGd,WACE,OAAsB,IAAf7D,KAAK6D,Q,qBAGd,WACE,OAAO7D,KAAKD,O,qBAGd,SAAQA,GACN,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,IAAIiD,SAASjD,GAC7B,MAAM,IAAIkD,MACR,gEAGJjD,KAAKD,KAAOA,I,qCAGd,SAAwB+D,GACtBL,EACEK,EACA,WACA9D,KAAKgE,WAGPhE,KAAK8D,qBAAuBA,I,qCAG9B,WACE,OAAO9D,KAAK8D,uB,kCAGd,SAAqBC,GACnBN,EAAqBM,EAAmB,QAAS/D,KAAKgE,WAEtDhE,KAAK+D,kBAAoBA,I,kCAG3B,WACE,OAAO/D,KAAK+D,oB,sBAGd,WAAY,IAAD,OACT,OAAmB,OAAf/D,KAAKZ,MAAuBC,MAAMW,KAAKD,MAAMkE,KAAK,GAE/CjE,KAAKZ,MAAM3D,KAAI,SAAAyI,GACpB,MAAY,MAARA,EAAoB,EAAKC,0BACjB,MAARD,EAAoB,EAAKE,uBACtBF,O,sBAIX,SAAS9E,GACPY,KAAKZ,MAAQA,I,8BAGf,WACE,OACElB,OAAOmG,KAAKrE,KAAK1B,YAAYkE,OAASxC,KAAKsE,oB,2BAI/C,SAAcC,GACZ,OAAOA,EAAKC,oBAAsBxE,KAAKvB,UAAY8F,EAAK9F,U,6BAG1D,WACE,GAAIuB,KAAKwE,mBAAoB,CAC3B,IAAMtI,EAAO,IAAIuD,EAEjB,OADAvD,EAAKuI,QAAQzE,KAAKD,MACX7D,EAET,OAAO,O,yBAGT,WACE,IAAMwI,EAAQxG,OAAOC,OAAO6B,KAAK1B,YACjC,OAAOoG,EAAMlC,OAAS,EAAIkC,EAAM,GAAK,O,sBAGvC,WACE,IAAMxI,EAAO8D,KAAK2E,cAClB,OAAIzI,EAAaA,EAAK0I,WAEf,8B,GAlI4BC,aCflBC,E,WACnB,aAAe,oBACb9E,KAAK+E,QAAU,IAAIC,aACnBhF,KAAKiF,YAAcjF,KAAK+E,QAAQE,YAChCjF,KAAKkF,OAAS,G,0CAGhB,YAAqD,IAA5CC,EAA2C,EAA3CA,GAA2C,IAAvCC,iBAAuC,MAA3B,IAA2B,MAArBC,gBAAqB,MAAV,OAAU,EAC5CC,EAAWtF,KAAK+E,QAAQQ,aAC9BD,EAASE,KAAKpG,MAAQ,GAEtB,IAAMqG,EAAazF,KAAK+E,QAAQW,mBAChCD,EAAW9F,KAAO0F,EAClBI,EAAWL,UAAUhG,MAAQgG,EAC7BK,EAAWE,QAAQL,GACnBG,EAAWG,QAEX5F,KAAKkF,OAAOC,GAAM,CAAEG,WAAUG,gB,kBAGhC,YAAc,IAAPN,EAAM,EAANA,GACL,IACEnF,KAAK6F,YAAYV,GAAIQ,QAAQ3F,KAAKiF,aAClC,MAAOa,O,mBAKX,YAAe,IAAPX,EAAM,EAANA,GACN,IACEnF,KAAK6F,YAAYV,GAAIY,WAAW/F,KAAKiF,aACrC,MAAOa,O,0BAKX,YAAiC,IAAlBX,EAAiB,EAAjBA,GAAIC,EAAa,EAAbA,UACjBpF,KAAKgG,cAAcb,GAAIC,UAAUhG,MAAQgG,I,yBAG3C,YAA+B,IAAjBD,EAAgB,EAAhBA,GAAIE,EAAY,EAAZA,SAChBrF,KAAKgG,cAAcb,GAAIxF,KAAO0F,I,2BAGhC,SAAcY,GACZ,OAAQA,EAAQC,SACd,IAAK,SACHlG,KAAKmG,OAAOF,GACZ,MACF,IAAK,OACHjG,KAAKoG,KAAKH,GACV,MACF,IAAK,QACHjG,KAAKqG,MAAMJ,GACX,MACF,IAAK,eACHjG,KAAKsG,aAAaL,GAClB,MACF,IAAK,cACHjG,KAAKuG,YAAYN,M,2BAOvB,SAAcd,GACZ,OAAOnF,KAAKwG,SAASrB,GAAIM,a,yBAG3B,SAAYN,GACV,OAAOnF,KAAKwG,SAASrB,GAAIG,W,sBAG3B,SAASH,GACP,IAAMsB,EAAQzG,KAAKkF,OAAOC,GAE1B,IAAKsB,EACH,MAAM,IAAIxD,MAAJ,mCACwBkC,EADxB,oBAIR,OAAOsB,I,qBAGT,WACEvI,OAAOC,OAAO6B,KAAKkF,QAAQnE,SAAQ,SAAA0F,GAAK,OACtCA,EAAMhB,WAAWiB,UAEnB1G,KAAKkF,OAAS,O,KCvBZyB,EAAsB,SAAAC,GAAU,OACpCA,EAAWnL,KAAI,SAAAoL,GAAS,MAAK,CAC3B1B,GAAI0B,EAAUpI,QACdkB,KAAMkH,EAAUC,UAChBC,eAAgBF,EAAUE,eAC1BC,OAnBmBA,EAmBGH,EAAUG,MAlBlC9I,OAAOC,OAAO6I,GAAOvL,KAAI,SAAA8I,GAAI,MAAK,CAChCY,GAAIZ,EAAK9F,QACTwI,KAAM1C,EAAKP,UACXH,MAAOU,EAAK2C,UACZnH,KAAMwE,EAAK3F,UACXkF,qBAAsBS,EAAKJ,0BAC3BJ,kBAAmBQ,EAAKH,4BAaxB+C,YA5D8BC,EA4DQP,EA3DxC3I,OAAOmG,KAAK+C,GAAUxG,QACpB,SAAAyG,GAAG,OACA,CACC,YACA,UACA,WACA,QACA,QACA,SACA,iBACA,UACArE,SAASqE,OAgDoCC,QAC/C,SAACC,EAAKF,GAAN,mBAAC,eAAmBE,GAApB,kBAA0BF,EAAMR,EAAUQ,OAC1C,KA9D4B,IAAAD,EAwCXJ,MA0BjBQ,EAAc,SAAAjD,GAAI,OACtBA,EACI,CACEkD,YAAalD,EAAKtE,YAAYxB,QAC9BwI,KAAM1C,EAAKP,UACXH,MAAOU,EAAK2C,WAEd,MAEAQ,EAAY,SAAAxL,GAAI,OAAKA,EAAOA,EAAKuC,QAAU,MA+BlCkJ,EAVG,SAACC,EAASC,GAAV,MAAsB,CACtCA,QAzEsBjB,EAyEEiB,EAxExBjB,EAAWnL,KAAI,SAAAoL,GAAc,IANHiB,EAOhBnI,EAAgBkH,EAAhBlH,KAAMoI,EAAUlB,EAAVkB,MAEd,MAAO,CACLpI,OACAqI,SAXsBF,EAWOC,EAVjC7J,OAAO+J,oBAAoBH,EAAMI,WAAWtH,QAC1C,SAAAuH,GAAU,OAAK,CAAC,eAAenF,SAASmF,OASFb,QAClC,SAACC,EAAKN,GAAN,mBAAC,eACIM,GADL,kBAEGN,EAAOc,EAAMG,UAAUjB,GAAMmB,eAEhC,SA+DN1D,OArBqBA,EAsBnBxG,OAAOC,OAAOyJ,EAAQS,qBAAqBC,aArB7C5D,EAAMjJ,KAAI,SAAAS,GAAI,MAAK,CACjBiJ,GAAIjJ,EAAKuC,QACTE,OAAQ6I,EAAYtL,EAAKmF,iBACzB7C,OAAQgJ,EAAYtL,EAAKoF,iBACzB1B,aAAc1D,EACXqM,kBACA9M,KAAI,SAAAiF,GAAW,OAAIA,EAAYjC,WAClCiC,YAAa,CACX/B,OAAQ+I,EAAUxL,EAAKsE,wBACvBhC,OAAQkJ,EAAUxL,EAAKuE,yBAEzB+H,cAAetM,EAAKsM,gBACpBzI,KAAM7D,EAAK0C,eAWbgI,WAAYD,EACVzI,OAAOC,OAAOyJ,EAAQa,qBAAqBH,eAzBxB,IAAA5D,EArDCkC,G,SC/BlB8B,EAAS,I,OAAIC,GAQEC,E,WACnB,WAAYhC,GAAa,IAAD,gCAYxBiC,oBAAsB,YAAkC,IAAD,IAA9BlH,KAAQhC,EAAsB,EAAtBA,KAAMsG,EAAgB,EAAhBA,QACxB,SAATtG,GACF,EAAKmJ,WAAW7C,GAGL,UAATtG,GACF,EAAKoJ,YAAYC,cAAc/C,GAGpB,UAATtG,GACF,EAAKoJ,YAAYE,WArBnBjJ,KAAK4G,WAAaA,EAElB5G,KAAK0I,OAASA,EACd1I,KAAK0I,OAAOQ,iBAAiB,UAAWlJ,KAAK6I,qBAE7C7I,KAAK+I,YAAc,IAAIjE,EAEvB9E,KAAKmJ,MAAQ,UACbnJ,KAAKoJ,Y,yCAiBP,SAAMxB,GACJ5H,KAAK0I,OAAOW,YAAY,CACtBnD,QAAS,QACT0B,QACiB,YAAf5H,KAAKmJ,MACDxB,EAAUC,EAAS5H,KAAK4G,iBACxB0C,IAERtJ,KAAKmJ,MAAQ,Y,mBAGf,WACEnJ,KAAK0I,OAAOW,YAAY,CAAEnD,QAAS,UACnClG,KAAKmJ,MAAQ,W,yDAGf,iCAAAI,EAAA,+EACS,IAAIC,SAAQ,SAAAC,GAQjB,EAAKf,OAAOQ,iBAAiB,WAPV,SAAbQ,EAAc,GACL,UAD4B,EAArB/H,KAAQhC,OAE1B,EAAK+I,OAAOiB,oBAAoB,UAAWD,GAC3C,EAAKP,MAAQ,UACbM,QAKJ,EAAKf,OAAOW,YAAY,CAAEnD,QAAS,aAXvC,2C,4EAeA,WACE,OAAOlG,KAAKmJ,Q,uBAGd,WACE,MAAsB,YAAfnJ,KAAKmJ,Q,sBAGd,WACE,MAAsB,WAAfnJ,KAAKmJ,Q,uBAGd,WACE,MAAsB,YAAfnJ,KAAKmJ,Q,qBAGd,WACE,OAAOnJ,KAAK4J,O,uBAGd,WACE5J,KAAK4J,KL9C0B,CACjChD,WAAY,GACZlC,MAAO,M,wBK+CP,SAAWkF,GACT5J,KAAK4J,KAAO,CACVhD,WAAW,2BAAM5G,KAAK4J,KAAKhD,YAAegD,EAAKhD,YAC/ClC,MAAM,2BAAM1E,KAAK4J,KAAKlF,OAAUkF,EAAKlF,Y,KC5FrCmF,EAAU,SAAAC,GACd,OAAIA,aAA0BnG,EAAkBmG,EACzC,IAAInG,EAAU,CAAEsD,KAAM6C,KAGVC,E,kDACnB,aAAoD,IAAD,EAAvChD,EAAuC,uDAAtB,GAAIpH,EAAkB,uDAAX,UAAW,4BACjD,cAAM,CAAEA,UAEHqK,WAAWjD,GAEhB,EAAKA,eAAiBA,EAL2B,E,6CAQnD,WACE,OAAO,kGAELA,eAAgB/G,KAAK+G,mB,0BAIzB,SAAa+C,GAAiD,IAAD,yDAAJ,GAA1B/J,EAA8B,EAA9BA,KAAMkK,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,MACvC3F,EAAOsF,EAAQC,GACrBvF,EAAK4F,aACyB,kBAAnBL,IACTvF,EAAKE,QAAQ1E,GAAQ,GACrBwE,EAAK6F,wBAAL,OAA6BH,QAA7B,IAA6BA,IAAY,KACzC1F,EAAK8F,qBAAL,OAA0BH,QAA1B,IAA0BA,IAAS,MAErC,+DAAc3F,K,2BAGhB,SAAcuF,GAAgC,IAAD,yDAAJ,GAAT/J,EAAa,EAAbA,KACxBwE,EAAOsF,EAAQC,GACrBvF,EAAK+F,cACyB,kBAAnBR,IACTvF,EAAKE,QAAQ1E,GAAQ,GACrBwE,EAAK6F,wBAAwB,KAC7B7F,EAAK8F,qBAAqB,MAE5B,+DAAc9F,K,qBAGhB,SAAQuF,EAAgBS,GACtB,IAAMhG,EAAOsF,EAAQC,GAErB,GAAIvF,EAAK2C,UACPlH,KAAKwK,aAAajG,EAAMgG,OAD1B,CAKA,IAAIhG,EAAKkG,WAKT,MAAM,IAAIxH,MACR,2DALAjD,KAAK0K,cAAcnG,EAAMgG,M,wBAS7B,SAAWtD,GACT,IAAM1C,EAAOsF,EAAQ5C,GACrB,kEAAiB1C,K,2BAGnB,WACE,OAAOrG,OAAOyM,YACZzM,OAAO0M,QAAQ5K,KAAK6K,YAAYjK,QAAO,uCAChCsG,gB,4BAKX,WACE,OAAOhJ,OAAOyM,YACZzM,OAAO0M,QAAQ5K,KAAK6K,YAAYjK,QAC9B,uCAAoBsG,gB,yBAK1B,WACE,OAAOhJ,OAAOC,OAAO6B,KAAK6K,YACvBpP,KAAI,SAAA8I,GAAI,OAAIA,EAAKI,iBACjB/D,QAAO,SAAA1E,GAAI,QAAMA,KACjBoL,QACC,SAACzL,EAAKK,GAAN,4BAAmBL,GAAnB,CAAwBK,GAAxB,YAAiCA,EAAK8E,yBACtC,M,mBAIN,WAAe,IAAC,IAAD,qBAAN8J,EAAM,yBAANA,EAAM,gBACb,IAAMC,GAAK,iFAAkBD,IAE7B,OADAC,EAAM1I,YAAY,IAAItH,QAAMiF,KAAKgL,OAAS,GAAIhL,KAAKiL,OAAS,KACrDF,I,wBAGT,c,+BAEA,c,+BAEA,c,8BAEA,c,kBAEA,c,kBAEA,SAAK3L,IDPa,SAAC8L,EAAM9L,GACzBsJ,EAAOW,YAAY,CACjBnD,QAAS,OACTiF,QAAS,CAAED,OAAM9L,WCKjBgM,CAAKpL,KAAKvB,QAASW,K,yBAGrB,gB,GA3GqCiM,a,iBCPxBC,GAFUC,IAAMC,gBCKVC,G,kDACnB,cASI,IAAD,EARD9L,EAQC,EARDA,KACAsH,EAOC,EAPDA,KACAyE,EAMC,EANDA,YACAC,EAKC,EALDA,MAKC,IAJD5E,sBAIC,MAJgB,GAIhB,EAHD6E,EAGC,EAHDA,MACAC,EAEC,EAFDA,OACAC,EACC,EADDA,KACC,4BACD,cAAMnM,IACDsH,KAAOA,EACZ,EAAKyE,YAAcA,EACnB,EAAKC,MAAQA,EACb,EAAK5E,eAAiBA,EACtB,EAAKgB,MAAQ6D,EACb,EAAKG,OAASF,EACd,EAAKG,KAAOF,EARX,E,uDAWH,SAAoBrK,GAAQ,IAClBsK,EAAW/L,KAAX+L,OACAH,EAAUnK,EAAVmK,MAER,OACE,kBAAC,gBAAD,CAAczG,GAAG,YAAY8G,UAAU,EAAOtK,KAAMiK,GAClD,kBAAC,GAAiBM,SAAlB,CAA2B9M,MAAOwM,GAChC,kBAACG,EAAD,CAAQH,MAAOA,Q,2BAMvB,SAAcnK,GAAQ,IACZsG,EAAU/H,KAAV+H,MADW,EAEctG,EAAM0K,cAEvC,OAAO,IAAIpE,EAJQ,EAEXhB,eAFW,EAEKpH,U,GApCWyM,yB,gBCHxBC,GAFQd,IAAMC,gB,UCiBdc,GAjBQC,KAAOC,IAAIC,OAAM,gBAAGC,EAAH,EAAGA,SAAaC,EAAhB,gDAAC,eACpCA,GADmC,IAEtCC,WAAY,SAAAnL,GAAK,OAAIA,EAAMoL,kBAC3BC,OAAQ,SAAArL,GACN,IAAIiL,EAAJ,CAEA,IAAM7F,EAAYkG,KAAKC,MACrBvL,EAAMwL,aAAaC,QAAQ,cAG7BP,EAAMQ,oBAAoB1L,EAAOoF,SAVd0F,CAAH,gECQda,GAAmBb,aAAOc,gBAAPd,CAAH,8DAoBPe,GAfC,SAAC,GAAD,IAAGvP,EAAH,EAAGA,OAAH,OACd,kBAAC,gBAAD,CAAcoH,GAAG,UAAU8G,UAAU,EAAOtK,KAAM,CAAE4L,KAAM,IACxD,kBAAC,GAAD,CACEJ,oBAAqB,kBACnBpP,EAAOoP,oBAAP,MAAApP,EAAM,YAER2O,SAAU3O,EAAOyP,YAEjB,kBAAC,GAAetB,SAAhB,CAAyB9M,MAAOrB,GAC9B,kBAACqP,GAAD,CAAkBrP,OAAQA,EAAO0P,kBCpBpBC,G,kDACnB,WAAYf,GAAQ,IAAD,8BACjB,cAAMA,IAEDgB,SAAW,GAHC,E,sDAMnB,WACE3N,KAAK4N,wB,+BAGP,WACE5N,KAAK4N,wB,kCAGP,WACE5N,KAAK6N,uB,iCAGP,WACmB7N,KAAK2M,MAAdzQ,KAEH4R,iBACH9N,KAAK2N,SAASlS,KAAI,SAAAsS,GAChB,OAAOA,EAAIC,c,gCAKjB,WACmBhO,KAAK2M,MAAdzQ,KAEH4R,iBAAiB,M,gCAGxB,WAAsB,IAGdtS,EAFWwE,KAAK2M,MAAdzQ,KAEYqG,YAEpB,OAAO/G,EACJC,KAAI,SAACqB,EAAOlB,GAAR,MAAe,CAAEsP,KAAM1P,EAAOI,GAAIqS,GAAIzS,EAAOI,EAAI,OACrDgF,QAAO,SAAAsN,GAAK,OAAIA,EAAMD,Q,8BAG3B,YAAgC,IAAb/C,EAAY,EAAZA,KAAM+C,EAAM,EAANA,GACvB,MAAM,IAAN,OAAW/C,EAAKF,OAAhB,YAA0BE,EAAKD,OAA/B,aAA0CgD,EAAGjD,OAA7C,YAAuDiD,EAAGhD,U,2BAG5D,SAAckD,EAAM9G,GAAM,IAAD,EACiBrH,KAAK2M,MAArCzQ,EADe,EACfA,KAAMkS,EADS,EACTA,QADS,IACA1O,QAEfyB,QAHe,MACU,GADV,GAGfA,SAEF4M,EAAMxC,IAAM8C,YAGlB,OAFArO,KAAK2N,SAAShN,KAAKoN,GAEZxC,IAAM+C,aACXF,EAAQG,oBAAoBrS,EAAMiF,EAAUgN,GAC5C,CAAE9G,MAAK0G,U,yBAIX,SAAYlT,GAA0B,IAAhB2T,EAAe,wDAC3BtS,EAAS8D,KAAK2M,MAAdzQ,KACFuS,EAAQvS,EAAK0I,WAEnB,OACE,4BACE8J,EAAGF,EAAQ,EAAItS,EAAKyS,iBACpB1K,KAAMuK,EAAQ,oBAAsBC,EACpCG,OAAQJ,EAAQC,EAAQ,OACxBI,YAAa,EACbC,GAAIjU,EAASK,EACb6T,GAAIlU,EAASM,M,0CAKnB,WAAgC,IACtBe,EAAS8D,KAAK2M,MAAdzQ,KAEF2D,EAAoB3D,EAAKsE,uBAC/B,IAAKX,EAAmB,OAAO,KAE/B,IAAMmP,EAAoB9S,EAAKuG,gBAAgBxE,cACzCgR,EAAkBpP,EACrB7B,eACAC,cAEH,OAAI7C,EAAa4T,EAAmBC,GAC3B,KAGFjP,KAAKkP,YAAYF,K,0CAG1B,WAAgC,IACtB9S,EAAS8D,KAAK2M,MAAdzQ,KAEF4D,EAAoB5D,EAAKuE,uBAC/B,IAAKX,EAAmB,OAAO,KAE/B,IAAMqP,EAA4BjT,EAC/B8B,eACAC,cACGgR,EAAkBnP,EACrB9B,eACAC,cAEH,OAAI7C,EAAa+T,EAA2BF,GACnC,KAGFjP,KAAKkP,YAAYC,K,kCAG1B,WAAwB,IACdjT,EAAS8D,KAAK2M,MAAdzQ,KAER,GAAIA,EAAKoF,gBAAiB,OAAO,KACjC,GAAIpF,EAAKuE,uBAAwB,OAAO,KAExC,IAAMb,EAAe1D,EAAKqM,kBACpB0G,EAAkB/S,EAAK8B,eAAeC,cAW5C,OAToB2B,EAAaJ,MAC/B,SAAAkB,GAAW,OACTtF,EACEsF,EAAYxD,mBACZ+R,IAEF7T,EAAasF,EAAYvD,kBAAmB8R,MAGxB,KAEjBjP,KAAKkP,YAAYD,GAAiB,K,oBAG3C,WAAU,IAAD,OACC/S,EAAS8D,KAAK2M,MAAdzQ,KAIR,OAFA8D,KAAK2N,SAAW,GAGd,oCACE,uBAAGyB,yBAAwBlT,EAAKgE,aAAamP,UAC1CrP,KAAKsP,qBAAqB7T,KAAI,SAACyS,EAAO9L,GAAR,OAC7B,EAAKmN,cAAc,EAAKC,iBAAiBtB,GAAQ9L,OAGpDpC,KAAKyP,+BACLzP,KAAK0P,+BACL1P,KAAK2P,4B,GA1J0BlE,aCKlCmE,GAAOrD,KAAO4B,KAAV,+EAKW0B,G,kDACnB,aAAe,uCACP,Q,iDAGR,WACE,OAAO,IAAIpQ,I,iCAGb,SAAoBgC,GAClB,OACE,kBAAC,GAAD,CACEqO,cAAe9P,KAAKjC,OACpB7B,KAAMuF,EAAMmK,MACZwC,QAASpO,S,iCAKf,SAAoB4L,EAAOzK,EAAUgN,GACnC,OACE,oCACE,kBAACyB,GAAD,CACEhB,OAAQhD,EAAMhH,WACdiK,YAAajD,EAAMmE,eACnBC,EAAG7B,IAGL,kBAACyB,GAAD,CAAMhB,OAAO,OAAOC,YAAa,GAAImB,EAAG7B,S,GA5BP8B,sBCVpBC,G,kDACnB,aAAe,uCACP,Q,iDAGR,WACE,OAAO,IAAIvM,M,GAN0BwM,yBCGpBC,G,kDACnB,WAAYC,GAAsB,IAAD,8BAC/B,cAAM,CACJ1Q,KAAM2Q,aAAUC,SAChBC,KAAM,YAAgB,IAAb/O,EAAY,EAAZA,MACP,GAAK4O,MACD,EAAKtS,OAAOK,WAAWoP,YAEvB,EAAKiD,aAAahP,GAAQ,CAC5BA,EAAMoL,iBADsB,IAGpB6D,EAASjP,EAATiP,KACK,SAATA,GAAiB,EAAKC,YACb,SAATD,GAAiB,EAAKE,aACb,SAATF,GAAiB,EAAKG,mBAMlCJ,aAAe,gBAAGK,EAAH,EAAGA,QAASJ,EAAZ,EAAYA,KAAZ,OACbI,IACU,SAATJ,GAA4B,SAATA,GAA4B,SAATA,IArBR,EAuBjCK,sBAAwB,kBACtB,EAAKhT,OACFK,WACA4S,sBACApQ,QAAO,SAAAqQ,GAAM,OAAIA,aAAkBlH,KACnCnJ,QAAO,SAAAqQ,GAAM,OAAKA,EAAOzD,eA5BG,EA+BjCmD,UAAY,WACV,IAAMxP,EAAW,EAAK4P,wBAChBG,EAAS/P,EAAS1F,KAAI,SAAAwV,GAAM,OAAIA,EAAOlG,QAAQpD,eAErD,EAAK5J,OAAOoT,UACV,CACEC,MAAOjQ,EACPuD,MAAOvD,EAASmG,QACd,SAACzL,EAAKwV,GAAN,4BAAmBxV,GAAnB,YAA2BwV,EAAKC,kBAChC,KAGJ,mBAEFnQ,EAASJ,SAAQ,SAAAsQ,GAAI,OAAIA,EAAK9P,YAC9B,EAAKxD,OAAOmE,gBAEZqP,aAAaC,QAAQ,YAAazE,KAAK0E,UAAUP,KAhDlB,EAoDjCN,WAAa,WACX,IAAMM,EAAS,EAAKH,wBAAwBtV,KAAI,SAAAwV,GAAM,OACpDA,EAAOlG,QAAQpD,eAGjB4J,aAAaC,QAAQ,YAAazE,KAAK0E,UAAUP,KAzDlB,EA6DjCL,YAAc,WACZ,IAAMjF,EAAQ,EAAK7N,OAAOK,WAEpBsT,EAAY3E,KAAKC,MAAMuE,aAAaI,QAAQ,cAClD,GAAKD,EAAL,CAEA9F,EAAMgG,iBAEN,IAAM/J,EAAS6J,EAAUjW,KAAI,SAAAoW,GAC3B,IAAMC,EAAgBlG,EACnBnD,qBACAsJ,yBAAyB,EAAKhU,QAC9BiU,WAAWH,EAAWlS,MACtBsS,cAAc,CAAE9F,cAAe0F,IAQlC,OANAC,EAAcI,YAAY,CACxBnU,OAAQ,EAAKA,OACb4D,KAAMkQ,EACNnQ,cAAe,eAGVoQ,KAGTjK,EAAO9G,SAAQ,SAAA+Q,GACblG,EAAMuG,QAAQL,GACdA,EAAc1Q,aAAY,MAG5BmQ,aAAaC,QACX,YACAzE,KAAK0E,UACH5J,EAAOpM,KAAI,SAAAqW,GAAa,OACtBA,EAAc/G,QAAQpD,iBAK5B,EAAK5J,OAAOoT,UAAU,CAAEC,MAAOvJ,GAAU,mBAEzC,EAAK9J,OAAOmE,kBArGmB,E,UADUkQ,WCCxBC,G,kDACnB,WAAYhC,GAAsB,IAAD,8BAC/B,cAAM,CACJ1Q,KAAM2Q,aAAUC,SAChBC,KAAM,YAAgB,IAAb/O,EAAY,EAAZA,MACF4O,MACD,EAAKtS,OAAOK,WAAWoP,YAEvB,EAAKiD,aAAahP,KACpBA,EAAMoL,iBACN,EAAKyF,qBAMb7B,aAAe,SAAAhP,GAAK,MAAmB,WAAfA,EAAMiP,MAfG,EAiBjC4B,aAAe,WACb,IAAMC,EAAW,EAAKxU,OACnBK,WACA4S,sBACApQ,QAAO,SAAAgL,GAAK,OAAKA,EAAM4B,cAE1B,EAAK2D,UAAUoB,GAEfA,EAASxR,SAAQ,SAAA6K,GAAK,OAAIA,EAAMrK,YAEhC,EAAKxD,OAAOmE,iBA3BmB,EAkCjCiP,UAAY,SAAAoB,GAEV,IAAMnB,EAAQmB,EAAS3R,QACrB,SAAAgL,GAAK,OAAIA,aAAiB7B,KAItBrF,EAAQ6N,EAAS3R,QACrB,SAAAgL,GAAK,OAAIA,aAAiBnM,KAItB+S,EAAapB,EAAM9J,QACvB,SAACzL,EAAKwV,GAAN,4BAAmBxV,GAAnB,YAA2BwV,EAAKC,kBAChC,IAGF,EAAKvT,OAAOoT,UACV,CAAEC,QAAO1M,MAAM,GAAD,mBAAM8N,GAAN,YAAqB9N,KACnC,oBArD6B,E,UADO0N,WCDrBK,G,kDACnB,WAAYpC,GAAsB,IAAD,8BAC/B,cAAM,CACJ1Q,KAAM2Q,aAAUC,SAChBC,KAAM,YAAgB,IAAb/O,EAAY,EAAZA,MACF4O,MACD,EAAKtS,OAAOK,WAAWoP,YAEvB,EAAKiD,aAAahP,KACpBA,EAAMoL,iBACN,EAAKyF,qBAMb7B,aAAe,SAAAhP,GAAK,OAAIA,EAAMqP,SAA0B,SAAfrP,EAAMiP,MAfd,EAiBjC4B,aAAe,WACb,IAAM1G,EAAQ,EAAK7N,OAAOK,WAEpBsU,EAAS9G,EACZoF,sBACApQ,QAAO,SAAAqQ,GAAM,OAAIA,aAAkBlH,KACnCnJ,QAAO,SAAAqQ,GAAM,OAAKA,EAAOzD,cACzB/R,KAAI,SAAAwV,GAAM,OAAIA,EAAOlG,WAExBa,EAAMgG,iBAENc,EAAO3R,SAAQ,SAAAgK,GACba,EAAMuG,QAAQpH,GACdA,EAAM3J,aAAY,MAGpB,EAAKrD,OAAOoT,UAAU,CAAEC,MAAOsB,GAAU,mBAEzC,EAAK3U,OAAOmE,iBAnCmB,E,UADUkQ,WCFxBO,G,kDACnB,WAAYtC,GAAsB,IAAD,8BAC/B,cAAM,CACJ1Q,KAAM2Q,aAAUC,SAChBC,KAAM,YAAgB,IAAb/O,EAAY,EAAZA,MACP,GAAK4O,MACD,EAAKtS,OAAOK,WAAWoP,YAEvB,EAAKiD,aAAahP,GAAQ,CAC5BA,EAAMoL,iBADsB,IAGpBiE,EAA4BrP,EAA5BqP,QAAS8B,EAAmBnR,EAAnBmR,SAAUlC,EAASjP,EAATiP,KACvBI,IAAY8B,GAAqB,SAATlC,EAC1B,EAAKmC,aACF,EAAKC,kBAMlBrC,aAAe,gBAAGK,EAAH,EAAGA,QAAS8B,EAAZ,EAAYA,SAAUlC,EAAtB,EAAsBA,KAAtB,OACZI,IAAqB,SAATJ,GAA4B,SAATA,IAC/BI,GAAW8B,GAAqB,SAATlC,GArBO,EAwBjCmC,WAAa,WACX,EAAK9U,OAAOgV,SAASC,OACrB,EAAKjV,OAAOmE,iBA1BmB,EA8BjC4Q,WAAa,WACX,EAAK/U,OAAOgV,SAASE,OACrB,EAAKlV,OAAOmE,iBAhCmB,E,UADSkQ,WCHtCc,GAAc,CAAC,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,KAK/BC,G,kDACnB,aAAe,IAAD,2CACN,CACJxT,KAAM2Q,aAAU8C,YAChB5C,KAAM,YAAgB,IAAb/O,EAAY,EAAZA,MACPA,EAAM4R,kBAEN,IAAMzH,EAAQ,EAAK7N,OAAOK,WAG1BwN,EAAM0H,YAAYvS,SAAQ,SAAAwS,GAAK,OAAIA,EAAMC,cAAa,MAEtD,IASIC,EATEC,EACJ1Y,KAAK2Y,KAAKlS,EAAMmS,QAAU,EAAI,KAAO,MAEjCC,EAAwBX,GAAYY,QACxCZ,GAAYlQ,SAAS4I,EAAMmI,gBACvBnI,EAAMmI,eACN,KAKJN,EADoB,OAAlBC,EACmB1Y,KAAKyC,IACxBoW,EAAwB,EACxBX,GAAY1Q,OAAS,GAGFxH,KAAKwC,IAAIqW,EAAwB,EAAG,GAG3D,IAAMG,EAAgBpI,EAAMmI,eAAiB,IAC7CnI,EAAMqI,aAAaf,GAAYO,IAC/B,IAAMS,EAAatI,EAAMmI,eAAiB,IAEpCI,EAAe,EAAKpW,OACvBqW,YACAC,wBACGC,EAAcH,EAAaI,MAC3BC,EAAeL,EAAaM,OAG5BC,EACJJ,EAAcJ,EAAaI,EAAcN,EACrCW,EACJH,EAAeN,EAAaM,EAAeR,EAGvCY,EAAUnT,EAAMmT,QAAUT,EAAaU,KACvCC,EAAUrT,EAAMqT,QAAUX,EAAaY,IAGvCC,GACHJ,EAAUhJ,EAAMqJ,cACjBjB,EACAM,EACIY,GACHJ,EAAUlJ,EAAMuJ,cACjBnB,EACAQ,EAEF5I,EAAMwJ,UACJxJ,EAAMqJ,aAAeP,EAAYM,EACjCpJ,EAAMuJ,aAAeR,EAAaO,GAEpC,EAAKnX,OAAOmE,gBAGZ0J,EAAM0H,YAAYvS,SAAQ,SAAAwS,GAAK,OAAIA,EAAMC,cAAa,S,UApEtBpB,WC+NzBiD,GApOS,SAAC,GAA4C,IAA1CtX,EAAyC,EAAzCA,OAAQuX,EAAiC,EAAjCA,2BAC3BC,EAAa,SAACrZ,GAAsB,IAAhBkV,EAAe,uDAAP,GAC1BoE,EAAQ,sBACTtX,OAAOC,OACRJ,EACGK,WACAqK,qBACAH,cALO,YAOT8I,IAODqE,EAAavZ,EAAKmF,gBACtB,GAAIoU,EAAY,CACd,IAAMpE,EAAOmE,EAASjX,MACpB,SAAAmX,GAAC,OACCA,EAAEjX,UACFvC,EACGmF,gBACApB,YACAxB,WAGPgX,EAAapE,EAAKxH,QAAQ4L,EAAWzR,WAErC9H,EAAKyZ,cAAcF,GACnBA,EAAWG,QAAQ1Z,GAGrB,IAAI2Z,EAAa3Z,EAAKoF,gBACtB,GAAIuU,EAAY,CACd,IAAMxE,EAAOmE,EAASjX,MACpB,SAAAmX,GAAC,OACCA,EAAEjX,UACFvC,EACGoF,gBACArB,YACAxB,WAGPoX,EAAaxE,EAAKxH,QAAQgM,EAAW7R,WAErC9H,EAAK4Z,cAAcD,GACnBA,EAAWD,QAAQ1Z,GASrB,OANIA,EAAKsE,wBACPtE,EAAKsE,uBAAuBuB,eAAe7F,GAEzCA,EAAKuE,wBACPvE,EAAKuE,uBAAuBsB,eAAe7F,GAEtCA,GAGT,MAAO,CAKL6Z,gBAAiB,YAAgB,IAAb3E,EAAY,EAAZA,MAClBrT,EAAOgV,SAASiD,IAAI,CAClBC,QAAS,WACP7E,EAAMrQ,SAAQ,SAAAsQ,GAAI,OAAItT,EAAOK,WAAW+T,QAAQd,OAElD2B,KAAM,WACJ5B,EAAMrQ,SAAQ,SAAAsQ,GAAI,OAAIA,EAAK9P,gBAQjC2U,gBAAiB,YAAsC,IAAnC7E,EAAkC,EAAlCA,KAAMtK,EAA4B,EAA5BA,eAAgBrC,EAAY,EAAZA,MACxC3G,EAAOgV,SAASiD,IAAI,CAClBC,QAAS,WACPX,EAA2BjE,EAAMtK,EAAeoP,QAElDnD,KAAM,WACJsC,EAA2BjE,EAAMtK,EAAeqP,QAEhD1R,EAAM0R,OAAOrV,SAAQ,SAAA7E,GAAI,OACvB6B,EAAOK,WAAWwX,QAAQL,EAAWrZ,WAS7Cma,UAAW,YAAe,IAAZna,EAAW,EAAXA,KACZ6B,EAAOgV,SAASiD,IAAI,CAClBC,QAAS,WACPlY,EAAOK,WAAWwX,QAAQL,EAAWrZ,KAEvC8W,KAAM,WACJ9W,EAAKqF,aAQX+U,YAAa,YAAwB,IAArBF,EAAoB,EAApBA,OAAQD,EAAY,EAAZA,MAChBI,EAAoB,SAACrL,EAAM+C,GAC/B,IAAM/R,EAAO6B,EAAOK,WAAWoY,QAAQtL,EAAK/F,IAY5C,GATAjJ,EAAKua,UACHvL,EAAK1P,OAAOC,KAAI,SAAAZ,GACd,IAAMiC,EAAQ,IAAI+E,aAAW,CAAE3F,SAE/B,OADAY,EAAMuF,YAAYxH,GACXiC,MAKPoO,EAAKpL,kBAAmB,CAC1B,IAAMtB,EAAST,EACZK,WACAoY,QAAQtL,EAAKpL,mBAChB5D,EAAK+F,qBAAqBzD,GAC1BA,EAAOuD,eAAe7F,QACjB,GAAI+R,EAAGnO,kBAAmB,CAC/B,IAAM4W,EAAY3Y,EACfK,WACAoY,QAAQvI,EAAGnO,mBACd5D,EAAK+F,qBAAqB,MAC1ByU,EAAUlV,kBAAkBtF,KAIhC6B,EAAOgV,SAASiD,IAAI,CAClBC,QAAS,WACPM,EAAkBJ,EAAOC,IAE3BpD,KAAM,WACJuD,EAAkBH,EAAQD,OAQhCQ,gBAAiB,YAAuB,IAApBvF,EAAmB,EAAnBA,MAAO1M,EAAY,EAAZA,MACzB3G,EAAOgV,SAASiD,IAAI,CAClBC,QAAS,WAEP7E,EAAMrQ,SAAQ,SAAAsQ,GAAI,OAAIA,EAAK9P,YAG3BmD,EAAM3D,SAAQ,SAAA7E,GAAI,OAAIA,EAAKqF,aAE7ByR,KAAM,WAMJtO,EACGjJ,KAAI,SAAAS,GAAI,OAAIqZ,EAAWrZ,EAAMkV,MAC7BwF,MAAK,SAACC,EAAIC,GACT,OACED,EAAGrW,yBAA2BsW,GAC9BD,EAAGpW,yBAA2BqW,EAEvB,EAGPA,EAAGtW,yBAA2BqW,GAC9BC,EAAGrW,yBAA2BoW,GAEtB,EAEH,KAER9V,SAAQ,SAAA7E,GAAI,OAAI6B,EAAOK,WAAWwX,QAAQ1Z,MAG7CkV,EAAMrQ,SAAQ,SAAAsQ,GAAI,OAAItT,EAAOK,WAAW+T,QAAQd,UAQtD0F,cAAe,YAAuB,IAApB3F,EAAmB,EAAnBA,MAAO1M,EAAY,EAAZA,MACjBsS,EAAsB,SAAA7N,GAE1BiI,EAAMjI,GAAOpI,SAAQ,YAAuB,IAApBoE,EAAmB,EAAnBA,GAAItK,EAAe,EAAfA,SACbkD,EAAOK,WAAW6Y,QAAQ9R,GAClC9C,YAAYxH,EAASK,EAAGL,EAASM,MAIxCuJ,EAAMyE,GAAOpI,SAAQ,YAAqB,IAAlBoE,EAAiB,EAAjBA,GAAI3J,EAAa,EAAbA,OACpBU,EAAO6B,EAAOK,WAAWoY,QAAQrR,GACvCjJ,EAAKua,UACHjb,EAAOC,KAAI,SAAAZ,GACT,IAAMiC,EAAQ,IAAI+E,aAAW,CAAE3F,SAE/B,OADAY,EAAMuF,YAAYxH,GACXiC,UAMfiB,EAAOgV,SAASiD,IAAI,CAClBC,QAAS,WACPe,EAAoB,UAEtBhE,KAAM,WACJgE,EAAoB,gBC/NTE,G,WACnB,WAAYjB,EAASjD,GAAO,oBAC1BhT,KAAKiW,QAAUA,EACfjW,KAAKgT,KAAOA,E,2CAGd,SAAQjV,GACNiC,KAAKiW,QAAQlY,K,kBAGf,SAAKA,GACHiC,KAAKgT,KAAKjV,O,KCNOoZ,G,WACnB,aAAe,oBACbnX,KAAKoX,Q,yCAGP,WACEpX,KAAKqX,MAAQ,GACbrX,KAAKoC,MAAQ,I,iBAGf,YAAwB,IAAlB6T,EAAiB,EAAjBA,QAASjD,EAAQ,EAARA,KACP9M,EAAU,IAAIgR,GAAQjB,EAASjD,GACrChT,KAAKqX,MAAM7U,OAASxC,KAAKoC,MACzBpC,KAAKqX,MAAM1W,KAAKuF,GAChBlG,KAAKoC,OAAS,I,kBAGhB,WACMpC,KAAKoC,MAAQ,IACfpC,KAAKoC,OAAS,EACEpC,KAAKqX,MAAMrX,KAAKoC,OACxB4Q,U,kBAIZ,WACMhT,KAAKoC,MAAQpC,KAAKqX,MAAM7U,SACVxC,KAAKqX,MAAMrX,KAAKoC,OACxB6T,UACRjW,KAAKoC,OAAS,O,cCtBdkV,GAAmB,SACvB7V,EACAmK,EACA2L,EACAC,GAEA,IAAM1a,EAdiB,SAACA,EAAO8O,GAC/B,IAAM6L,EAAsB7L,EAAMmI,eAAiB,IAC7C2D,EAAgB9L,EAAMqJ,aAAewC,EACrCE,EAAgB/L,EAAMuJ,aAAesC,EAE3C,OAAO,IAAI1c,QAAM+B,EAAM5B,EAAIwc,EAAe5a,EAAM3B,EAAIwc,GAStCC,CAAiBJ,EAAgB5L,GAEzC6L,EAAsB7L,EAAMmI,eAAiB,IAC7C8D,EAAmBN,EAAgBrc,EAAIuc,EACvCK,EAAmBP,EAAgBpc,EAAIsc,EAEvCM,EACJjb,EAAM5B,GACL2c,EAAmBL,EAAetc,GACnCuG,EAAMuW,qBACFC,EACJnb,EAAM3B,GACL2c,EAAmBN,EAAerc,GACnCsG,EAAMyW,qBAER,OAAOtd,EACL,IAAIG,QAAMgd,EAAWE,GACrBrM,EAAMlM,QAAQ5E,WAUH,SAASqd,GAAe1W,EAAOvF,GAC5C,IAAM2G,EAAQ3G,EAAKgB,mBACb6F,EAAO7G,EAAKiB,kBAEZib,EAAOd,GACX7V,EACAzB,KAAKjC,OAAOK,WACZ,CAAElD,EAAG8E,KAAK6X,iBAAkB1c,EAAG6E,KAAK8X,kBACpCjV,GAYF,IATK7C,KAAKqY,kBAAoBjd,EAAayH,EAAOE,KAMhD/C,KAAKqY,kBAAmB,GAGtBrY,KAAKqY,iBACP,GAAKnc,EAAKe,iBAkBH,CACL,IAAM6F,EAAS5G,EAAKmB,oBAChBjC,EAAa0H,EAAQC,GACvB7G,EAAKoc,YAAYpc,EAAKyG,kBACbvH,EAAayH,EAAOC,IAC7B5G,EAAKoc,YAAYpc,EAAKyG,kBACtB3C,KAAKuY,cACoB,eAAvBvY,KAAKuY,cACD,WACA,cAC0B,eAAvBvY,KAAKuY,cACVxV,EAAK7H,IAAMkd,EAAKld,GAClBgB,EAAKyG,iBAAiBN,YAAY+V,EAAKld,EAAG2H,EAAM1H,GAElB,aAAvB6E,KAAKuY,eACVxV,EAAK5H,IAAMid,EAAKjd,GAClBe,EAAKyG,iBAAiBN,YAAYQ,EAAM3H,EAAGkd,EAAKjd,QAjChD4H,EAAK7H,IAAMkd,EAAKld,GACb8E,KAAKuY,gBACRvY,KAAKuY,cAAgB,cAGI,aAAvBvY,KAAKuY,eACPrc,EAAKsc,SAAStc,EAAKuc,cAAc1V,EAAK7H,EAAGkd,EAAKjd,GAAI,IAE3C4H,EAAK5H,IAAMid,EAAKjd,IACpB6E,KAAKuY,gBACRvY,KAAKuY,cAAgB,YAGI,eAAvBvY,KAAKuY,eACPrc,EAAKsc,SAAStc,EAAKuc,cAAcL,EAAKld,EAAG6H,EAAK5H,GAAI,IA8BvDe,EAAKe,kBACN4F,EAAM3H,IAAMkd,EAAKld,GACjB2H,EAAM1H,IAAMid,EAAKjd,IAEbC,EAAayH,EAAOE,IAEU,eAAvB/C,KAAKuY,cADdrc,EAAKsc,SAAStc,EAAKuc,cAAcL,EAAKld,EAAG2H,EAAM1H,GAAI,GAInDe,EAAKsc,SAAStc,EAAKuc,cAAc5V,EAAM3H,EAAGkd,EAAKjd,GAAI,IAIvDe,EAAK8B,eAAeqE,YAAY+V,EAAKld,EAAGkd,EAAKjd,GAE7C6E,KAAKjC,OAAOmE,gB,OCrEIwW,G,SClBGC,G,kDACnB,WAAYC,GAAe,IAAD,8BACxB,cAAM,CAAE3R,KAAM,oBAoIhBkK,UAAY,WACN,EAAK0H,aACP,EAAK9a,OAAOoT,UACV,CACEiF,OAAQ,EAAK0C,aACb3C,MAAO,EAAK4C,cAAc,EAAKpa,SAEjC,eAGF,EAAKZ,OAAOoT,UAAU,CAAEjV,KAAM,EAAKwE,aAAe,cA5IpD,EAAKsY,eACH,IAAI5G,UAAO,CACTzS,KAAM2Q,aAAU2I,WAChBzI,KAAM,SAAA/O,GACJ,EAAK8W,mBAAgBjP,EACrB,EAAK+O,kBAAmB,EAExB,EAAK1Z,OAAS,EAAKZ,OAAOmb,gBAAgBzX,EAAMA,OAChD,EAAKqX,aAAe,EAAKC,cAAc,EAAKpa,QAC5C,EAAKka,cAAe,EAEpB,IAAMhe,EAAW,EAAKse,sBACpB,EAAKpb,OAAOqb,sBAAsB3X,EAAMA,OACxC,EAAK9C,QAGH,EAAKA,OAAO6O,WACd,EAAK6L,SAIP,EAAK3Y,YAAc,EAAK3C,OACrBub,mBACAtH,WAAW,EAAKrT,OAAOmI,WACvBmL,gBACH,EAAKvR,YAAY+D,QAAQ,EAAK9F,OAAOC,WAEhC,EAAK8B,aAKV,EAAKA,YAAYsB,qBAAqB,EAAKrD,QAC3C,EAAK+B,YAAY+B,gBAAgBJ,YAAYxH,GAC7C,EAAK6F,YAAY1C,eAAeqE,YAAYxH,GAE5C,EAAK6F,YAAYU,aAAY,GAC7B,EAAKrD,OAAOK,WAAWwT,iBAEvB,EAAKjT,OAAOyC,aAAY,GACxB,EAAKzC,OAAOoD,eAAe,EAAKrB,aAChC,EAAK3C,OAAOK,WAAWwX,QAAQ,EAAKlV,cAblC,EAAK2Y,aAkBb,EAAKL,eACH,IAAI5G,UAAO,CACTzS,KAAM2Q,aAAUiJ,SAChB/I,KAAM,SAAA/O,GAEJ,GAAI,EAAK+X,yBAKP,OAJA,EAAKvQ,UACL,EAAKlL,OAAOK,WAAWwT,iBACvB,EAAKjT,OAAOyC,aAAY,QACxB,EAAKrD,OAAOmE,gBAId,IAAM0J,EAAQ,EAAK7N,OAAOmb,gBAAgBzX,EAAMA,OAGhD,GAAImK,aAAiBP,aAGnB,OAFA,EAAKpC,eACL,EAAKlL,OAAOmE,gBAKd,GACE0J,aAAiBjI,cACjBiI,EAAMpH,mBAGN,OAAI,EAAK7F,OAAOC,YAAcgN,EAAMhN,WAClC,EAAKqK,UACL,EAAKlL,OAAOmE,qBACZ0W,EACEla,EAAkC,EAAKC,OAAQiN,MAKnD,EAAKlL,YAAYoV,cAAclK,GAE/BA,EAAM6N,iBACN,EAAKC,kCAAkC,EAAKhZ,aAC5C,EAAK3C,OAAOmE,qBACZ,EAAKiP,aAKP,IAAMwI,EAAU7b,EACd,EAAK4C,YACL,EAAK3C,QAEP,GAAI4b,EAAS,CAEX,GAAIA,EAAQ/a,YAAc,EAAK8B,YAAY9B,UASzC,OARA,EAAKqK,UACL,EAAKlL,OAAOmE,qBACZ0W,EACEla,EACE,EAAKgC,YACLiZ,IAMN,EAAKjZ,YAAYuB,qBAAqB0X,GACtCA,EAAQ5X,eAAe,EAAKrB,aAC5BiZ,EAAQvY,aAAY,GAGtB,EAAKwY,qBACH,EAAKlZ,YAAYF,wBAEnB,EAAKkZ,kCAAkC,EAAKhZ,aAC5C,EAAKyQ,gBA3Ha,E,iDAmJ1B,SAAcjV,GACZ,MAAO,CACLiJ,GAAIjJ,EAAKuC,QACTjD,OAAQU,EAAKqG,YAAY9G,KAAI,SAAAqB,GAAK,OAAIA,EAAMmB,iBAC5C6B,kBAAmB5D,EAAKuE,uBACpBvE,EAAKuE,uBAAuBhC,QAC5B,Q,qBAIR,WACEuB,KAAKrB,OAAO6C,kBAAkBxB,KAAKU,aACnCV,KAAKU,YAAYa,W,mCAMnB,SAAsB1G,EAAU8D,GAAS,IAC/B7D,EAAakF,KAAKjC,OAAOK,WAAW8B,aAApCpF,SACF+e,EAAelb,EAAO4D,YAEtBuX,EAAgB9Z,KAAK+Z,2BACzBF,EACAhf,GAGF,GAAIif,EAAc3d,SAAWrB,EAAW,EACtC,OAAO,IAAIC,QACT+e,EAAcjf,SAASK,EACvB4e,EAAcjf,SAASM,GAI3B,IAAM6e,EAAcha,KAAKia,yBACvBJ,EACAhf,GAGIqf,EAAkBtf,EAAKC,EAAUC,GAEvC,OAAO,IAAIC,QACY,MAArBif,EAAYG,KACRH,EAAYnf,SACZqf,EAAgBhf,EACC,MAArB8e,EAAYG,KACRH,EAAYnf,SACZqf,EAAgB/e,K,wCAIxB,SAA2BK,EAAQX,GACjC,OAAOW,EACJC,KAAI,SAAA2e,GAAW,oBACdje,SAAUnB,KAAKsB,MACbzB,EAASK,EAAIkf,EAAYvf,SAASK,EAClCL,EAASM,EAAIif,EAAYvf,SAASM,IAEjCif,MAEJ9S,QAAO,SAACzK,EAASC,GAAV,OACNA,EAAMX,SAAWU,EAAQV,SAAWW,EAAQD,O,2BAIlD,SAAcrB,GACZ,OAAOA,EACJC,KAAI,SAACqB,EAAOlB,GAAR,MAAe,CAAEsP,KAAM1P,EAAOI,GAAIqS,GAAIzS,EAAOI,EAAI,OACrDgF,QAAO,SAAAsN,GAAK,OAAIA,EAAMD,Q,+BAG3B,SAAkBzS,GAChB,OAAOwE,KAAKqa,cAAc7e,GAAQC,KAAI,SAAA6e,GAAY,OAChD/e,EAAM+e,EAAapP,KAAKrQ,SAAUyf,EAAarM,GAAGpT,UAC9C,CACEsf,KAAM,IACNtf,SAAUyf,EAAapP,KAAKrQ,SAASK,GAEvC,CACEif,KAAM,IACNtf,SAAUyf,EAAapP,KAAKrQ,SAASM,Q,sCAK/C,SAAyBK,EAAQX,GAC/B,OAAOmF,KAAKua,kBAAkB/e,GAC3BC,KAAI,SAAA0S,GAAI,oBACPhS,SAAUnB,KAAKwf,IAAI3f,EAASsT,EAAKgM,MAAQhM,EAAKtT,WAC3CsT,MAEJ7G,QAAO,SAACzK,EAASsR,GAAV,OACNA,EAAKhS,SAAWU,EAAQV,SAAWgS,EAAOtR,O,oCAIhD,WACE,OAAOzB,EACL4E,KAAKU,YAAYxD,mBACjB8C,KAAKU,YAAYvD,qB,+CASrB,WACE,IAAMwB,EAASqB,KAAKU,YAAYF,uBAEhC,GACEpF,EACE4E,KAAKU,YAAYxD,mBACjByB,EAAOxB,mBAIPO,EAAgBsC,KAAKU,YAAY/C,oBAAqBgB,IAEtDqB,KAAKU,YAAY4X,YACftY,KAAKU,YAAY+B,qBAVvB,CAgBA,GACE/E,EAAgBsC,KAAKU,YAAYxD,mBAAoByB,IACrDjB,EAAgBsC,KAAKU,YAAY/C,oBAAqBgB,GACtD,CACA,IAAKqB,KAAKU,YAAYzD,iBAGpB,OAFA+C,KAAKU,YAAYa,cACjB5C,EAAO6C,kBAAkBxB,KAAKU,aAMhC,GAFAV,KAAKU,YAAY4X,YAAYtY,KAAKU,YAAY+B,iBAG5CrH,EACE4E,KAAKU,YAAYxD,mBACjByB,EAAOtB,qBAGT,OACEK,EAAgBsC,KAAKU,YAAYvD,kBAAmBwB,IAEpDqB,KAAKU,YAAYa,cACjB5C,EAAO6C,kBAAkBxB,KAAKU,eAIhCV,KAAKU,YACF+B,gBACAJ,YAAY1D,EAAOxB,wBAEtB6C,KAAK4Z,qBAAqBjb,IAK1BA,EAAO1B,kBAEPlB,EACEiE,KAAKU,YAAYxD,mBACjByB,EAAOtB,oBACP2C,KAAKU,YAAY/C,sBAGnBqC,KAAKU,YACF+B,gBACAJ,YAAY1D,EAAOtB,wB,kCAQ5B,SAAqBnB,GACnB,IAAMyC,EAAS,CACbkE,MAAO3G,EAAKgB,mBACZ4F,OAAQ5G,EAAKmB,oBACb0F,KAAM7G,EAAKiB,kBACXsd,WAAYve,EAAKwe,yBAGnBxe,EAAKqM,kBAAkBxH,SAAQ,SAAAF,GACzBnD,EAAgBxB,EAAKiB,kBAAmB0D,IAC1CA,EAAE4B,gBAAgBJ,YAAYnG,EAAKiB,sBAIvC,IAyBMwd,EAzBuBze,EAAKqM,kBAAkB3H,QAAO,SAAAC,GACzD,QAAKzF,EAAayF,EAAE3D,mBAAoByB,EAAOoE,SAG1C7G,EAAKe,mBAAqB4D,EAAE5D,mBAE7Bf,EAAKe,kBAAoB4D,EAAE5D,mBACzB7B,EAAauD,EAAOmE,OAAQjC,EAAExD,uBAOlCtB,EACE4C,EAAOoE,KACPpE,EAAO8b,WACP5Z,EAAElD,0BAQwC,GAEhD,GAAKgd,EAAL,CAEA,IAAMC,EAAYD,EAAmBD,wBAC/BG,EAAUF,EAAmBxd,kBAE9BjB,EAAKe,kBACRf,EAAKsc,SAAStc,EAAKuc,cAAcmC,EAAU1f,EAAG0f,EAAUzf,GAAI,GAG9De,EAAK8B,eAAeqE,YAAYwY,EAAQ3f,EAAG2f,EAAQ1f,GAE/Ce,EAAK4e,cAAgB5e,EAAKe,kBAC5Bf,EAAKoc,YAAYpc,EAAKyG,kBAGxBzG,EAAKsF,kBAAkBmZ,GACvB,IAAM7a,EAAoB6a,EAAmBla,uBACzCX,IACF5D,EAAK+F,qBAAqBnC,GAC1BA,EAAkBiC,eAAe7F,IAEnC8D,KAAK6Y,cAAe,EACpB8B,EAAmBpZ,SAGjBnG,EAAac,EAAKgB,mBAAoBhB,EAAKiB,mBAE3CjB,EAAKqF,SAELrF,EAAKkF,aAAY,GAGnBpB,KAAK+a,wBAAwB7e,M,qCAO/B,SAAwBA,GAAO,IACrBpB,EAAakF,KAAKjC,OAAOK,WAAW8B,aAApCpF,SAERoB,EACGqM,kBACA3H,QAAO,SAAAC,GAAC,OAAKnD,EAAgBmD,EAAE3D,mBAAoBhB,MACnD6E,SAAQ,SAAAF,GACP,IAAMma,EAAYpgB,EAChBoB,EAAmB6E,EAAE3D,mBAAoBhB,GACzCpB,GAGF+F,EAAE4B,gBAAgBJ,YAAY2Y,EAAU9f,EAAG8f,EAAU7f,GAEjDY,EAAS8E,EAAE3D,mBAAoB2D,EAAE1D,qBAIjC0D,EAAE5D,kBACJ4D,EAAEyX,YAAYzX,EAAE8B,kBAIhBpH,EAAMW,EAAKgB,mBAAoBhB,EAAKyB,qBAEpCkD,EAAE2X,SACA3X,EAAE4X,cACA5X,EAAE1D,kBAAkBjC,EACpB2F,EAAE3D,mBAAmB/B,GAEvB,GAGF0F,EAAE2X,SACA3X,EAAE4X,cACA5X,EAAE3D,mBAAmBhC,EACrB2F,EAAE1D,kBAAkBhC,GAEtB,S,4BASV,SAAesG,GACb0W,GAAe8C,KAAKjb,KAAMyB,EAAOzB,KAAKU,iB,GAxcMwa,8BCrC3BC,G,kDACnB,aAAe,uCACP,CACJlU,KAAM,gB,oFAIV,WAAgBmU,GAAhB,SAAA7R,EAAA,6DACE,iEAAgB6R,GAChBpb,KAAKjC,OAAOK,WAAWwT,iBAFzB,SAGQ5R,KAAKjC,OAAOmE,eAAc,GAHlC,OAMElC,KAAKjC,OACFK,WACAkV,YACAvS,SAAQ,SAAAwS,GAAK,OAAIA,EAAMC,cAAa,MAEvCxT,KAAKqb,eAAiBrb,KAAKjC,OAAOK,WAAW6W,aAC7CjV,KAAKsb,eAAiBtb,KAAKjC,OAAOK,WAAW+W,aAZ/C,gD,gFAeA,SAAYiD,GACV,mEAAkBA,GAElBpY,KAAKjC,OACFK,WACAkV,YACAvS,SAAQ,SAAAwS,GAAK,OAAIA,EAAMC,cAAa,Q,4BAGzC,SAAe/R,IAGuB,IAAlCA,EAAMA,MAAM8Z,YAAYC,OACvB/Z,EAAMA,MAAM8Z,YAAYE,iBAI3Bzb,KAAKjC,OACFK,WACAgX,UACCpV,KAAKqb,eAAiB5Z,EAAMia,cAC5B1b,KAAKsb,eAAiB7Z,EAAMka,eAEhC3b,KAAKjC,OAAOmE,qB,GA7C6BgZ,8BCgBxBU,G,kDACnB,WAAYhD,GAAe,IAAD,8BACxB,cAAM,CAAE3R,KAAM,mBA+GhBkK,UAAY,WACV,EAAKpT,OAAOoT,UAAU,CAAEjV,KAAM,EAAKA,MAAQ,cA9G3C,EAAK8c,eACH,IAAI5G,UAAO,CACTzS,KAAM2Q,aAAU2I,WAChBzI,KAAM,SAAA/O,GACJ,EAAK8W,mBAAgBjP,EACrB,EAAK+O,kBAAmB,EAExB,EAAK9T,KAAO,EAAKxG,OAAOmb,gBAAgBzX,EAAMA,OAG1C,EAAK8C,gBAAgBZ,IACvB,EAAKY,KAAKiJ,YAMZ,EAAKtR,KAAO,EAAKqI,KAAKsX,kBAEjB,EAAK3f,MAKV,EAAKA,KAAKkF,aAAY,GACtB,EAAKlF,KAAKyZ,cAAc,EAAKpR,MAC7B,EAAKxG,OAAOK,WAAWwT,iBACvB,EAAK7T,OAAOK,WAAWwX,QAAQ,EAAK1Z,MACpC,EAAKqI,KAAKkV,kBARR,EAAKJ,SAPL,EAAKA,YAoBb,EAAKL,eACH,IAAI5G,UAAO,CACTzS,KAAM2Q,aAAUiJ,SAChB/I,KAAM,SAAA/O,GACJ,IAAMmK,EAAQ,EAAK7N,OAAOmb,gBAAgBzX,EAAMA,OAYhD,IAREvD,OAAO4d,eAAelQ,aAAkB7B,GACxC,EAAKgS,mBAAmBta,EAAMA,UAE9B,EAAKvF,KAAKqF,SACV,EAAKxD,OAAOmE,iBAKZ0J,aAAiBjI,GACjB,EAAKY,KAAKyX,cAAcpQ,GAGxB,OAAI,EAAKrH,KAAK3F,YAAcgN,EAAMhN,WAChC,EAAK1C,KAAKqF,SACV,EAAKxD,OAAOmE,qBACZ0W,EACEla,EAAkC,EAAK6F,KAAMqH,MAKjD,EAAK1P,KAAK4Z,cAAclK,GACxBA,EAAM6N,iBACN,EAAK1b,OAAOmE,qBACZ,EAAKiP,aAKP,IAAMwI,EAAU7b,EAAe,EAAK5B,KAAM,EAAK6B,QAC/C,GAAI4b,EAAS,CAEX,GAAIA,EAAQ/a,YAAc,EAAK1C,KAAK0C,UAMlC,OALA,EAAK1C,KAAKqF,SACV,EAAKxD,OAAOmE,qBACZ0W,EACEla,EAAkC,EAAKxC,KAAMyd,IAKjD,IAAMsC,EAAU,EAAKle,OAClBme,kBAAkBvC,GAClB1H,gBACHgK,EAAQxF,UAAU,EAAKva,KAAKqG,YAAY0Z,WACxCA,EAAQnG,cAAc,EAAK5Z,KAAKmF,iBAChC4a,EAAQja,qBAAqB2X,GAC7BsC,EAAQxX,QAAQkV,EAAQ/a,WAExB+a,EAAQ5X,eAAeka,GACvBtC,EAAQvY,aAAY,GAEpB,EAAKlF,KAAKqF,SACV,EAAKxD,OAAOK,WAAWwX,QAAQqG,GAC/B,EAAK/f,KAAO+f,EAGd,EAAK9K,gBAtGa,E,sDAoH1B,SAAmB1P,GACjB,I5B1FmBpG,EAAIC,EAAI6gB,E4B0FrBrf,EAAQkD,KAAKjC,OAAOqb,sBAAsB3X,GAE1CgU,EAAazV,KAAK9D,KAAKmF,gBACvB+a,EAAiB3G,EAAWlB,MAC5B8H,EAAqB5G,EAAWxX,cAEtC,O5BhGmB5C,E4BgGLyB,E5BhGSxB,E4BgGF+gB,E5BhGMF,E4BgGcC,E5B/F3CphB,KAAKwf,IAAInf,EAAGH,EAAII,EAAGJ,IAAMihB,GACzBnhB,KAAKwf,IAAInf,EAAGF,EAAIG,EAAGH,IAAMghB,I,4B4BoGzB,SAAe1a,GACb0W,GAAe8C,KAAKjb,KAAMyB,EAAOzB,KAAK9D,U,GAnIIgf,8BCMzBoB,G,kDACnB,aAAe,IAAD,8BACZ,cAAM,CACJrV,KAAM,gBAuDVsV,kBAAoB,kBAClB,EAAKxe,OACFK,WACA4S,sBACApQ,QACC,SAAAgL,GAAK,OAAI1N,OAAO4d,eAAelQ,aAAkB7B,KAElDtO,KAAI,SAAA4V,GAAI,MAAK,CACZlM,GAAIkM,EAAK5S,QACT5D,SAAUwW,EAAKpT,mBAlEP,EAqEdue,eAAiB,kBACf,EAAKze,OACFK,WACA4S,sBACApQ,QACC,SAAAgL,GAAK,OAAI1N,OAAO4d,eAAelQ,aAAkB7B,KAElDtO,KAAI,SAAA4V,GAAI,OAAIA,EAAKC,iBACjBrQ,OACAxF,KAAI,SAAAS,GAAI,MAAK,CACZiJ,GAAIjJ,EAAKuC,QACTjD,OAAQU,EAAKqG,YAAY9G,KAAI,SAAAqB,GAAK,OAAIA,EAAMmB,sBAhFpC,EAwNdwe,iBAAmB,SAAAvgB,GACjB,IAAM2G,EAAQ3G,EAAKgB,mBACb6F,EAAO7G,EAAKiB,kBAElB,GACGjB,EAAKe,kBACN4F,EAAM3H,IAAM6H,EAAK7H,GACjB2H,EAAM1H,IAAM4H,EAAK5H,GAGZ,GAAIe,EAAKe,iBAAkB,CAGV,eAFA,EAAKyf,eAAexgB,EAAKuC,SAG7CvC,EAAKyG,iBAAiBN,YAAYU,EAAK7H,EAAG2H,EAAM1H,GAEhDe,EAAKyG,iBAAiBN,YAAYQ,EAAM3H,EAAG6H,EAAK5H,GAGlD,IAAM2H,EAAS5G,EAAKmB,qBAEhBjC,EAAayH,EAAOC,IAAW1H,EAAa0H,EAAQC,KACtD7G,EAAKoc,YAAYpc,EAAKyG,wBAbxBzG,EAAKsc,SAAStc,EAAKuc,cAAc5V,EAAM3H,EAAG6H,EAAK5H,GAAI,GAkBrD,EAAKwhB,uBAAuBzgB,IA9O5B,EAAK8c,eACH,IAAI5G,UAAO,CACTzS,KAAM2Q,aAAU2I,WAChBzI,KAAM,SAAA/O,GACA,EAAK1D,OAAOK,WAAWoP,WACzB,EAAK6L,SAIP,EAAKuD,iBAAmB,IAAI7hB,QAAM,EAAG,GAErC,EAAK8hB,QAAU,EAAK9e,OACjB+e,oBACAC,iBAAiBtb,GAEf,EAAKob,SAKL,EAAKA,QAAQ3Z,cAChB,EAAKnF,OAAOK,WAAWwT,iBAGzB,EAAK8K,eAAiB,EAAKM,kBAAkB,EAAKH,SAElD,EAAKA,QAAQzb,aAAY,GACzB,EAAKrD,OAAOmE,gBAEZ,EAAK+a,YAAc,EAAKV,oBACxB,EAAKW,YAAc,EAAKV,kBAdtB,EAAKnD,aAmBb,EAAKL,eACH,IAAI5G,UAAO,CACTzS,KAAM2Q,aAAUiJ,SAChB/I,KAAM,WAE0B,IAA5B,EAAKoM,iBAAiB1hB,GACM,IAA5B,EAAK0hB,iBAAiBzhB,GAKxB,EAAKgW,gBAnDC,E,6CAuFd,WACEnR,KAAKjC,OAAOoT,UACV,CACEC,MAAO,CACLgF,OAAQpW,KAAKid,YACb9G,MAAOnW,KAAKuc,qBAEd7X,MAAO,CACL0R,OAAQpW,KAAKkd,YACb/G,MAAOnW,KAAKwc,mBAGhB,mB,uBAIJ,SAAUW,GACR,iEAAgBA,GAChBnd,KAAKod,iBAAmB,K,8BAM1B,SAAiB/L,GAAO,IAAD,OACrB,OAAMnT,OAAO4d,eAAezK,aAAiBtH,EAGtC7L,OAAOC,OAAOkT,EAAKxG,YACvBpP,KAAI,SAAAC,GAAC,OAAIwC,OAAO0M,QAAQlP,EAAE4C,eAC1BsC,QAAO,SAAAyc,GAAK,OAAIA,EAAM7a,OAAS,KAC/BvB,OACAxF,KAAI,mCAAE0J,EAAF,KAAMjJ,EAAN,YACH,CAACiJ,EAAIjJ,IADF,mBAEA,EAAKohB,mBAAmBphB,QAE5B+E,OAVM,K,gCAaX,SAAmB/E,GAAO,IAAD,OACvB,OAAOA,EACJqM,kBACA9M,KAAI,SAAAoF,GAAC,OAAK,CAACA,EAAEpC,QAASoC,IAAjB,mBAAwB,EAAKyc,mBAAmBzc,QACrDI,S,+BAGL,SAAkBoQ,GAAO,IAAD,OACtB,OAAOrR,KAAKud,iBAAiBlM,GAAM/J,QACjC,SAACkW,EAAD,0BAAOrY,EAAP,KAAWjJ,EAAX,wBAAC,eACIshB,GADL,kBAEGrY,EAAK,EAAKsY,iBAAiBvhB,OAE9B,M,8BAIJ,SAAiBA,GACf,IAAKA,EAAKe,iBACR,OAAO,KAGT,IAAM4F,EAAQ3G,EAAKgB,mBACb4F,EAAS5G,EAAKmB,oBAEpB,OAAI9B,EAAMsH,EAAOC,GAAgB,WAC7BhH,EAAM+G,EAAOC,GAAgB,aAE1B,O,4BAGT,SAAerB,GAAQ,IAAD,OAEpB,GAAsC,IAAlCA,EAAMA,MAAM8Z,YAAYC,MAA5B,CAEA,IAAMkC,EAAsB9iB,EAC1B,IAAIG,QACF0G,EAAMuW,qBACNvW,EAAMyW,sBAERlY,KAAKjC,OAAOK,WAAW8B,aAAapF,UAIlCM,EAAasiB,EAAqB1d,KAAK4c,oBAG3C5c,KAAK4c,iBAAmBc,EAExB1d,KAAKjC,OACFK,WACA4S,sBACApQ,QACC,SAAAqQ,GAAM,OAAI/S,OAAO4d,eAAe7K,aAAmBlH,KAEpDhJ,SAAQ,SAAAkQ,GACP,EAAK0M,WAAW1M,EAAQxP,GACxB,EAAKmc,gBAAgB3M,MAGzBjR,KAAKjC,OAAOmE,oB,wBAGd,SAAW+O,EAAQxP,GACjB,IAAIwP,EAAOzD,WAAX,CAIKxN,KAAKod,iBAAiBnM,EAAOxS,WAChCuB,KAAKod,iBAAiBnM,EAAOxS,SAAW,CACtC3B,MAAOmU,EAAOhT,cACd4f,KAAM5M,IAIV,IAAM6M,EAAU9d,KAAKod,iBAAiBnM,EAAOxS,SAAS3B,MAChD8O,EAAQ5L,KAAKjC,OAAOK,WAE1B6S,EAAO5O,YACLuJ,EAAMmS,gBAAgBD,EAAQ5iB,EAAIuG,EAAMuW,sBACxCpM,EAAMmS,gBAAgBD,EAAQ3iB,EAAIsG,EAAMyW,0B,6BAI5C,SAAgB7G,GAAO,IAAD,OACpBnT,OAAOC,OAAOkT,EAAKxG,YAAY9J,SAAQ,SAAAwD,GAAI,OACzCrG,OAAOC,OAAOoG,EAAKjG,YAAYyC,QAAQ,EAAK0b,uB,oCAkChD,SAAuBvgB,GAAO,IAAD,OACNA,EAAKqM,kBAEbxH,SAAQ,SAAAL,GACnB,EAAKsd,yBAAyBtd,GAG9B,EAAK+b,iBAAiB/b,Q,sCAS1B,SAAyBA,GAAc,IAC7B5F,EAAakF,KAAKjC,OAAOK,WAAW8B,aAApCpF,SAEF+H,EAAQnC,EAAY+B,gBACpBwb,EAAiBrjB,EACrBoB,EACE6G,EAAM5E,cACNyC,EAAYF,wBAEd1F,GAIF,GAFA+H,EAAMR,YAAY4b,EAAe/iB,EAAG+iB,EAAe9iB,GAE/CuF,EAAYD,uBAAwB,CACtC,IAAMsC,EAAOrC,EAAY1C,eACnBkgB,EAAgBtjB,EACpBoB,EACE+G,EAAK9E,cACLyC,EAAYD,wBAEd3F,GAEFiI,EAAKV,YAAY6b,EAAchjB,EAAGgjB,EAAc/iB,Q,GA7RV+f,8BCTvBiD,G,kDACnB,aAAe,uCACP,CACJlX,KAAM,kB,6CAIV,SAAUkW,GACR,iEAAgBA,GAChBnd,KAAKuT,MAAQ,IAAI6K,uBACjBpe,KAAKjC,OAAOK,WAAWigB,SAASre,KAAKuT,S,yBAGvC,SAAY6E,GACV,mEAAkBA,GAClBpY,KAAKuT,MAAMhS,SACXvB,KAAKjC,OAAOmE,kB,8BAGd,SAAiBT,GACf,IAAM6c,EAAMte,KAAKjC,OAAO6Z,iBACtBnW,EAAMA,MAAMmT,QACZnT,EAAMA,MAAMqT,SAGd,MAAO,CACLD,KACEyJ,EAAIpjB,EAAI8E,KAAK6X,iBAAmB7X,KAAK6X,iBAAmByG,EAAIpjB,EAC9D6Z,IACEuJ,EAAInjB,EAAI6E,KAAK8X,iBAAmB9X,KAAK8X,iBAAmBwG,EAAInjB,EAC9DoZ,MAAOvZ,KAAKwf,IAAI8D,EAAIpjB,EAAI8E,KAAK6X,kBAC7BpD,OAAQzZ,KAAKwf,IAAI8D,EAAInjB,EAAI6E,KAAK8X,kBAC9ByG,MACED,EAAIpjB,EAAI8E,KAAK6X,iBAAmB7X,KAAK6X,iBAAmByG,EAAIpjB,EAC9DsjB,OACEF,EAAInjB,EAAI6E,KAAK8X,iBAAmB9X,KAAK8X,iBAAmBwG,EAAInjB,K,4BAIlE,SAAesG,GAAQ,IAAD,OACpBzB,KAAKuT,MAAMkL,OAAOze,KAAK0e,iBAAiBjd,IAExC,IAAMkd,EAAW3e,KAAKjC,OAAOqb,sBAAsB,CACjDxE,QAAS5U,KAAK4e,SACd9J,QAAS9U,KAAK6e,WAEZpd,EAAMuW,qBAAuB,IAC/B2G,EAASzjB,GAAKF,KAAKwf,IAAI/Y,EAAMuW,uBAE3BvW,EAAMyW,qBAAuB,IAC/ByG,EAASxjB,GAAKH,KAAKwf,IAAI/Y,EAAMyW,uBAE/B,IAAM4G,EAAO,IAAIC,YACfJ,EACA3jB,KAAKwf,IAAI/Y,EAAMuW,sBACfhd,KAAKwf,IAAI/Y,EAAMyW,uBAGZlY,KAAKjC,OAAOK,WAAWoP,YAC1BxN,KAAKjC,OACFK,WACA4gB,uBACAje,SAAQ,SAAA6K,GACP,GAAIA,EAAMqT,eAAgB,CACxB,IAAK,EAAKC,eAAetT,GAAQ,OAEjC,IAAMuT,EAASvT,EAAMqT,iBAEnBH,EAAKM,cAAcD,EAAOE,eAC1BP,EAAKM,cAAcD,EAAOG,kBAE1B1T,EAAMxK,aAAY,GAElBwK,EAAMxK,aAAY,OAM5BpB,KAAKjC,OAAOmE,kB,4BAGd,SAAe0J,GACb,QACIA,aAAiBnM,iBAAgBmM,aAAiB/J,mB,GApFXqZ,8BCJ1BqE,G,kDACnB,aAAe,IAAD,8BACZ,cAAM,CACJtY,KAAM,eAEH5C,KAAO,CAAC,SAEb,EAAK2U,eACH,IAAI5G,UAAO,CACTzS,KAAM2Q,aAAU2I,WAChBzI,KAAM,SAAA/O,GACJ,IAAMob,EAAU,EAAK9e,OAClB+e,oBACAC,iBAAiBtb,GAGfob,GAGHA,EAAQzb,aAAY,GACpB,EAAKrD,OAAOmE,iBAHZ,EAAKsd,oBAAoB,IAAIrB,GAAqB1c,OAhB9C,E,UAD4Bge,UCOvBC,G,kDACnB,WAAY9G,GAAe,IAAD,8BACxB,cAAM,CACJ3R,KAAM,oBAGH0Y,YAAc,CAAC,IAAIJ,IACxB,EAAKK,WAAa,IAAIzE,GACtB,EAAK0E,YAAc,IAAIjE,GAAiBhD,GACxC,EAAKkH,cAAgB,IAAInH,GAAmBC,GAC5C,EAAKmH,UAAY,IAAIzD,GAGrB,EAAKtD,eACH,IAAI5G,UAAO,CACTzS,KAAM2Q,aAAU2I,WAChBzI,KAAM,SAAA/O,GACJ,IAAMob,EAAU,EAAK9e,OAClB+e,oBACAC,iBAAiBtb,GAGfob,EAIIA,aAAmBlZ,EAC1B,EAAK6b,oBAAoB,EAAKK,YAAape,GAGpCob,aAAmBpd,EAC1B,EAAK+f,oBAAoB,EAAKM,cAAere,GAI7C,EAAK+d,oBAAoB,EAAKO,UAAWte,GAZzC,EAAK+d,oBAAoB,EAAKI,WAAYne,OAmBlD,EAAKuX,eACH,IAAI5G,UAAO,CACTzS,KAAM2Q,aAAU0P,YAChBxP,KAAM,SAAA/O,GACJ,EAAK+d,oBAAoB,EAAKI,WAAYne,OA7CxB,E,UADQge,UCDfQ,GACnB,WAAYrZ,EAAYyJ,EAAqBuI,GAAe,IAAD,gCAU3DnL,UAAY,kBAAM,EAAK1P,QAVoC,KAY3DK,SAAW,kBAAM,EAAKL,OAAOK,YAZ8B,KAiB3D8hB,iBAAmB,WACjB,EAAKniB,OAASoiB,IAAa,CACzBC,kCAAkC,EAClCC,iCAAiC,IAGnC,EAAKtiB,OAAOgV,SAAW,IAAIoE,GAC3B,EAAKpZ,OAAOuiB,iBAAiBjL,GAAgB,IAE7C,EAAKtX,OACFwiB,kBACAC,UAAU,IAAId,GAAO,EAAK9G,eAEb,CACdnG,GACArC,GACAiC,GACAM,GACAQ,IAEMpS,SAAQ,SAAAqR,GAAM,OACpB,EAAKrU,OACF+e,oBACA9D,eAAe,IAAI5G,EAAO,EAAK/B,yBAGpC,EAAKtS,OAAO0iB,mBAAmBC,gBAAgB,IAAIxQ,IACnD,EAAKnS,OAAOub,mBAAmBoH,gBAAgB,IAAI7Q,IAEnD,EAAK8Q,sBA9CoD,KAiD3DC,gBAAkB,WAChB,EAAKhV,MAAQ,IAAIiV,eAEjB,EAAKjV,MAAMkV,YAAY,IACvB,EAAKlV,MAAMmV,WAAU,GACrB,EAAKnV,MAAM0U,iBAAiB,CAC1BU,aAAc,SAAAvf,GACZ,IAAM9B,EAAO8B,EAAMwf,SACN,kBAATthB,GAA0B,EAAKuhB,iBAAiBzf,GACvC,gBAAT9B,GAAwB,EAAKwhB,eAAe1f,MAGpD,EAAK2f,cAEL,EAAKrjB,OAAOsjB,SAAS,EAAKzV,QA/D+B,KAkE3D+U,mBAAqB,WACnB,EAAK/Z,WAAW7F,SAAQ,SAAA8F,GACtB,EAAK9I,OAAOujB,mBAAmBZ,gBAAgB7Z,OApEQ,KA2E3Dc,UAAY,kBAAM,EAAKiE,MAAMjE,aA3E8B,KA6E3D4Z,KAAO,SAAAC,GACL,EAAKzjB,OAAOgV,SAASqE,QACrB,EAAKxL,MAAM6V,iBAAiBD,EAAS,EAAKzjB,QAC1C,EAAKqjB,cACL,EAAKrjB,OAAOmE,iBAjF6C,KAuF3D6e,UAAY,SAAAW,GACV,EAAK9V,MAAMmV,UAAUW,GACrB,EAAKA,OAASA,GAzF2C,KA4F3DlU,SAAW,kBAAM,EAAKkU,QA5FqC,KAiG3DC,QAAU,kBAAM,EAAK5jB,OAAOmE,iBAjG+B,KAmG3Dkf,YAAc,WACZ,EAAKF,iBAAiB,CACpBU,QAAS,EAAKhW,MAAMqJ,aACpB4M,QAAS,EAAKjW,MAAMuJ,eAGtB,EAAKgM,eAAe,CAClBW,KAAM,EAAKlW,MAAMmI,kBA1GsC,KA8G3DmN,iBAAmB,YAA2B,IAAxBU,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QAC7Bxe,SAASC,KAAKye,MAAMC,YAAY,aAAhC,UAAiDJ,EAAjD,OACAve,SAASC,KAAKye,MAAMC,YAAY,aAAhC,UAAiDH,EAAjD,QAhHyD,KAmH3DV,eAAiB,YAAe,IAAZW,EAAW,EAAXA,KACVhnB,EAAa,EAAK8Q,MAAM1L,aAAxBpF,SACRuI,SAASC,KAAKye,MAAMC,YAClB,cADF,UAEMlnB,EAAWgnB,EAAQ,IAFzB,QArHyD,KA8H3D3U,oBAAsB,SAAC1L,EAAOoF,GAAe,IACnCkB,EAAU,EAAKnB,WAAWrI,MAChC,SAAA0jB,GAAC,OAAIA,EAAEtiB,OAASkH,EAAUlH,QADpBoI,MA4BFjL,EAAQ2E,EARuB,WAAO,IAAD,EACxB,EAAK1D,OAAOqb,sBAAsB3X,GAA3CvG,EADiC,EACjCA,EAAGC,EAD8B,EAC9BA,EACX,OAAO,IAAIJ,QACY,GAArBC,KAAKC,MAAMC,EAAI,IACM,GAArBF,KAAKC,MAAME,EAAI,KAKf+mB,GAzB2B,WAC7B,IAAMhO,EAAa,EAAKtI,MAAMmI,eAAiB,IAEzC7Y,GACF,EAAK0Q,MAAMqJ,aAAef,EAC5BiO,OAAOC,YAA2B,EAAblO,GACjB/Y,GACF,EAAKyQ,MAAMuJ,aAAejB,EAC5BiO,OAAOE,aAA4B,EAAbnO,GAExB,OAAO,IAAInZ,QACY,GAArBC,KAAKC,MAAMC,EAAI,IACM,GAArBF,KAAKC,MAAME,EAAI,KAcfmnB,GAEEjR,EAAO,IAAItJ,EAAMlB,EAAUE,eAAgBF,EAAUlH,MAC3D0R,EAAKhP,YAAYvF,GACjB,EAAK8O,MAAMuG,QAAQd,GAEnB,EAAKtT,OAAOoT,UAAU,CAAEC,MAAO,CAACC,IAAS,mBACzC,EAAKtT,OAAOmE,iBApK6C,KAuK3DqgB,oBAAsB,SAAClR,EAAMtK,GAC3B,IAAMyb,EAAuBnR,EAAKtK,eAC5BmW,EAAc7L,EAAKC,cAEzB,EAAKgE,2BAA2BjE,EAAMtK,GAEtC,EAAKhJ,OAAOoT,UACV,CACEE,OACAtK,eAAgB,CACdqP,OAAQoM,EACRrM,MAAO9E,EAAKtK,gBAEdrC,MAAO,CACL0R,OAAQ8G,EACR/G,MAAO9E,EAAKC,gBAGhB,mBAGF,EAAKvT,OAAOmE,iBA5L6C,KAuM3DoT,2BAA6B,SAACjE,EAAMtK,GAClC,IAAM0b,EAAcpR,EAAKxG,WAGzBwG,EAAKtK,eAAiBA,EACtBsK,EAAKrK,MAAQ,GACbqK,EAAKrH,WAAWjD,GAEhB,IAAM2b,EAAaxkB,OAAOC,OAAOkT,EAAKxG,YAAYrL,MAChD,SAAAmjB,GAAO,OAAKF,EAAYE,EAAQ3e,cAE5B4e,EAAiB1kB,OAAOC,OAAOskB,GAAajjB,MAChD,SAAAqjB,GAAO,OAAKxR,EAAKxH,QAAQgZ,EAAQ7e,cAG/B0e,GAAcE,EAKhB1kB,OAAOC,OAAOskB,GAAa1hB,SAAQ,SAAAwD,GAAI,OACrCrG,OAAOC,OAAOoG,EAAKjG,YAAYyC,SAAQ,SAAA7E,GAAI,OAAIA,EAAKqF,eASxDrD,OAAOC,OAAOskB,GAAa1hB,SAAQ,SAAA+hB,GACjC,IAAMH,EAAUtR,EAAKxH,QAAQiZ,EAAW9e,WAKxC,GAAI8e,EAAWlkB,YAAc+jB,EAAQ/jB,UAArC,CAMA,IAAM1C,EAAOgC,OAAOC,OAAO2kB,EAAWxkB,YAAY,GAC7CpC,IACLymB,EAAQ/M,QAAQ1Z,GACZ4mB,IAAe5mB,EAAKmF,iBACtBnF,EAAKyZ,cAAcgN,GACjBG,IAAe5mB,EAAKoF,iBACtBpF,EAAK4Z,cAAc6M,GACrBG,EAAWvhB,eAZLuhB,EAAWne,eACbme,EAAWne,cAAcpD,aA7O0B,KA4P3DqQ,eAAiB,kBACf,EAAKnE,YACFrP,WACAwT,kBA/PsD,KAiQ3DmR,iBAAmB,kBACjB,EAAKhlB,OACFK,WACA4S,sBACApQ,QAAO,SAAAqQ,GAAM,OAAIA,aAAkBlH,MArQmB,KAuQ3DiZ,WAAa,SAAAvhB,GAAK,OAChB,EAAK1D,OAAO+e,oBAAoBkG,WAAW,CACzCvhB,MAAM,2BACDA,GADA,IAEH4F,IAAK,GACLwF,eAAgB,aAChBwG,gBAAiB,kBA7QoC,KAiR3D4P,kBAAoB,kBAClB,EAAKD,WAAW,CAAErjB,KAAM,UAAWmR,SAAS,EAAMJ,KAAM,UAlRC,KAoR3DwS,YAAc,kBACZ,EAAKF,WAAW,CAAErjB,KAAM,UAAWmR,SAAS,EAAMJ,KAAM,UArRC,KAuR3DyS,aAAe,kBACb,EAAKH,WAAW,CAAErjB,KAAM,UAAWmR,SAAS,EAAMJ,KAAM,UAxRC,KA0R3D0S,cAAgB,kBACd,EAAKJ,WAAW,CAAErjB,KAAM,UAAWmR,SAAS,EAAMJ,KAAM,UA3RC,KA6R3D2S,eAAiB,kBACf,EAAKL,WAAW,CAAErjB,KAAM,UAAW+Q,KAAM,YA9RgB,KAgS3DsC,KAAO,kBACL,EAAKgQ,WAAW,CAAErjB,KAAM,UAAWmR,SAAS,EAAMJ,KAAM,UAjSC,KAmS3DuC,KAAO,kBACL,EAAK+P,WAAW,CACdrjB,KAAM,UACNmR,SAAS,EACT8B,UAAU,EACVlC,KAAM,UAxSiD,KA2S3D4S,OAAS,gBAAG7hB,EAAH,EAAGA,MAAH,OACP,EAAKuhB,WAAW,CACdpO,QAASnT,EAAMmT,QACfE,QAASrT,EAAMqT,QACfnV,KAAM,QACNiU,OAAQ,KAhT+C,KAmT3D2P,QAAU,gBAAG9hB,EAAH,EAAGA,MAAH,OACR,EAAKuhB,WAAW,CACdpO,QAASnT,EAAMmT,QACfE,QAASrT,EAAMqT,QACfnV,KAAM,QACNiU,QAAS,KAxT8C,KA8T3D4P,gBAAkB,SAACre,EAAI/F,GAAL,OAChB,EAAKqO,YACFrP,WACAoY,QAAQrR,GACRse,SAASrkB,IAlU6C,KAoU3DskB,qBAAuB,SAACve,EAAIyE,GAC1B,IAAM/C,EAAY,EAAK4G,YACpBrP,WACA6Y,QAAQ9R,GAGXjH,OAAO0M,QAAQhB,EAAK+Z,QAAQ5iB,SAAQ,mCAAEkG,EAAF,KAAQ7H,EAAR,YAClCyH,EAAUgD,QAAQ5C,GAAMwc,SAASrkB,MAInClB,OAAO0M,QAAQhB,EAAKzC,YAAYpG,SAAQ,YAAoB,IAAD,mBAAjBkG,EAAiB,KAAX7H,EAAW,KACzDyH,EAAUI,GAAQ7H,MAhVqC,KAoV3DwkB,eAAiB,WACf,EAAKC,kBACL,EAAKC,mBAtVoD,KAyV3DD,gBAAkB,kBAChB,EAAKpW,YACFrP,WACAE,WACAyC,SAAQ,SAAA7E,GAAI,OAAIA,EAAKunB,SAAS,UA7VwB,KA+V3DK,gBAAkB,kBAChB,EAAKrW,YACFrP,WACA2lB,WACAhjB,SAAQ,SAAAsQ,GAAI,OACXnT,OAAOC,OAAOkT,EAAKxG,YAAY9J,SAAQ,SAAAwD,GAAI,OACzCA,EAAKkf,SAAS,aApWpBzjB,KAAK4G,WAAaA,EAClB5G,KAAKqQ,oBAAsBA,EAC3BrQ,KAAK4Y,aAAeA,EACpB5Y,KAAK0hB,QAAS,EAEd1hB,KAAKkgB,mBACLlgB,KAAK4gB,mBRhBHoD,GAASzX,KAAOC,IAAV,iNAIN,SAAAG,GAAK,OACLA,EAAMzQ,KACF,+BACA,oCAEM,SAAAyQ,GAAK,OAAIA,EAAMpI,KAAKK,cAO9Bqf,G,4JACJ,WACMjkB,KAAK2M,MAAMpI,MAAM,iE,gCAGvB,WACMvE,KAAK2M,MAAMpI,MAAM,6E,oBAGvB,WAAU,IAAD,EACuCvE,KAAK2M,MAA3C1F,EADD,EACCA,KAAM1C,EADP,EACOA,KAAMqH,EADb,EACaA,MADb,IACoBsY,iBADpB,MACgC,GADhC,EAGP,OAAK3f,EAGH,kBAACyf,GAAD,CACEE,UAAS,eAAUA,GACnBC,YAAWld,EACXmd,cAAaxY,EAAMnN,QACnB8F,KAAMA,EACNrI,KAAMqI,EAAKI,cACX0f,MAAOpd,IATO,S,GAZHqd,cA8CJC,IAdG7L,GAcOuL,GAda,YAAmB,IAAbtX,EAAY,oBAChD/E,EAAU4c,qBAAWnY,IACrBT,EAAQ4Y,qBAAWlZ,IAEzB,OACE,kBAACoN,GAAD,iBACM/L,EADN,CAEEpI,KAAMqH,EAAM/B,QAAQ8C,EAAM1F,MAC1BlJ,OAAQ6J,EAAQ6F,YAChB7B,MAAOA,OSxDA6Y,GAAkB,SAAAC,GAC7B,GAAiB,IAAbA,EAAgB,MAAO,CAAC,EAAG,GAC/B,GAAiB,IAAbA,EAAgB,MAAO,CAAC,EAAG,EAAG,GAClC,GAAiB,IAAbA,EAAgB,MAAO,CAAC,EAAG,EAAG,EAAG,GAErC,IAAMC,EAAsBD,EAAW,IAAM,EACvCE,EAAcF,GAAYC,EAAsB,EAAI,GAEtDE,EAAU,EACVriB,EAfY,EAgBZkiB,EAhBY,IAiBdG,EAAU7pB,KAAK8pB,OAjBD,EAiBoBF,GAAe,GACjDpiB,EAASoiB,EAAc,GAGzB,IAAM9jB,EAAS,YAAIzB,MAAMmD,GAAQ6B,QAAQ5I,KAAI,SAAAG,GAAC,OAAIA,EAAIipB,EAAU,KAIhE,OAHIF,GACF7jB,EAAOikB,OAAOL,EAAW,EAAG,GAEvB5jB,GAGHkkB,GAAmBzY,KAAOC,IAAV,oIAEZ,SAAAG,GAAK,OAAIA,EAAMiV,WACb,SAAAjV,GAAK,OAAIA,EAAMsY,QAEX,SAAAtY,GAAK,OACjBA,EAAMxL,SACF,yBACA,8BAEJ,SAAAwL,GAAK,gBAAOA,EAAMuY,MAAb,cAGIC,GAAgB,SAAC,GAIvB,IAHLhkB,EAGI,EAHJA,SACAikB,EAEI,EAFJA,cAEI,IADJxD,eACI,MADM,EACN,EACEyD,EAAmBD,EAAcA,EAAc5iB,OAAS,GAC9D,GAAI6iB,GA/CY,EA+CmB,OAAO,KAE1C,IAAMJ,EAAwC,IAAhCI,EAjDE,GAmDhB,OACE,oCACE,kBAACL,GAAD,CACE7jB,SAAUA,EACV8jB,KAAMA,EACNC,MAAM,MACNtD,QAASA,IAEX,kBAACoD,GAAD,CACE7jB,SAAUA,EACV8jB,KAAMA,EACNC,MAAM,SACNtD,QAASA,MC3DX0D,GAAU/Y,KAAOC,IAAV,8OAWD,SAAAG,GAAK,OACXA,EAAMxL,SACF,uBACA,4BACI,SAAAwL,GAAK,OACbA,EAAMxL,SACF,yBACA,8BAIJokB,GAAiBhZ,aAAO0X,GAAP1X,CAAH,yEAGhB,SAAAI,GACA,MAAmB,QAAfA,EAAM1F,KAAuB,GAC3B,QAAN,OAAgC,GAAjB0F,EAAM9R,SAAgB,EAArC,UAGA,SAAA8R,GACA,MAAmB,QAAfA,EAAM1F,KAAuB,cAC1B,gBAIEue,GAAQ,SAAC,GAAD,QAAGP,YAAH,MAAU,GAAV,SACnB,yBACExQ,OAAQwQ,EACR1Q,MAAO0Q,EACPQ,QAAQ,0BACRxhB,KAAK,yBACL2K,OAAO,2BACPC,YAAY,uBAEZ,2BACE,0BACE6W,UAAU,oBACV1V,EAAE,qKA+BK2V,GAzBG,SAAAhZ,GAAU,IAClBf,EAAUe,EAAVf,MAEFga,EAAa1nB,OAAOC,OAAOyN,EAAMia,iBACjCT,EAAgBX,GAAgBmB,EAAWpjB,QAEjD,OACE,kBAAC8iB,GAAD,CAASnkB,SAAUyK,EAAM1I,cACvB,kBAAC,GAAD,CACE/B,SAAUyK,EAAM1I,aAChBkiB,cAAeA,IAEhBQ,EAAWnqB,KAAI,SAAC8I,EAAM3I,GAAP,OACd,kBAAC2pB,GAAD,CACEle,IAAK9C,EAAKP,UACViD,KAAM1C,EAAKP,UACXnJ,SAAUuqB,EAAcxpB,QAG5B,kBAAC2pB,GAAD,CAAgBte,KAAK,QACrB,kBAAC,GAAD,QC5ES6e,GAFC,kBAAM,kBAAC,GAAD,CAAOb,KAAM,MCEpB,I,MAAA,OAAIxZ,GAAU,CAC3B9L,KAAM,MACNsH,KAAM,MACNyE,YAAa,mBACbC,MAAO,cACP5E,eAAgB,CACd,CACEE,KAAM,qBACNtH,KAAM,SACNomB,QAAS,EACT5lB,MAAO,wBACP1C,IAAK,EACLD,IAAK,GACLwoB,SAPF,SAOW5mB,GACP,OAAIA,EAAQY,KAAKvC,IACT,0BAAN,OAAiCuC,KAAKvC,KACpC2B,EAAQY,KAAKxC,IACT,0BAAN,OAAiCwC,KAAKxC,KACjC,OAGX,CACEyJ,KAAM,YACNtH,KAAM,SACNomB,QAAS,IACT5lB,MAAO,YACPT,QAAS,CACP,CACES,MAAO,QACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,UACPf,MAAO,SAKfwM,MCtDa,cAAuB7B,EACpCC,WAAWjD,GACT,MAAMkf,EAAqBC,OACzBnf,EAAekf,oBAEjBjmB,KAAKmmB,SAAWD,OAAOnf,EAAeqf,WAEtC,IAAK,IAAIxqB,EAAI,EAAGA,EAAIqqB,EAAoBrqB,GAAK,EAC3CoE,KAAKwK,aAAc,KAAI5O,EAAK,CAAEmE,KAAMC,KAAKmmB,WAE3CnmB,KAAK0K,cAAc,MAAO,CAAE3K,KAAMC,KAAKmmB,WAGzCE,WAAWtmB,GACT,OAAIA,EAAKpE,MAAMuI,GAAe,IAARA,GAAmB,EACrCnE,EAAKP,KAAK0E,GAAe,IAARA,GAAmB,EACjC,IAGToiB,KAAKziB,GACH,MAAO,CACL0iB,IAAKroB,OAAOC,OAAO0F,GAChBpI,IAAI2D,GAASA,EAAMonB,QAAQxmB,KAAKmmB,WAChCM,YACAhrB,IAAIuE,KAAKqmB,aAIhBK,aAAa7iB,GACX,OAAO7D,KAAKsmB,KAAKziB,GAGnB8iB,UAAU9iB,GACR,OAAO7D,KAAKsmB,KAAKziB,KDsBnBgI,UACAC,UEpDIwZ,GAAU/Y,KAAOC,IAAV,8OAWD,SAAAG,GAAK,OACXA,EAAMxL,SACF,uBACA,4BACI,SAAAwL,GAAK,OACbA,EAAMxL,SACF,yBACA,8BAIJokB,GAAiBhZ,aAAO0X,GAAP1X,CAAH,6DAEhB,SAAAI,GACA,MAAmB,OAAfA,EAAM1F,KAAsB,cACb,QAAf0F,EAAM1F,KAAuB,eAC1B,MAIEue,GAAQ,SAAC,GAAD,QAAGP,YAAH,MAAU,GAAV,SACnB,yBACExQ,OAAQwQ,EACR1Q,MAAO0Q,EACPQ,QAAQ,gBACRxhB,KAAK,yBACL2K,OAAO,2BACPC,YAAY,uBAEZ,2BACE,0BAAMmB,EAAE,iEAoBC4W,GAfM,SAAAja,GAAU,IAGhBxL,EAFKwL,EAAVf,MAENlM,QAAWyB,SAGb,OACE,kBAAC,GAAD,CAASA,SAAUA,GACjB,kBAAC,GAAD,CAAgB8F,KAAK,OACrB,kBAAC,GAAD,CAAgBA,KAAK,QACrB,kBAAC,GAAD,QCxDS4f,GAFI,kBAAM,kBAAC,GAAD,CAAO5B,KAAM,MCEvB,I,SAAA,OAAIxZ,GAAU,CAC3B9L,KAAM,SACNsH,KAAM,SACNyE,YAAa,gBACbC,MAAO,cACP5E,eAAgB,CACd,CACEE,KAAM,YACNtH,KAAM,SACNomB,QAAS,IACT5lB,MAAO,YACPT,QAAS,CACP,CACES,MAAO,QACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,UACPf,MAAO,SAKfwM,MCvCa,cAA0B7B,EACvCC,WAAWjD,GACT,MAAMqf,EAAYF,OAAOnf,EAAeqf,WAExCpmB,KAAKwK,aAAa,KAAM,CAAEzK,KAAMqmB,IAChCpmB,KAAK0K,cAAc,MAAO,CAAE3K,KAAMqmB,IAGpCE,KAAKziB,GACH,MAAO,CAAE0iB,IAAK1iB,EAAMijB,MD+BtBjb,UACAC,UErCW0Z,GAAQjZ,KAAOC,IAAV,qPAUF,SAAAG,GAAK,OACjBA,EAAMxL,SACF,uBACA,4BAEF,SAAAwL,GAAK,OACLA,EAAMxL,SACF,yBACA,8BAKG4lB,GAASxa,KAAOya,OAAV,sdAwBbzB,GAAiBhZ,aAAO0X,GAAP1X,CAAH,sEAwCL0a,GAnCM,SAAAta,GAAU,IACrBf,EAAUe,EAAVf,MAEKzK,EACTyK,EADFlM,QAAWyB,SAGP+lB,EAAYC,mBAEZC,EAAoB,SAAA3lB,GAEtBylB,EAAUlZ,UACTkZ,EAAUlZ,QAAQqZ,SAAS5lB,EAAMjD,SAElCoN,EAAM0b,aAUV,OANAC,qBAAU,WAER,OADAlkB,SAAS6F,iBAAiB,UAAWke,GAC9B,kBACL/jB,SAASsG,oBAAoB,UAAWyd,OAI1C,kBAAC,GAAD,CAAOjmB,SAAUA,GACf,kBAAC,GAAD,CAAgB8F,KAAK,QACrB,kBAAC8f,GAAD,CACEhZ,IAAKmZ,EACLM,YAAa,kBAAM5b,EAAM6b,WACzBC,UAAW,kBAAM9b,EAAM0b,iBC7EhBK,GANI,kBACjB,kBAAC,GAAD,KACE,kBAACZ,GAAD,CAAQa,GAAG,UCAA,I,SAAA,OAAInc,GAAU,CAC3B9L,KAAM,SACNsH,KAAM,SACNyE,YAAa,gBACbC,MAAO,iBACP5E,eAAgB,GAChB6E,MCVa,cAA0B7B,EACvCC,aACEhK,KAAK0K,cAAc,OAGrBmd,oBACE7nB,KAAKoL,KAAK,CAAEmb,IAAK,IAGnBkB,UACEznB,KAAKoL,KAAK,CAAEmb,IAAK,IAGnBe,YACEtnB,KAAKoL,KAAK,CAAEmb,IAAK,MDHnB1a,UACAC,UERIyZ,GAAiBhZ,aAAO0X,GAAP1X,CAAH,kHAOdub,GAAOvb,KAAOC,IAAV,8QAUM,SAAAG,GAAK,iCACGA,EAAMxL,SAAW,GAAM,EAD1B,QAED,SAAAwL,GAAK,OAAKA,EAAMob,SAAW,GAAK,KAE9C,SAAApb,GAAK,OACLA,EAAMxL,SACF,yBACA,8BAIJ6mB,GAAOzb,KAAOC,IAAV,6GAQGgZ,GAAQ,SAAC,GAAD,IAAGrkB,EAAH,EAAGA,SAAU4mB,EAAb,EAAaA,SAAUE,EAAvB,EAAuBA,SAAvB,OACnB,kBAACH,GAAD,CAAM3mB,SAAUA,EAAU4mB,SAAUA,EAAUG,cAAY,QACxD,kBAACF,GAAD,MACCC,IAiBUE,GAbM,SAAAxb,GAAU,IACrBf,EAAUe,EAAVf,MAEKzK,EACTyK,EADFlM,QAAWyB,SAGb,OACE,kBAAC,GAAD,CAAOA,SAAUA,EAAU4mB,SAAUnc,EAAMmc,YACzC,kBAAC,GAAD,CAAgB9gB,KAAK,SCnDZmhB,GAFI,kBAAM,kBAAC,GAAD,CAAO3Z,MAAM,aCEvB,I,MAAA,OAAIhD,GAAU,CAC3B9L,KAAM,SACNsH,KAAM,SACNyE,YAAa,oCACbC,MAAO,iBACP5E,eAAgB,CACd,CACEE,KAAM,eACNtH,KAAM,SACNomB,QAAS,IACT5lB,MAAO,6BACP1C,IAAK,EACLD,IAAK,IACLwoB,SAPF,SAOW5mB,GACP,OAAIA,EAAQY,KAAKvC,IACT,wBAAN,OAA+BuC,KAAKvC,IAApC,OACE2B,EAAQY,KAAKxC,IACT,wBAAN,OAA+BwC,KAAKxC,IAApC,OACK,OAGX,CACEyJ,KAAM,WACNtH,KAAM,SACNomB,QAAS,OACT5lB,MAAO,WACPT,QAAS,CACP,CACES,MAAO,OACPf,MAAO,QAET,CACEe,MAAO,SACPf,MAAO,UAET,CACEe,MAAO,WACPf,MAAO,YAET,CACEe,MAAO,WACPf,MAAO,eAKfwM,MClDa,cAA0B7B,EACvCC,WAAWjD,GACT/G,KAAKqoB,YAAcnC,OAAOnf,EAAeuhB,cACzCtoB,KAAKqF,SAAW0B,EAAewhB,SAE/BvoB,KAAKwK,aAAa,MAGpBqd,oBACE7nB,KAAKyG,MAAQzG,KAAKwoB,YAAYxoB,KAAKqoB,YAAaroB,KAAKqF,UAE7B,IAApBrF,KAAKyoB,YAAkBzoB,KAAKyG,MAAML,OAGxCsiB,oBACE1oB,KAAKyG,MAAMJ,QAGbigB,KAAKziB,GACCA,EAAMijB,GACR9mB,KAAKyG,MAAML,OAEXpG,KAAKyG,MAAMJ,QAIfoiB,WACE,MAAMrpB,EAAQY,KAAK6J,QAAQ,MAAM8e,WAEjC,OAAKvpB,EACEA,EAAM,GADM,EAIrB2oB,WACE,QAAS/nB,KAAKyoB,aDiBhB5c,UACAC,UEhDIyZ,GAAiBhZ,aAAO0X,GAAP1X,CAAH,sEAKPiZ,GAAQjZ,KAAOC,IAAV,qPAUF,SAAAG,GAAK,OACjBA,EAAMxL,SACF,uBACA,4BAEF,SAAAwL,GAAK,OACLA,EAAMxL,SACF,yBACA,8BAKGynB,GAAa,SAAC,GAAD,IACxBb,EADwB,EACxBA,SACAtZ,EAFwB,EAExBA,MACAoa,EAHwB,EAGxBA,SACAC,EAJwB,EAIxBA,kBAJwB,OAMxB,yBACEvU,MAAO,GACPE,OAAQ,GACRgR,QAAQ,0BACR5W,YAAY,KAEZ,0BACEqZ,cAAY,aACZtZ,OAAQH,EACRI,YAAa,IACb5K,KAAK,OACL8d,MAAO,CACL2D,UAAWqC,EAAW,OAAS,kBAC/BgB,gBAAiB,SACjBC,WAAYF,EAAiB,eACjBD,EADiB,6BAEzB,QAEN7Y,EAAE,oFA2BOiZ,GAtBK,SAAAtc,GAAU,IACpBf,EAAUe,EAAVf,MAEKzK,EAETyK,EAFFlM,QAAWyB,SACX0nB,EACEjd,EADFid,SAGItC,EAAM3a,EAAM/B,QAAQ,OAE1B,OACE,kBAAC,GAAD,CAAO1I,SAAUA,GACf,kBAAC,GAAD,CAAgB8F,KAAK,QACrB,kBAAC,GAAD,CACE8gB,SAAUnc,EAAMmc,WAChBtZ,MAAO8X,EAAI3hB,WACXikB,SAAUA,EACVC,kBAAmBD,GAAY,QCrExBK,GANG,kBAChB,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAYza,MAAM,8BCAP,I,MAAA,OAAIhD,GAAU,CAC3B9L,KAAM,QACNsH,KAAM,QACNyE,YAAa,2BACbC,MAAO,iBACP5E,eAAgB,CACd,CACEE,KAAM,eACNtH,KAAM,SACNomB,QAAS,EACT5lB,MAAO,oBACPmmB,KAAM,IACN7oB,IAAK,IACLD,IAAK,IACLwoB,SARF,SAQW5mB,GACP,OAAIA,EAAQY,KAAKvC,IACT,oCAAN,OAA2CuC,KAAKvC,IAAhD,OACE2B,EAAQY,KAAKxC,IACT,mCAAN,OAA0CwC,KAAKxC,IAA/C,OACE4B,EAAQY,KAAKsmB,OAAS,EAClB,oCAAN,OAA2CtmB,KAAKsmB,KAAhD,OACK,OAGX,CACErf,KAAM,gBACNtH,KAAM,SACNomB,QAAS,EACT5lB,MAAO,4BACP1C,IAAK,EACLuoB,SANF,SAMW5mB,GACP,OAAIA,EAAQY,KAAKvC,IACT,wCAAN,OAA+CuC,KAAKvC,KAC/C,OAGX,CACEwJ,KAAM,eACNtH,KAAM,SACNomB,QAAS,EACT5lB,MAAO,2BACP1C,IAAK,EACLuoB,SANF,SAMW5mB,GACP,OAAIA,EAAQY,KAAKvC,IACT,uCAAN,OAA8CuC,KAAKvC,KAC9C,QAIbmO,MCrDa,cAAyB7B,EACtCC,WAAWjD,GACT/G,KAAK0K,cAAc,OAEnB1K,KAAK+G,eAAiBA,EAEtB/G,KAAK2jB,OAAS,EACd3jB,KAAKmpB,aAAe,KACpBnpB,KAAK6oB,SAAW,IAAO7oB,KAAK+G,eAAeuhB,aAC3CtoB,KAAKopB,UAAY,EACjBppB,KAAKqpB,SAAW,EAGlBxB,oBACE7nB,KAAKoL,KAAK,CAAEmb,IAAKvmB,KAAK2jB,SAEtB3jB,KAAKmpB,aAAeG,YAAY,KAC9B,MAAMC,EAAavpB,KAAK2jB,OACxB3jB,KAAK2jB,OAAS3jB,KAAKwpB,gBAEfD,IAAevpB,KAAK2jB,QAExB3jB,KAAKoL,KAAK,CAAEmb,IAAKvmB,KAAK2jB,UACrB3jB,KAAK6oB,SAAW,GAGrBW,gBACE,MAAM,cAAEC,EAAF,aAAiBC,GAAiB1pB,KAAK+G,eAE7C,OAAoB,IAAhB/G,KAAK2jB,QACP3jB,KAAKopB,WAAa,EAEdppB,KAAKopB,YAAcK,GACrBzpB,KAAKopB,UAAY,EACV,GAGF,IAGTppB,KAAKqpB,UAAY,EAEbrpB,KAAKqpB,WAAaK,GACpB1pB,KAAKqpB,SAAW,EACT,GAGF,GAGTX,oBACEiB,cAAc3pB,KAAKmpB,cAGrBS,mBACED,cAAc3pB,KAAKmpB,cAGrBU,YACE,OAAO7pB,KAAK6J,QAAQ,OAAO8e,YAAc,CAAC,GAG5CZ,WACE,OAA+B,IAAxB/nB,KAAK6pB,YAAY,KDT1Bhe,UACAC,UEnDIwZ,GAAU/Y,KAAOC,IAAV,8OAWD,SAAAG,GAAK,OACXA,EAAMxL,SACF,uBACA,4BACI,SAAAwL,GAAK,OACbA,EAAMxL,SACF,yBACA,8BAIJokB,GAAiBhZ,aAAO0X,GAAP1X,CAAH,6DAEhB,SAAAI,GACA,MAAmB,YAAfA,EAAM1F,KAA2B,gBAClB,OAAf0F,EAAM1F,KAAsB,cACb,QAAf0F,EAAM1F,KAAuB,eAC1B,MAIEue,GAAQ,SAAC,GAAD,QAAGP,YAAH,MAAU,GAAV,SACnB,yBACExQ,OAAQwQ,EACR1Q,MAAO0Q,EACPQ,QAAQ,gBACRxhB,KAAK,yBACL2K,OAAO,2BACPC,YAAY,uBAEZ,2BACE,0BAAMmB,EAAE,8DACR,0BAAM8Z,GAAG,OAAOC,GAAG,OAAOC,GAAG,OAAOC,GAAG,UAqB9BC,GAhBgB,SAAAvd,GAAU,IAG1BxL,EAFKwL,EAAVf,MAENlM,QAAWyB,SAGb,OACE,kBAAC,GAAD,CAASA,SAAUA,GACjB,kBAAC,GAAD,CAAgB8F,KAAK,YACrB,kBAAC,GAAD,CAAgBA,KAAK,OACrB,kBAAC,GAAD,CAAgBA,KAAK,QACrB,kBAAC,GAAD,QC3DSkjB,GAFc,kBAAM,kBAAC,GAAD,CAAOlF,KAAM,MCEjC,I,MAAA,OAAIxZ,GAAU,CAC3B9L,KAAM,mBACNsH,KAAM,oBACNyE,YAAa,0BACbC,MAAO,cACP5E,eAAgB,CACd,CACEE,KAAM,YACNtH,KAAM,SACNomB,QAAS,IACT5lB,MAAO,YACPT,QAAS,CACP,CACES,MAAO,QACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,UACPf,MAAO,SAKfwM,MCvCa,cAAoC7B,EACjDC,WAAWjD,GACT,MAAMqf,EAAYF,OAAOnf,EAAeqf,WAExCpmB,KAAKwK,aAAa,WAClBxK,KAAKwK,aAAa,KAAM,CAAEzK,KAAMqmB,IAChCpmB,KAAK0K,cAAc,MAAO,CAAE3K,KAAMqmB,IAGpCE,KAAKziB,GACH,OAAsB,IAAlBA,EAAMumB,QAAsB,CAAE7D,IAAK,KAChC,CAAEA,IAAK1iB,EAAMijB,IAGtBJ,aAAa7iB,GACX,MAAyB,MAArBA,EAAMumB,QAAQ,GAAmB,CAAE7D,IAAK,KACnB,IAArB1iB,EAAMumB,QAAQ,GAAiB,CAAE7D,IAAK,KACnC,CAAEA,IAAK1iB,EAAMijB,IAGtBH,UAAU9iB,GACR,OAAO7D,KAAK0mB,aAAa7iB,KDmB3BgI,UACAC,UErCIwZ,GAAU/Y,KAAOC,IAAV,8OAWD,SAAAG,GAAK,OACXA,EAAMxL,SACF,uBACA,4BACI,SAAAwL,GAAK,OACbA,EAAMxL,SACF,yBACA,8BAIJokB,GAAiBhZ,aAAO0X,GAAP1X,CAAH,6DAEhB,SAAAI,GACA,MAAmB,YAAfA,EAAM1F,KAA2B,4BAClB,OAAf0F,EAAM1F,KAAsB,cACb,QAAf0F,EAAM1F,KAAuB,eAC1B,MAIEue,GAAQ,SAAC,GAAD,QAAGP,YAAH,MAAU,GAAV,SACnB,yBACExQ,OAAQwQ,EACR1Q,MAAO0Q,EAAO,GACdQ,QAAQ,iBACRxhB,KAAK,yBACL2K,OAAO,2BACPC,YAAY,uBAEZ,2BACE,0BAAMmB,EAAE,8DACR,4BAAQtB,EAAE,IAAIK,GAAG,KAAKD,GAAG,OACzB,0BAAMgb,GAAG,OAAOC,GAAG,OAAOC,GAAG,OAAOC,GAAG,UAqB9BI,GAhBkB,SAAA1d,GAAU,IAG5BxL,EAFKwL,EAAVf,MAENlM,QAAWyB,SAGb,OACE,kBAAC,GAAD,CAASA,SAAUA,GACjB,kBAAC,GAAD,CAAgB8F,KAAK,YACrB,kBAAC,GAAD,CAAgBA,KAAK,OACrB,kBAAC,GAAD,CAAgBA,KAAK,QACrB,kBAAC,GAAD,QC5DSqjB,GAFgB,kBAAM,kBAAC,GAAD,CAAOrF,KAAM,MCEnC,I,MAAA,OAAIxZ,GAAU,CAC3B9L,KAAM,qBACNsH,KAAM,sBACNyE,YAAa,0BACbC,MAAO,cACP5E,eAAgB,CACd,CACEE,KAAM,YACNtH,KAAM,SACNomB,QAAS,IACT5lB,MAAO,YACPT,QAAS,CACP,CACES,MAAO,QACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,UACPf,MAAO,SAKfwM,MCvCa,cAAsC7B,EACnDC,WAAWjD,GACT,MAAMqf,EAAYF,OAAOnf,EAAeqf,WAExCpmB,KAAKwK,aAAa,WAClBxK,KAAKwK,aAAa,KAAM,CAAEzK,KAAMqmB,IAChCpmB,KAAK0K,cAAc,MAAO,CAAE3K,KAAMqmB,IAGpCE,KAAKziB,GACH,OAAsB,IAAlBA,EAAMumB,QAAsB,CAAE7D,IAAK,KAChC,CAAEA,KAAM1iB,EAAMijB,IAGvBJ,aAAa7iB,GACX,MAAyB,MAArBA,EAAMumB,QAAQ,GAAmB,CAAE7D,IAAK,KACnB,IAArB1iB,EAAMumB,QAAQ,GAAiB,CAAE7D,IAAK,KACnC,CACLA,IAAK1iB,EAAMijB,GAAGrrB,IAAIyI,GACJ,IAARA,EAAkB,EACV,IAARA,EAAkB,EACV,MAARA,EAAoB,IACjBA,IAKbyiB,UAAU9iB,GACR,OAAO7D,KAAK0mB,aAAa7iB,KDY3BgI,UACAC,UErCWwZ,GAAU/Y,KAAOC,IAAV,2QAaJ,SAAAG,GAAK,OACjBA,EAAMxL,SACF,uBACA,4BAGF,SAAAwL,GAAK,OACLA,EAAMxL,SACF,yBACA,8BAGJokB,GAAiBhZ,aAAO0X,GAAP1X,CAAH,6DAEhB,SAAAI,GACA,MAAmB,OAAfA,EAAM1F,KAAsB,cACb,QAAf0F,EAAM1F,KAAuB,eAC1B,MAmBIsjB,GAfO,SAAA5d,GAAU,IAGjBxL,EAFKwL,EAAVf,MAENlM,QAAWyB,SAGb,OACE,kBAAC,GAAD,CAASA,SAAUA,GACjB,kBAAC,GAAD,CAAgB8F,KAAK,OACrB,kBAAC,GAAD,CAAgBA,KAAK,QAFvB,OCzCWujB,GAFK,kBAAM,kBAAC,GAAD,YCGX,I,MAAA,OAAI/e,GAAU,CAC3B9L,KAAM,UACNsH,KAAM,UACNyE,YAAa,4CACbC,MAAO,gBACP5E,eAAgB,CACd,CACEE,KAAM,YACNtH,KAAM,SACNomB,QAAS,IACT5lB,MAAO,YACPT,QAAS,CACP,CACES,MAAO,QACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,UACPf,MAAO,QAIb,CACE6H,KAAM,WACNtH,KAAM,SACNomB,QAAS,SACT5lB,MAAO,WACPT,QAAS,CACP,CACES,MAAO,cACPf,MAAO,UAET,CACEe,MAAO,eACPf,MAAO,aAIb,CACE6H,KAAM,WACNtH,KAAM,SACNomB,QAAS,EACT5lB,MAAO,iBACP1C,IAAK,EACLD,IAAKqB,EAAU,IACfmnB,SAPF,SAOW5mB,EAAO2H,GACd,IAAMqf,EAAYF,OAAOnf,EAAeqf,WAExC,OAAIhnB,EAAQP,EAAUunB,GACd,qBAAN,OAA4BA,EAA5B,mBAAgDvnB,EAAUunB,IAErD,OAGX,CACEnf,KAAM,UACNtH,KAAM,SACNomB,QAAS,EACT5lB,MAAO,kCACP1C,IAAK,EACLD,IAAKqB,EAAU,IACfmnB,SAPF,SAOW5mB,EAAO2H,GACd,IAAMqf,EAAYF,OAAOnf,EAAeqf,WAClCqE,EAAWvE,OAAOnf,EAAe0jB,UAEvC,OAAIrrB,EAAQP,EAAUunB,GACd,qBAAN,OAA4BA,EAA5B,mBAAgDvnB,EAAUunB,IAE9C,IAAVhnB,GAAeA,GAASqrB,EACpB,8BAAN,OAAqCA,EAArC,kBAEK,OAGX,CACExjB,KAAM,aACNtH,KAAM,SACNomB,QAAS,EACT5lB,MAAO,aACP1C,IAAK,EACLD,IAAKqB,EAAU,IACfmnB,SAPF,SAOW5mB,EAAO2H,GACd,IAAMqf,EAAYF,OAAOnf,EAAeqf,WAExC,OAAIhnB,EAAQP,EAAUunB,GACd,qBAAN,OAA4BA,EAA5B,mBAAgDvnB,EAAUunB,IAErD,QAIbxa,MC5Ga,cAA2B7B,EACxCC,WAAWjD,GACT/G,KAAKmmB,SAAWD,OAAOnf,EAAeqf,WACtCpmB,KAAK0qB,cAA4C,WAA5B3jB,EAAe4jB,SACpC3qB,KAAK6kB,QAAU9d,EAAe0jB,SAC9BzqB,KAAK4qB,OAAS7jB,EAAe8jB,SAAW,GAAK7qB,KAAKmmB,SAClDnmB,KAAK8qB,UAAY/jB,EAAegkB,WAEhC/qB,KAAKwK,aAAa,MAClBxK,KAAK0K,cAAc,MAAO,CAAE3K,KAAMC,KAAKmmB,WAEvCnmB,KAAKgO,QAAUhO,KAAK6kB,QAGtBmG,aAAaC,GACX,OAAIjrB,KAAK0qB,cAAsBO,EAAKnE,GAAGoE,WAChCD,EAAKnE,GAAGqE,YAGjB7E,KAAKziB,EAAOonB,GACV,OAAKjrB,KAAKgrB,aAAaC,IAEvBjrB,KAAKgO,SAAWhO,KAAK8qB,UAEjB9qB,KAAKgO,SAAWhO,KAAK4qB,SAAQ5qB,KAAKgO,QAAUhO,KAAK6kB,SAE9C,CACL0B,IAAKvmB,KAAKgO,UAPyB,CAAEuY,IAAKvmB,KAAKgO,WDyFnDnC,UACAC,UE1GIyZ,GAAiBhZ,aAAO0X,GAAP1X,CAAH,sEAEhB,SAAAI,GACA,MAAmB,OAAfA,EAAM1F,KAAsB,cACb,cAAf0F,EAAM1F,KAA6B,cAChC,kBAEP,SAAA0F,GACA,MAAmB,cAAfA,EAAM1F,KAA6B,gBACjC,QAAN,QAAgB0F,EAAM9R,UAAY,GAAK,EAAvC,UAIEyqB,GAAU/Y,KAAOC,IAAV,0FAID,SAAAG,GAAK,OAA+B,IAA1BA,EAAMye,aAAe,MAG9B5F,GAAQ,SAAC,GAAsC,IAApCrkB,EAAmC,EAAnCA,SAAUiqB,EAAyB,EAAzBA,aAActf,EAAW,EAAXA,KACxC2I,EAA8B,IAApB2W,EAAe,GAE/B,OACE,yBACE3F,QAAO,iBAAYhR,GACnBA,OAAQ3I,EAAO,GAAK2I,EACpBF,MAAOzI,EAAO,GAAK,GACnB7H,KACE9C,EAAW,uBAAyB,yBAEtCyN,OACEzN,EAAW,uBAAyB,2BAEtCkqB,cAAc,QACdxc,YAAY,KAEZ,0BAAMmB,EAAC,mBAAcyE,EAAS,GAAvB,gBAAiCA,EAAjC,cACP,0BAAMzE,EAAC,cAASyE,EAAS,IAAlB,gBAA6BA,OAiC3B6W,GA5BK,SAAA3e,GAAU,IACpBf,EAAUe,EAAVf,MAEKzK,EACTyK,EADFlM,QAAWyB,SAGPoqB,EAAcrtB,OAAOC,OAAOyN,EAAM4f,kBAChCJ,EAAiBxf,EAAjBwf,aAER,OACE,kBAAC,GAAD,CAASA,aAAcA,GACrB,kBAAC,GAAD,CACEnkB,KAAK,KACLpM,SAAgC,IAApBuwB,EAAe,GAAW,IAExC,kBAAC,GAAD,CAAgBnkB,KAAK,cACpBskB,EAAY9vB,KAAI,SAAC8I,EAAM3I,GAAP,OACf,kBAAC,GAAD,CACEyL,IAAK9C,EAAKP,UACViD,KAAM1C,EAAKP,UACXnJ,SAAoB,IAATe,EAAI,QAGnB,kBAAC,GAAD,CAAOuF,SAAUA,EAAUiqB,aAAcA,MClEhCK,GAFG,kBAAM,kBAAC,GAAD,CAAOtF,SAAU,EAAGiF,aAAc,EAAGtf,MAAI,KCElD,I,MAAA,OAAIL,GAAU,CAC3B9L,KAAM,QACNsH,KAAM,QACNyE,YAAa,gBACbC,MAAO,UACP5E,eAAgB,CACd,CACEE,KAAM,YACNtH,KAAM,SACNomB,QAAS,IACT5lB,MAAO,YACPT,QAAS,CACP,CACES,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,UACPf,MAAO,QAIb,CACE6H,KAAM,gBACNtH,KAAM,SACNomB,QAAS,IACT5lB,MAAO,oBACPT,QAAS,CACP,CACES,MAAO,IACPf,MAAO,KAET,CACEe,MAAO,IACPf,MAAO,KAET,CACEe,MAAO,KACPf,MAAO,SAKfwM,MC3Da,cAAyB7B,EACtCC,WAAWjD,GACT,MAAMqf,EAAYF,OAAOnf,EAAeqf,WACxCpmB,KAAKorB,aAAelF,OAAOnf,EAAe2kB,eAE1C1rB,KAAKwK,aAAa,KAAM,CAAEzK,KAAMqmB,IAChCpmB,KAAKwK,aAAa,YAAa,CAC7BzK,KAAM/E,KAAK2wB,KAAK3rB,KAAKorB,gBAGvB,IAAK,IAAIxvB,EAAI,EAAGA,EAAIoE,KAAKorB,aAAcxvB,GAAK,EAC1CoE,KAAK0K,cAAe,MAAK9O,EAAK,CAAEmE,KAAMqmB,IAI1CE,KAAKziB,GACH,MAAO,IACF3F,OAAOyM,YACR,IAAI,IAAItL,MAAMW,KAAKorB,eAAe3vB,IAAI,CAACmwB,EAAGhwB,IAAM,CAC7C,MAAKA,EACN,KAGJ,CAAE,MAAKiI,EAAMgoB,WAAchoB,EAAMijB,MDqCrCjb,UACAC,UEzDIyZ,GAAiBhZ,aAAO0X,GAAP1X,CAAH,kHAOd+Y,GAAU/Y,KAAOC,IAAV,yFAOAgZ,GAAQ,SAAC,GAAgC,IAA9BrkB,EAA6B,EAA7BA,SAA6B,IAAnBglB,gBAAmB,MAAR,EAAQ,EACnD,OACE,yBACEV,QAAQ,YACRlR,MAAM,KACNE,OAAO,KACPxQ,KAAK,OACL2K,OAAQzN,EAAW,iBAAmB,iBACtC0N,YAAY,IACZwc,cAAc,QACdS,eAAe,SAEf,8BACEtwB,OAAO,aACPqT,YAAW,qBAAgBsX,EAAhB,eACXkF,cAAc,SAEhB,8BAAU7vB,OAAO,eACjB,8BAAUA,OAAO,cACjB,8BAAUA,OAAO,eACjB,8BAAUA,OAAO,kBAmBRuwB,GAdM,SAAApf,GAAU,IACrBf,EAAUe,EAAVf,MAEKzK,EACTyK,EADFlM,QAAWyB,SAGb,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAOA,SAAUA,EAAUglB,SAAUva,EAAMua,WAC3C,kBAAC,GAAD,CAAgBlf,KAAK,UChDZ+kB,GAFI,kBAAM,kBAAC,GAAD,OCEV,I,YAAA,OAAIvgB,GAAU,CAC3B9L,KAAM,SACNsH,KAAM,SACNyE,YAAa,yBACbC,MAAO,SACP5E,eAAgB,CACd,CACEE,KAAM,YACNtH,KAAM,SACNomB,QAAS,IACT5lB,MAAO,YACPT,QAAS,CACP,CACES,MAAO,QACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,UACPf,MAAO,SAKfwM,MCvCa,cAA0B7B,EACvCC,WAAWjD,GACT/G,KAAKmmB,SAAWD,OAAOnf,EAAeqf,WAEtCpmB,KAAK0K,cAAc,MAAO,CAAE3K,KAAMC,KAAKmmB,WAGzC0B,oBACE7nB,KAAKoL,KAAK,CAAEmb,IAAK,MDgCnB1a,UACAC,UErCImgB,GAAc,CAClBntB,EAAG,CAAEyV,MAAO,GAAIE,OAAQ,IACxB1V,EAAG,CAAEwV,MAAO,GAAIE,OAAQ,IACxBzV,EAAG,CAAEuV,MAAO,IAAKE,OAAQ,IACzBxV,EAAG,CAAEsV,MAAO,IAAKE,OAAQ,IACzBvV,GAAI,CAAEqV,MAAO,IAAKE,OAAQ,KAGtByX,GAAiB,CACrBC,EAAG,mBACHrtB,EAAG,kBACH5D,EAAG,yBAGCkxB,GAAa,CACjBD,EAAG,kBACHrtB,EAAG,mBACH5D,EAAG,SAGCqqB,GAAiBhZ,aAAO0X,GAAP1X,CAAH,mHAOPiZ,GAAQjZ,KAAOC,IAAV,gPAOP,SAAAG,GAAK,OAAIsf,GAAYtf,EAAMwZ,UAAU5R,SACpC,SAAA5H,GAAK,OAAIsf,GAAYtf,EAAMwZ,UAAU1R,UAEjC,SAAA9H,GAAK,OACjBA,EAAMxL,SACF,uBACA,4BAEF,SAAAwL,GAAK,OACLA,EAAMxL,SACF,yBACA,8BAIGkrB,GAAe9f,KAAOC,IAAV,sJASZ8f,GAAM/f,KAAOya,OAAV,2SASA,SAAAra,GAAK,OAAIuf,GAAevf,EAAMvN,UACxB,SAAAuN,GAAK,OAAIyf,GAAWzf,EAAMvN,UAGrC,SAAAuN,GAAK,OAAqB,IAAhBA,EAAMvN,MAAc,QAAU,WAsCpCmtB,GAhCK,SAAA5f,GAAU,IACpBf,EAAUe,EAAVf,MAEKzK,EAETyK,EAFFlM,QAAWyB,SACOilB,EAChBxa,EADF7E,eAAkBqf,UAGdD,EAAWD,OAAOE,GAExB,OACE,kBAAC,GAAD,CAAOjlB,SAAUA,EAAUglB,SAAUA,GACnC,kBAACkG,GAAD,KACG,YAAI,IAAIhtB,MAAM8mB,IAAW1qB,KAAI,SAACmwB,EAAGxpB,GAChC,IAAMhD,EAAQwM,EAAM4gB,SAASpqB,GAE7B,OACE,kBAACkqB,GAAD,CAEEjlB,IAAKjF,EACLqlB,QAAS,kBAAM7b,EAAM6b,QAAQrlB,IAC7BhD,MAAOA,GAENA,OAKT,kBAAC,GAAD,CAAgB6H,KAAK,UCpGZwlB,GANG,kBAChB,kBAAC,GAAD,CAAOtG,SAAU,GACf,kBAACmG,GAAD,CAAK1E,GAAG,MAAMxoB,MAAO,MCAV,I,MAAA,OAAIqM,GAAU,CAC3B9L,KAAM,QACNsH,KAAM,YACNyE,YAAa,mBACbC,MAAO,iBACP5E,eAAgB,CACd,CACEE,KAAM,YACNtH,KAAM,SACNomB,QAAS,IACT5lB,MAAO,YACPT,QAAS,CACP,CACES,MAAO,QACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,UACPf,MAAO,QAIb,CACE6H,KAAM,cACNtH,KAAM,SACNomB,QAAS,QACT5lB,MAAO,cACPT,QAAS,CACP,CACES,MAAO,MACPf,MAAO,QAET,CACEe,MAAO,KACPf,MAAO,YAKfwM,MCvDa,cAAyB7B,EACtCC,WAAWjD,GACT/G,KAAKmmB,SAAWD,OAAOnf,EAAeqf,WACtCpmB,KAAK0sB,WAA4C,SAA/B3lB,EAAe4lB,YAEjC3sB,KAAK0K,cAAc,MAAO,CAAE3K,KAAMC,KAAKmmB,WAGzC0B,oBACE7nB,KAAKoL,KAAK,CAAEmb,IAAK,IAGnBqG,UAAUxtB,GACR,MAAc,MAAVA,EAAsB,EACZ,IAAVA,EAAoB,EACjBY,KAAK0sB,WAAa,IAAM,EAGjCjF,QAAQrlB,GACNpC,KAAKoL,KAAK,CACRmb,IAAKvmB,KAAK6pB,YAAYpuB,IAAI,CAACiB,EAAGd,IACxBA,IAAMwG,EAAcpC,KAAK4sB,UAAUlwB,GAChCA,KAKbmtB,YACE,OACE7pB,KAAK6J,QAAQ,OAAO8e,YAActpB,MAAMW,KAAKmmB,UAAUliB,KAAK,GAIhEuoB,SAASpqB,GACP,OAAOpC,KAAK6pB,YAAYznB,KDsB1ByJ,UACAC,UErDIyZ,GAAiBhZ,aAAO0X,GAAP1X,CAAH,+DAGhB,SAAAI,GACA,MAAmB,QAAfA,EAAM1F,KAAsB,yBAC1B,uBAAN,OAA8B0F,EAAM9R,SAAW,EAA/C,UAIEyqB,GAAU/Y,KAAOC,IAAV,0FAID,SAAAG,GAAK,OAAI,GAAKA,EAAMwZ,YAGnBX,GAAQ,SAAC,GAA4B,IAA1BrkB,EAAyB,EAAzBA,SAAUglB,EAAe,EAAfA,SAC1B1R,EAAoB,GAAX0R,EAEf,OACE,yBACEV,QAAO,iBAAYhR,GACnBA,OAAQA,EACRF,MAAM,KACNtQ,KAAK,OACL2K,OACEzN,EAAW,uBAAyB,2BAEtCkqB,cAAc,OACdxc,YAAY,KAEZ,0BAAMA,YAAY,IAAImB,EAAC,2BAAsByE,KAC5C,YAAI,IAAIpV,MAAM8mB,IACZ1qB,KAAI,SAACmwB,EAAGxpB,GAAJ,OAAcA,KAClB3G,KAAI,SAAA2G,GACH,IAAMyqB,EAAYpY,EAAiB,GAARrS,EAE3B,OACE,0BACEiF,IAAKjF,EACL4N,EAAC,cAAS6c,EAAT,eAAyBA,UAiCzBC,GAzBM,SAAAngB,GAAU,IACrBf,EAAUe,EAAVf,MAEKzK,EAETyK,EAFFlM,QAAWyB,SACOilB,EAChBxa,EADF7E,eAAkBqf,UAGdD,EAAWD,OAAOE,GAClBR,EAAa1nB,OAAOC,OAAOyN,EAAMia,iBAEvC,OACE,kBAAC,GAAD,CAASM,SAAUA,GAChBP,EAAWnqB,KAAI,SAAC8I,EAAM3I,GAAP,OACd,kBAAC,GAAD,CACEyL,IAAK9C,EAAKP,UACViD,KAAM1C,EAAKP,UACXnJ,SAAc,GAAJe,OAGd,kBAAC,GAAD,CAAgBqL,KAAK,QACrB,kBAAC,GAAD,CAAO9F,SAAUA,EAAUglB,SAAUA,MCpE5B4G,GAFI,kBAAM,kBAAC,GAAD,CAAO5G,SAAU,KCE3B,I,MAAA,OAAI1a,GAAU,CAC3B9L,KAAM,SACNsH,KAAM,SACNyE,YAAa,0CACbC,MAAO,SACP5E,eAAgB,CACd,CACEE,KAAM,YACNtH,KAAM,SACNomB,QAAS,IACT5lB,MAAO,mBACPT,QAAS,CACP,CACES,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,UACPf,MAAO,SAKfwM,MCnCa,cAA0B7B,EACvCC,WAAWjD,GACT/G,KAAKD,KAAOmmB,OAAOnf,EAAeqf,WAElC,IAAK,IAAIxqB,EAAI,EAAGA,EAAIoE,KAAKD,KAAMnE,GAAK,EAClCoE,KAAKwK,aAAc,KAAI5O,GAEzBoE,KAAK0K,cAAc,MAAO,CAAE3K,KAAMC,KAAKD,OAGzCumB,KAAKziB,GACH,MAAO,CACL0iB,IAAKroB,OAAOC,OAAO0F,GAChBpI,IAAI2D,GAASA,EAAMonB,QAAQ,GAAG,IAC9B/qB,IAAI,CAACmwB,EAAGxpB,EAAOvG,IAAQA,EAAIA,EAAI2G,OAASJ,EAAQ,KAIvDskB,aAAa7iB,GACX,OAAO7D,KAAKsmB,KAAKziB,GAGnB8iB,UAAU9iB,GACR,OAAO7D,KAAKsmB,KAAKziB,KDanBgI,UACAC,UEjCIyZ,GAAiBhZ,aAAO0X,GAAP1X,CAAH,kHAOPiZ,GAAQjZ,KAAOC,IAAV,yMAMF,SAAAG,GAAK,gBACdA,EAAM8B,OADQ,OACA9B,EAAMxL,SAAW,KAAO,SACzB,SAAAwL,GAAK,OAAKA,EAAMob,SAAW,GAAK,KAC9C,SAAApb,GAAK,OAAIA,EAAM8B,SAEf,SAAA9B,GAAK,OACLA,EAAMxL,SACF,yBACA,8BAsBK6rB,GAlBG,SAAArgB,GAAU,IAClBf,EAAUe,EAAVf,MAEKzK,EACTyK,EADFlM,QAAWyB,SAGb,OACE,kBAAC,GAAD,CACEA,SAAUA,EACVsN,MAAO7C,EAAMhH,WACbmjB,SAAUnc,EAAMmc,WAChBG,cAAY,SAEZ,kBAAC,GAAD,CAAgBjhB,KAAK,SCtCZgmB,GAFC,kBAAM,kBAAC,GAAD,CAAOxe,MAAM,aCEpB,I,MAAA,OAAIhD,GAAU,CAC3B9L,KAAM,MACNsH,KAAM,MACNyE,YAAa,uBACbC,MAAO,iBACP5E,eAAgB,CACd,CACEE,KAAM,cACNtH,KAAM,SACNomB,QAAS,OACT5lB,MAAO,cACPT,QAAS,CACP,CACES,MAAO,OACPf,MAAO,QAET,CACEe,MAAO,MACPf,MAAO,SAIb,CACE6H,KAAM,WACNtH,KAAM,SACNomB,QAAS,UACT5lB,MAAO,WACPT,QAAS,CACP,CACES,MAAO,MACPf,MAAO,WAET,CACEe,MAAO,QACPf,MAAO,WAET,CACEe,MAAO,OACPf,MAAO,WAET,CACEe,MAAO,QACPf,MAAO,WAET,CACEe,MAAO,QACPf,MAAO,aAIb,CACE6H,KAAM,YACNtH,KAAM,SACNomB,QAAS,UACT5lB,MAAO,YACPT,QAAS,CACP,CACES,MAAO,MACPf,MAAO,WAET,CACEe,MAAO,QACPf,MAAO,WAET,CACEe,MAAO,OACPf,MAAO,WAET,CACEe,MAAO,QACPf,MAAO,WAET,CACEe,MAAO,QACPf,MAAO,cAKfwM,MCnFa,cAAuB7B,EACpCC,WAAWjD,GACT/G,KAAKktB,WAAanmB,EAAeomB,YACjCntB,KAAKotB,OAAS,CACZC,GAAItmB,EAAeumB,SACnBC,IAAKxmB,EAAeymB,WAGtBxtB,KAAKwK,aAAa,MAGpBie,WACE,MAAMrpB,EAAQY,KAAK6J,QAAQ,MAAM8e,WAEjC,OAAKvpB,EACEA,EAAM,GADM,EAIrB2oB,WACE,MAAMlkB,EAAQ7D,KAAKyoB,WAEnB,MAAwB,SAApBzoB,KAAKktB,WACO,IAAVrpB,EAIQ,IAAVA,EAINe,WACE,OAAI5E,KAAK+nB,WAAmB/nB,KAAKotB,OAAOC,GACjCrtB,KAAKotB,OAAOG,MDoDrB1hB,UACAC,UEjFIyZ,GAAiBhZ,aAAO0X,GAAP1X,CAAH,sEAEhB,SAAAI,GACA,MAAmB,QAAfA,EAAM1F,KAAuB,eACd,cAAf0F,EAAM1F,KAA6B,cAChC,iBAEP,SAAA0F,GACA,MAAmB,cAAfA,EAAM1F,KAA6B,gBACjC,QAAN,QAAgB0F,EAAM9R,UAAY,GAAK,EAAvC,UAIEyqB,GAAU/Y,KAAOC,IAAV,0FAID,SAAAG,GAAK,OAA8B,IAAzBA,EAAM8gB,YAAc,MAG7BjI,GAAQ,SAAC,GAAqC,IAAnCrkB,EAAkC,EAAlCA,SAAUssB,EAAwB,EAAxBA,YAAa3hB,EAAW,EAAXA,KACvC2I,EAA6B,IAAnBgZ,EAAc,GAE9B,OACE,yBACEhI,QAAO,iBAAYhR,GACnBA,OAAQ3I,EAAO,GAAK2I,EACpBF,MAAOzI,EAAO,GAAK,GACnB7H,KACE9C,EAAW,uBAAyB,yBAEtCyN,OACEzN,EAAW,uBAAyB,2BAEtCkqB,cAAc,QACdxc,YAAY,KAEZ,0BAAMmB,EAAC,kBAAayE,EAAb,gBAA2BA,EAAS,GAApC,eACP,0BAAMzE,EAAC,cAASyE,EAAS,IAAlB,gBAA6BA,OAgC3BiZ,GA3BG,SAAA/gB,GAAU,IAClBf,EAAUe,EAAVf,MAEKzK,EACTyK,EADFlM,QAAWyB,SAGPykB,EAAa1nB,OAAOC,OAAOyN,EAAMia,iBACjC4H,EAAc7H,EAAWpjB,OAE/B,OACE,kBAAC,GAAD,CAASirB,YAAaA,GACnB7H,EAAWnqB,KAAI,SAAC8I,EAAM3I,GAAP,OACd,kBAAC,GAAD,CACEyL,IAAK9C,EAAKP,UACViD,KAAM1C,EAAKP,UACXnJ,SAAoB,IAATe,EAAI,QAGnB,kBAAC,GAAD,CACEqL,KAAK,MACLpM,SAA+B,IAAnB4yB,EAAc,GAAW,IAEvC,kBAAC,GAAD,CAAOtsB,SAAUA,EAAUssB,YAAaA,MCjE/BE,GAFC,kBAAM,kBAAC,GAAD,CAAOxH,SAAU,EAAGsH,YAAa,EAAG3hB,MAAI,KCE/C,I,MAAA,OAAIL,GAAU,CAC3B9L,KAAM,MACNsH,KAAM,MACNyE,YAAa,cACbC,MAAO,UACP5E,eAAgB,CACd,CACEE,KAAM,YACNtH,KAAM,SACNomB,QAAS,IACT5lB,MAAO,YACPT,QAAS,CACP,CACES,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,UACPf,MAAO,QAIb,CACE6H,KAAM,eACNtH,KAAM,SACNomB,QAAS,IACT5lB,MAAO,mBACPT,QAAS,CACP,CACES,MAAO,IACPf,MAAO,KAET,CACEe,MAAO,IACPf,MAAO,KAET,CACEe,MAAO,KACPf,MAAO,SAKfwM,MC3Da,cAAuB7B,EACpCC,WAAWjD,GACT,MAAMqf,EAAYF,OAAOnf,EAAeqf,WAClCwH,EAAe1H,OAAOnf,EAAe6mB,cAE3C,IAAK,IAAIhyB,EAAI,EAAGA,EAAIgyB,EAAchyB,GAAK,EACrCoE,KAAKwK,aAAc,KAAI5O,EAAK,CAAEmE,KAAMqmB,IAGtCpmB,KAAKwK,aAAa,YAAa,CAAEzK,KAAM/E,KAAK2wB,KAAKiC,KACjD5tB,KAAK0K,cAAc,MAAO,CAAE3K,KAAMqmB,IAGpCE,KAAKziB,GACH,MAAO,CAAE0iB,IAAK1iB,EAAO,KAAIA,EAAMgoB,cD8CjChgB,UACAC,UEvDIwZ,GAAU/Y,KAAOC,IAAV,+OAWD,SAAAG,GAAK,OACXA,EAAMxL,SACF,uBACA,4BACI,SAAAwL,GAAK,OACbA,EAAMxL,SACF,yBACA,8BAIJokB,GAAiBhZ,aAAO0X,GAAP1X,CAAH,yEAGhB,SAAAI,GACA,MAAmB,QAAfA,EAAM1F,KAAuB,GAC3B,QAAN,OAAgC,GAAjB0F,EAAM9R,SAAgB,EAArC,UAGA,SAAA8R,GACA,MAAmB,QAAfA,EAAM1F,KAAuB,cAC1B,gBAIEue,GAAQ,SAAC,GAAD,QAAGP,YAAH,MAAU,GAAV,SACnB,yBACExQ,OAAQwQ,EACR1Q,MAAO0Q,EAAO,GACdQ,QAAQ,0BACRxhB,KAAK,yBACL2K,OAAO,2BACPC,YAAY,uBAEZ,uBAAG6W,UAAU,qBACX,0BAAM1V,EAAE,+IACR,4BAAQtB,EAAE,UAAUK,GAAG,KAAKD,GAAG,gBA8BtB+e,GAzBI,SAAAlhB,GAAU,IACnBf,EAAUe,EAAVf,MAEFga,EAAa1nB,OAAOC,OAAOyN,EAAMia,iBACjCT,EAAgBX,GAAgBmB,EAAWpjB,QAEjD,OACE,kBAAC,GAAD,CAASrB,SAAUyK,EAAM1I,cACvB,kBAAC,GAAD,CACE/B,SAAUyK,EAAM1I,aAChBkiB,cAAeA,IAEhBQ,EAAWnqB,KAAI,SAAC8I,EAAM3I,GAAP,OACd,kBAAC,GAAD,CACEyL,IAAK9C,EAAKP,UACViD,KAAM1C,EAAKP,UACXnJ,SAAUuqB,EAAcxpB,QAG5B,kBAAC,GAAD,CAAgBqL,KAAK,QACrB,kBAAC,GAAD,QC1ES6mB,GAFE,kBAAM,kBAAC,GAAD,CAAO7I,KAAM,MCErB,I,SAAA,OAAIxZ,GAAU,CAC3B9L,KAAM,OACNsH,KAAM,OACNyE,YAAa,uBACbC,MAAO,cACP5E,eAAgB,CACd,CACEE,KAAM,qBACNtH,KAAM,SACNomB,QAAS,EACT5lB,MAAO,wBACP1C,IAAK,EACLD,IAAK,GACLwoB,SAPF,SAOW5mB,GACP,OAAIA,EAAQY,KAAKvC,IACT,0BAAN,OAAiCuC,KAAKvC,KACpC2B,EAAQY,KAAKxC,IACT,0BAAN,OAAiCwC,KAAKxC,KACjC,OAGX,CACEyJ,KAAM,YACNtH,KAAM,SACNomB,QAAS,IACT5lB,MAAO,YACPT,QAAS,CACP,CACES,MAAO,QACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,UACPf,MAAO,SAKfwM,MCtDa,cAAwB7B,EACrCC,WAAWjD,GACT,MAAMkf,EAAqBC,OACzBnf,EAAekf,oBAEjBjmB,KAAKmmB,SAAWD,OAAOnf,EAAeqf,WAEtC,IAAK,IAAIxqB,EAAI,EAAGA,EAAIqqB,EAAoBrqB,GAAK,EAC3CoE,KAAKwK,aAAc,KAAI5O,EAAK,CAAEmE,KAAMC,KAAKmmB,WAE3CnmB,KAAK0K,cAAc,MAAO,CAAE3K,KAAMC,KAAKmmB,WAGzCE,WAAWtmB,GACT,OAAIA,EAAKP,KAAK0E,GAAe,IAARA,GAAmB,EACpCnE,EAAKpE,MAAMuI,GAAe,IAARA,GAAmB,EAClC,IAGToiB,KAAKziB,GACH,MAAO,CACL0iB,IAAKroB,OAAOC,OAAO0F,GAChBpI,IAAI2D,GAASA,EAAMonB,QAAQxmB,KAAKmmB,WAChCM,YACAhrB,IAAIuE,KAAKqmB,aAIhBK,aAAa7iB,GACX,OAAO7D,KAAKsmB,KAAKziB,GAGnB8iB,UAAU9iB,GACR,OAAO7D,KAAKsmB,KAAKziB,KDsBnBgI,UACAC,UElDIwZ,GAAU/Y,KAAOC,IAAV,+OAWD,SAAAG,GAAK,OACXA,EAAMxL,SACF,uBACA,4BACI,SAAAwL,GAAK,OACbA,EAAMxL,SACF,yBACA,8BAIJ4sB,GAAyBxhB,KAAOC,IAAV,8JAIZ,SAAAG,GAAK,OACjBA,EAAMxL,SACF,yBACA,8BAKC,SAAAwL,GAAK,OAAqB,GAAjBA,EAAM9R,SAAgB,KAIlC0qB,GAAiBhZ,aAAO0X,GAAP1X,CAAH,yEAGhB,SAAAI,GACA,MAAmB,QAAfA,EAAM1F,KAAuB,GAC3B,QAAN,OAAgC,GAAjB0F,EAAM9R,SAAgB,EAArC,UAGA,SAAA8R,GACA,MAAmB,QAAfA,EAAM1F,KAAuB,cAC1B,gBAIEue,GAAQ,SAAC,GAAD,QAAGP,YAAH,MAAU,GAAV,MAAcG,qBAAd,MAA8B,GAA9B,SACnB,yBACE3Q,OAAQwQ,EACR1Q,MAAO0Q,EAAO,GACdQ,QAAQ,0BACRxhB,KAAK,yBACL2K,OAAO,2BACPC,YAAY,uBAEZ,uBAAG6W,UAAU,qBACX,0BAAM1V,EAAE,kPACR,4BAAQtB,EAAE,UAAUK,GAAG,KAAKD,GAAG,cAEjC,uBAAGD,YAAa,IACbuW,EAAcpiB,SAAS,IACtB,0BAAMgN,EAAE,uCAEToV,EAAcpiB,SAAS,IACtB,0BAAMgN,EAAE,uCAEToV,EAAcpiB,SAAS,IACtB,0BAAMgN,EAAE,uCAEToV,EAAcpiB,SAAS,IACtB,0BAAMgN,EAAE,uCAEToV,EAAcpiB,SAAS,IACtB,0BAAMgN,EAAE,0CAuCDge,GAjCG,SAAArhB,GAAU,IAClBf,EAAUe,EAAVf,MAEFga,EAAa1nB,OAAOC,OAAOyN,EAAMia,iBACjCT,EAAgBX,GAAgBmB,EAAWpjB,QAEjD,OACE,kBAAC,GAAD,CAASrB,SAAUyK,EAAMlM,QAAQyB,UAC/B,kBAAC,GAAD,CACEA,SAAUyK,EAAM1I,aAChBkiB,cAAeA,EACfxD,QAAS,KAEVgE,EAAWnqB,KAAI,SAAC8I,EAAM3I,GAAP,OACd,kBAAC,WAAD,CAAUyL,IAAK9C,EAAKP,WAClB,kBAAC,GAAD,CACEiD,KAAM1C,EAAKP,UACXnJ,SAAUuqB,EAAcxpB,MAExBwpB,EAAcxpB,GAAK,GAAKwpB,EAAcxpB,GAAK,IAC3C,kBAACmyB,GAAD,CACE5sB,SAAUyK,EAAM1I,aAChBrI,SAAUuqB,EAAcxpB,SAKhC,kBAAC,GAAD,CAAgBqL,KAAK,QACrB,kBAAC,GAAD,CAAOme,cAAeA,MCnHb6I,GAFC,kBAAM,kBAAC,GAAD,CAAOhJ,KAAM,MCEpB,I,MAAA,OAAIxZ,GAAU,CAC3B9L,KAAM,MACNsH,KAAM,MACNyE,YAAa,sBACbC,MAAO,cACP5E,eAAgB,CACd,CACEE,KAAM,qBACNtH,KAAM,SACNomB,QAAS,EACT5lB,MAAO,wBACP1C,IAAK,EACLD,IAAK,GACLwoB,SAPF,SAOW5mB,GACP,OAAIA,EAAQY,KAAKvC,IACT,0BAAN,OAAiCuC,KAAKvC,KACpC2B,EAAQY,KAAKxC,IACT,0BAAN,OAAiCwC,KAAKxC,KACjC,OAGX,CACEyJ,KAAM,YACNtH,KAAM,SACNomB,QAAS,IACT5lB,MAAO,YACPT,QAAS,CACP,CACES,MAAO,QACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,UACPf,MAAO,SAKfwM,MCtDa,cAAuB7B,EACpCC,WAAWjD,GACT,MAAMkf,EAAqBC,OACzBnf,EAAekf,oBAEjBjmB,KAAKmmB,SAAWD,OAAOnf,EAAeqf,WAEtC,IAAK,IAAIxqB,EAAI,EAAGA,EAAIqqB,EAAoBrqB,GAAK,EAC3CoE,KAAKwK,aAAc,KAAI5O,EAAK,CAAEmE,KAAMC,KAAKmmB,WAE3CnmB,KAAK0K,cAAc,MAAO,CAAE3K,KAAMC,KAAKmmB,WAGzCE,WAAWtmB,GACT,OAAIA,EAAKpE,MAAMuI,GAAe,IAARA,GAAmB,EACrCnE,EAAKP,KAAK0E,GAAe,IAARA,GAAmB,EACjC,IAGToiB,KAAKziB,GACH,MAAO,CACL0iB,IAAKroB,OAAOC,OAAO0F,GAChBpI,IAAI2D,GAASA,EAAMonB,QAAQxmB,KAAKmmB,WAChCM,YACAhrB,IAAIuE,KAAKqmB,aAIhBK,aAAa7iB,GACX,OAAO7D,KAAKsmB,KAAKziB,GAGnB8iB,UAAU9iB,GACR,OAAO7D,KAAKsmB,KAAKziB,KDsBnBgI,UACAC,UEpDIwZ,GAAU/Y,KAAOC,IAAV,8OAWD,SAAAG,GAAK,OACXA,EAAMxL,SACF,uBACA,4BACI,SAAAwL,GAAK,OACbA,EAAMxL,SACF,yBACA,8BAIJokB,GAAiBhZ,aAAO0X,GAAP1X,CAAH,6DAEhB,SAAAI,GACA,MAAmB,OAAfA,EAAM1F,KAAsB,cACb,QAAf0F,EAAM1F,KAAuB,eAC1B,MAIEue,GAAQ,SAAC,GAAD,QAAGP,YAAH,MAAU,GAAV,SACnB,yBACExQ,OAAQwQ,EACR1Q,MAAO0Q,EAAO,GACdQ,QAAQ,iBACRxhB,KAAK,yBACL2K,OAAO,2BACPC,YAAY,uBAEZ,2BACE,0BAAMmB,EAAE,8DACR,4BAAQtB,EAAE,IAAIK,GAAG,KAAKD,GAAG,UAoBhBof,GAfG,SAAAvhB,GAAU,IAGbxL,EAFKwL,EAAVf,MAENlM,QAAWyB,SAGb,OACE,kBAAC,GAAD,CAASA,SAAUA,GACjB,kBAAC,GAAD,CAAgB8F,KAAK,OACrB,kBAAC,GAAD,CAAgBA,KAAK,QACrB,kBAAC,GAAD,QCzDSknB,GAFC,kBAAM,kBAAC,GAAD,CAAOlJ,KAAM,MCEpB,I,SAAA,OAAIxZ,GAAU,CAC3B9L,KAAM,MACNsH,KAAM,MACNyE,YAAa,qBACbC,MAAO,cACP5E,eAAgB,CACd,CACEE,KAAM,YACNtH,KAAM,SACNomB,QAAS,IACT5lB,MAAO,YACPT,QAAS,CACP,CACES,MAAO,QACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,UACPf,MAAO,SAKfwM,MCvCa,cAAuB7B,EACpCC,WAAWjD,GACT/G,KAAKmmB,SAAWD,OAAOnf,EAAeqf,WAEtCpmB,KAAKwK,aAAa,KAAM,CAAEzK,KAAMC,KAAKmmB,WACrCnmB,KAAK0K,cAAc,MAAO,CAAE3K,KAAMC,KAAKmmB,WAGzCG,KAAKziB,GACH,MAAO,CACL0iB,IAAK1iB,EAAMijB,GAAGN,QAAQxmB,KAAKmmB,UAAU1qB,IAAIyI,GAC3B,IAARA,EAAkB,EACf,MD4Bb2H,UACAC,UEnCIwZ,GAAU/Y,KAAOC,IAAV,8OAWD,SAAAG,GAAK,OACXA,EAAMxL,SACF,uBACA,4BACI,SAAAwL,GAAK,OACbA,EAAMxL,SACF,yBACA,8BAIJ4sB,GAAyBxhB,KAAOC,IAAV,8JAIZ,SAAAG,GAAK,OACjBA,EAAMxL,SACF,yBACA,8BAKC,SAAAwL,GAAK,OAAqB,GAAjBA,EAAM9R,SAAgB,KAIlC0qB,GAAiBhZ,aAAO0X,GAAP1X,CAAH,yEAGhB,SAAAI,GACA,MAAmB,QAAfA,EAAM1F,KAAuB,GAC3B,QAAN,OAAgC,GAAjB0F,EAAM9R,SAAgB,EAArC,UAGA,SAAA8R,GACA,MAAmB,QAAfA,EAAM1F,KAAuB,cAC1B,gBAIEue,GAAQ,SAAC,GAAD,QAAGP,YAAH,MAAU,GAAV,MAAcG,qBAAd,MAA8B,GAA9B,SACnB,yBACE3Q,OAAQwQ,EACR1Q,MAAO0Q,EACPQ,QAAQ,0BACRxhB,KAAK,yBACL2K,OAAO,2BACPC,YAAY,uBAEZ,2BACE,0BACEmB,EAAE,gPACF0V,UAAU,uBAGd,uBAAG7W,YAAa,IACbuW,EAAcpiB,SAAS,IACtB,0BAAMgN,EAAE,uCAEToV,EAAcpiB,SAAS,IACtB,0BAAMgN,EAAE,uCAEToV,EAAcpiB,SAAS,IACtB,0BAAMgN,EAAE,uCAEToV,EAAcpiB,SAAS,IACtB,0BAAMgN,EAAE,uCAEToV,EAAcpiB,SAAS,IACtB,0BAAMgN,EAAE,0CAuCDoe,GAjCE,SAAAzhB,GAAU,IACjBf,EAAUe,EAAVf,MAEFga,EAAa1nB,OAAOC,OAAOyN,EAAMia,iBACjCT,EAAgBX,GAAgBmB,EAAWpjB,QAEjD,OACE,kBAAC,GAAD,CAASrB,SAAUyK,EAAMlM,QAAQyB,UAC/B,kBAAC,GAAD,CACEA,SAAUyK,EAAM1I,aAChBkiB,cAAeA,EACfxD,QAAS,KAEVgE,EAAWnqB,KAAI,SAAC8I,EAAM3I,GAAP,OACd,kBAAC,WAAD,CAAUyL,IAAK9C,EAAKP,WAClB,kBAAC,GAAD,CACEiD,KAAM1C,EAAKP,UACXnJ,SAAUuqB,EAAcxpB,MAExBwpB,EAAcxpB,GAAK,GAAKwpB,EAAcxpB,GAAK,IAC3C,kBAAC,GAAD,CACEuF,SAAUyK,EAAM1I,aAChBrI,SAAUuqB,EAAcxpB,SAKhC,kBAAC,GAAD,CAAgBqL,KAAK,QACrB,kBAAC,GAAD,CAAOme,cAAeA,MCrHbiJ,GAFA,kBAAM,kBAAC,GAAD,CAAOpJ,KAAM,MCEnB,I,kBAAA,OAAIxZ,GAAU,CAC3B9L,KAAM,KACNsH,KAAM,KACNyE,YAAa,kBACbC,MAAO,cACP5E,eAAgB,CACd,CACEE,KAAM,qBACNtH,KAAM,SACNomB,QAAS,EACT5lB,MAAO,wBACP1C,IAAK,EACLD,IAAK,GACLwoB,SAPF,SAOW5mB,GACP,OAAIA,EAAQY,KAAKvC,IACT,0BAAN,OAAiCuC,KAAKvC,KACpC2B,EAAQY,KAAKxC,IACT,0BAAN,OAAiCwC,KAAKxC,KACjC,OAGX,CACEyJ,KAAM,YACNtH,KAAM,SACNomB,QAAS,IACT5lB,MAAO,YACPT,QAAS,CACP,CACES,MAAO,QACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,UACPf,MAAO,SAKfwM,MCtDa,cAAsB7B,EACnCC,WAAWjD,GACT,MAAMkf,EAAqBC,OACzBnf,EAAekf,oBAEjBjmB,KAAKmmB,SAAWD,OAAOnf,EAAeqf,WAEtC,IAAK,IAAIxqB,EAAI,EAAGA,EAAIqqB,EAAoBrqB,GAAK,EAC3CoE,KAAKwK,aAAc,KAAI5O,EAAK,CAAEmE,KAAMC,KAAKmmB,WAE3CnmB,KAAK0K,cAAc,MAAO,CAAE3K,KAAMC,KAAKmmB,WAGzCE,WAAWtmB,GACT,OAAIA,EAAKpE,MAAMuI,GAAe,IAARA,GAAmB,EACrCnE,EAAKP,KAAK0E,GAAe,IAARA,GAAmB,EACjC,IAGToiB,KAAKziB,GACH,MAAO,CACL0iB,IAAKroB,OAAOC,OAAO0F,GAChBpI,IAAI2D,GAASA,EAAMonB,QAAQxmB,KAAKmmB,WAChCM,YACAhrB,IAAIuE,KAAKqmB,aAIhBK,aAAa7iB,GACX,OAAO7D,KAAKsmB,KAAKziB,GAGnB8iB,UAAU9iB,GACR,OAAO7D,KAAKsmB,KAAKziB,KDsBnBgI,UACAC,UEpDImgB,GAAc,CAClBntB,EAAG,CAAEyV,MAAO,GAAIE,OAAQ,IACxB1V,EAAG,CAAEwV,MAAO,GAAIE,OAAQ,IACxBzV,EAAG,CAAEuV,MAAO,IAAKE,OAAQ,IACzBxV,EAAG,CAAEsV,MAAO,IAAKE,OAAQ,IACzBvV,GAAI,CAAEqV,MAAO,IAAKE,OAAQ,KAGtByX,GAAiB,CACrBC,EAAG,mBACHrtB,EAAG,kBACH5D,EAAG,wBACH4K,EAAG,sBAGCsmB,GAAa,CACjBD,EAAG,kBACHrtB,EAAG,mBACH5D,EAAG,QACH4K,EAAG,SAGCyf,GAAiBhZ,aAAO0X,GAAP1X,CAAH,kHAOPiZ,GAAQjZ,KAAOC,IAAV,gPAOP,SAAAG,GACP,MAAqB,SAAjBA,EAAM2hB,OACDrC,GAAYtf,EAAMwZ,UAAU5R,MAE9B0X,GAAY,GAAG1X,SAEd,SAAA5H,GACR,MAAqB,SAAjBA,EAAM2hB,OACDrC,GAAYtf,EAAMwZ,UAAU1R,OAE9BwX,GAAY,GAAGxX,UAGV,SAAA9H,GAAK,OACjBA,EAAMxL,SACF,uBACA,4BAEF,SAAAwL,GAAK,OACLA,EAAMxL,SACF,yBACA,8BAIGkrB,GAAe9f,KAAOgiB,KAAV,iLAUZjC,GAAM/f,KAAOC,IAAV,2SASA,SAAAG,GAAK,OAAIuf,GAAevf,EAAMvN,UACxB,SAAAuN,GAAK,OAAIyf,GAAWzf,EAAMvN,UAGrC,SAAAuN,GAAK,OAAqB,IAAhBA,EAAMvN,MAAc,QAAU,WAM7CovB,GAAejiB,KAAOgiB,KAAV,8GAMZE,GAAkBliB,KAAOgiB,KAAV,iHAgENG,GAzBM,SAAA/hB,GAAU,IACrBf,EAAUe,EAAVf,MAEKzK,EAETyK,EAFFlM,QAAWyB,SAHe,EAKxByK,EADF7E,eAAkB4nB,EAJQ,EAIRA,cAAevI,EAJP,EAIOA,UAG7BD,EAAWD,OAAOE,GAExB,OACE,kBAAC,GAAD,CACEjlB,SAAUA,EACVmtB,OAAQK,EACRxI,SAAUA,GAEV,kBAAC,GAAD,CAAc+B,cAAY,iBACL,SAAlByG,EAjDO,SAAA/iB,GAAU,IAEJwa,EAChBxa,EADF7E,eAAkBqf,UAEdD,EAAWD,OAAOE,GAExB,OAAO,YAAI,IAAI/mB,MAAM8mB,IAAW1qB,KAAI,SAACmwB,EAAGxpB,GACtC,IAAMhD,EAAQwM,EAAM4gB,SAASpqB,GAE7B,OACE,kBAAC,GAAD,CAEEiF,IAAKjF,EACLhD,MAAOA,GAENA,MAmCGwvB,CAAQhjB,GA7BC,SAAC/H,EAAOyqB,GAC3B,IAAMO,EAAShrB,EAAMV,WACrB,MAAe,MAAX0rB,EAAuB,kBAACL,GAAD,gBACZ,MAAXK,EACK,kBAACJ,GAAD,mBAEM,YAAXH,EAA6BO,EAClB,gBAAXP,EACI,KAAN,OAAYO,EAAOzmB,SAAS,IAAI0mB,SAAS,EAAG,MACvC,GAqBGC,CAAanjB,EAAM6c,WAAYkG,IAErC,kBAAC,GAAD,CAAgB1nB,KAAK,SCvJZ+nB,GANI,kBACjB,kBAAC,GAAD,CAAO7I,SAAU,EAAGmI,OAAO,QACzB,kBAAC,GAAD,CAAK1G,GAAG,MAAMxoB,MAAO,MCAV,I,MAAA,OAAIqM,GAAU,CAC3B9L,KAAM,SACNsH,KAAM,aACNyE,YAAa,oBACbC,MAAO,iBACP5E,eAAgB,CACd,CACEE,KAAM,YACNtH,KAAM,SACNomB,QAAS,IACT5lB,MAAO,YACPT,QAAS,CACP,CACES,MAAO,QACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,UACPf,MAAO,QAIb,CACE6H,KAAM,gBACNtH,KAAM,SACNomB,QAAS,OACT5lB,MAAO,gBACPT,QAAS,CACP,CACES,MAAO,aACPf,MAAO,QAET,CACEe,MAAO,iBACPf,MAAO,WAET,CACEe,MAAO,qBACPf,MAAO,kBAKfwM,MC3Da,cAA0B7B,EACvCC,WAAWjD,GACT/G,KAAKmmB,SAAWD,OAAOnf,EAAeqf,WAEtCpmB,KAAKwK,aAAa,KAAM,CAAEzK,KAAMC,KAAKmmB,WAGvCsC,WACE,OACEzoB,KAAK6J,QAAQ,MAAM8e,YACnB,IAAItpB,MAAMW,KAAKmmB,UAAUliB,KAAK,GAIlCuoB,SAASpqB,GACP,OAAOpC,KAAKyoB,WAAWrmB,KD6CzByJ,UACAC,UEzDIyZ,GAAiBhZ,aAAO0X,GAAP1X,CAAH,qHAOd+Y,GAAU/Y,KAAOC,IAAV,yFAOAgZ,GAAQ,SAAC,GAAgC,IAA9BrkB,EAA6B,EAA7BA,SAA6B,IAAnBglB,gBAAmB,MAAR,EAAQ,EACnD,OACE,yBACEV,QAAQ,YACRlR,MAAM,KACNE,OAAO,KACPxQ,KAAK,OACL2K,OAAQzN,EAAW,iBAAmB,kBACtC0N,YAAY,IACZwc,cAAc,QACdS,eAAe,SAEf,8BACEtwB,OAAO,cACPqT,YAAW,qBAAgBsX,EAAhB,eACXkF,cAAc,SAEhB,8BACE7vB,OAAO,uBACPyI,KAAK,iBACLgrB,YACE9tB,EACI,4BACA,8BAqBC+tB,GAdK,SAAAviB,GAAU,IACpBf,EAAUe,EAAVf,MAEKzK,EACTyK,EADFlM,QAAWyB,SAGb,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAOA,SAAUA,EAAUglB,SAAUva,EAAMua,WAC3C,kBAAC,GAAD,CAAgBlf,KAAK,UCrDZkoB,GAFG,kBAAM,kBAAC,GAAD,OCET,I,2BAAA,OAAI1jB,GAAU,CAC3B9L,KAAM,QACNsH,KAAM,QACNyE,YAAa,wBACbC,MAAO,SACP5E,eAAgB,CACd,CACEE,KAAM,YACNtH,KAAM,SACNomB,QAAS,IACT5lB,MAAO,YACPT,QAAS,CACP,CACES,MAAO,QACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,UACPf,MAAO,SAKfwM,MCvCa,cAAyB7B,EACtCC,WAAWjD,GACT/G,KAAKmmB,SAAWD,OAAOnf,EAAeqf,WAEtCpmB,KAAK0K,cAAc,MAAO,CAAE3K,KAAMC,KAAKmmB,WAGzC0B,oBACE7nB,KAAKoL,KAAK,CAAEmb,IAAK,UDgCnB1a,UACAC,UEvCIE,GAAOO,KAAOC,IAAV,oPAeK4iB,GAFC,kBAAM,kBAACpjB,GAAD,aCXtB,I,2BAAMsZ,GAAU/Y,KAAOC,IAAV,uPAUG,SAAAG,GAAK,OACjBA,EAAMxL,SACF,uBACA,4BAEF,SAAAwL,GAAK,OACLA,EAAMxL,SACF,yBACA,8BAKJkuB,GAAS9iB,KAAOC,IAAV,8MAaN8iB,GAAO/iB,KAAOC,IAAV,yGAMJ+iB,GAAgBhjB,KAAOC,IAAV,uKAKD,gBAAGtJ,EAAH,EAAGA,WAAH,oDAEZA,EAAa,UAAY,kBAKzBssB,GAAwBjjB,KAAOC,IAAV,wHAOrBijB,GAAUljB,KAAOgiB,KAAV,oNAaPmB,GAAQnjB,KAAOgiB,KAAV,gDAILhJ,GAAiBhZ,aAAO0X,GAAP1X,CAAH,+DAGhB,SAAAI,GACA,MAAmB,UAAfA,EAAM1F,KAAyB,eAChB,SAAf0F,EAAM1F,KACD,wCACU,UAAf0F,EAAM1F,KACD,wCACU,WAAf0F,EAAM1F,KACD,wCACU,YAAf0F,EAAM1F,KAA2B,aAClB,SAAf0F,EAAM1F,KAAwB,cAC3B,MAkDI0oB,GAvCG,SAAAhjB,GAAU,IAClBf,EAAUe,EAAVf,MACFgkB,EAAShkB,EAAMikB,YACfC,EAAkBlkB,EAAMmkB,aACxBC,EAXsB,SAACJ,EAAQK,GACrC,OAAIA,GAAW,EAAU,CAAC,EAAG,GACzBA,GAAWL,EAAOptB,OAAS,EACtB,CAACotB,EAAOptB,OAAS,EAAGotB,EAAOptB,QAC7B,CAACytB,EAAU,EAAGA,EAAU,GAOjBC,CAAsBN,EAAQE,GAE5C,OACE,kBAAC,GAAD,CAAS3uB,SAAUyK,EAAM1I,cACvB,kBAAC,GAAD,CAAgB+D,KAAK,UACrB,kBAAC,GAAD,CAAgBA,KAAK,SACrB,kBAAC,GAAD,CAAgBA,KAAK,YACrB,kBAAC,GAAD,CAAgBA,KAAK,SACrB,kBAAC,GAAD,CAAgBA,KAAK,UACrB,kBAAC,GAAD,CAAgBA,KAAK,WAErB,kBAACooB,GAAD,KACGO,EAAOO,MAAP,MAAAP,EAAM,YAAUI,IAAOv0B,KAAI,SAAC2D,EAAOgD,GAClC,IAAM6tB,EAAU7tB,EAAQ4tB,EAAM,GACxBI,EAAgB,YAAQH,EAC3B7nB,SAAS,IACT0mB,SAAS,EAAG,MAEf,OACE,kBAACQ,GAAD,CAAMjoB,IAAK+oB,GACT,kBAACb,GAAD,CACErsB,WAAY+sB,IAAYH,IAE1B,kBAACN,GAAD,KACE,kBAACC,GAAD,KAAUW,GACV,kBAACV,GAAD,CAAOxsB,YAAU,GAAE9D,WCnIpB,OAAIqM,GAAU,CAC3B9L,KAAM,MACNsH,KAAM,MACNyE,YAAa,uBACbC,MAAO,SACP5E,eAAgB,CACd,CACEE,KAAM,aACNtH,KAAM,SACNomB,QAAS,IACT5lB,MAAO,aACPT,QAAS,CACP,CACES,MAAO,QACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,UACPf,MAAO,QAIb,CACE6H,KAAM,gBACNtH,KAAM,SACNomB,QAAS,IACT5lB,MAAO,gBACPT,QAAS,CACP,CACES,MAAO,QACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,OAIb,CACE6H,KAAM,UACNtH,KAAM,SACNQ,MAAO,oBAGXyL,MCpEa,cAAuB7B,EACpCC,WAAWjD,GACT/G,KAAKqwB,UAAYnK,OAAOnf,EAAeupB,YACvCtwB,KAAKuwB,aAAerK,OAAOnf,EAAeypB,eAC1CxwB,KAAK4vB,QAAU7oB,EAAe0pB,SAAW,IAAIC,YAC3C1wB,KAAKqwB,UACL,GAAKrwB,KAAKuwB,cAGZvwB,KAAKwK,aAAa,QAAS,CAAEP,SAAU,IACvCjK,KAAKwK,aAAa,OAAQ,CAAEP,SAAU,IACtCjK,KAAKwK,aAAa,UAAW,CAC3BzK,KAAMC,KAAKuwB,aACXtmB,SAAU,IAEZjK,KAAKwK,aAAa,QAAS,CAAEP,SAAU,IACvCjK,KAAKwK,aAAa,SAAU,CAAEP,SAAU,IACxCjK,KAAK0K,cAAc,OAAQ,CAAE3K,KAAMC,KAAKqwB,YAG1CM,cACE3wB,KAAK4vB,OAASvwB,MAAM,GAAKW,KAAKuwB,cAActsB,KAAK,GAGnD4rB,YACE,OAAO7vB,KAAK4vB,OAGdG,aACE,OAAK/vB,KAAK4wB,QACF5wB,KAAK6wB,gBAAkB,GAAG1tB,WADT,EAI3BmjB,KAAKziB,EAAOonB,GAKV,OAJAjrB,KAAK6wB,eAAiBhtB,EAAMosB,QAC5BjwB,KAAK4wB,OAAS/sB,EAAM+sB,OAEhB/sB,EAAMuT,OAAOpX,KAAK2wB,cACjB9sB,EAAM+sB,OAEN/sB,EAAM0d,KAUJ,CACL5f,KAAM3B,KAAK4vB,OAAO/rB,EAAMosB,WAVpBhF,EAAK6F,MAAM5F,aAAernB,EAAMuT,QAClCpX,KAAK4vB,OAAO/rB,EAAMosB,SAAWjwB,KAAK6J,QAAQ,QACvCknB,eACA5tB,YAGE,CAAExB,KAAM,MATS,CAAEA,KAAM,OD+BpCkK,UACAC,UEpEIE,GAAOO,KAAOC,IAAV,oPAeKwkB,GAFC,kBAAM,kBAAC,GAAD,aCXtB,I,MAAM1L,GAAU/Y,KAAOC,IAAV,uPAUG,SAAAG,GAAK,OACjBA,EAAMxL,SACF,uBACA,4BAEF,SAAAwL,GAAK,OACLA,EAAMxL,SACF,yBACA,8BAKJkuB,GAAS9iB,KAAOC,IAAV,8MAaN8iB,GAAO/iB,KAAOC,IAAV,yGAMJ+iB,GAAgBhjB,KAAOC,IAAV,uKAKD,gBAAGtJ,EAAH,EAAGA,WAAH,oDAEZA,EAAa,UAAY,kBAKzBssB,GAAwBjjB,KAAOC,IAAV,wHAOrBijB,GAAUljB,KAAOgiB,KAAV,oNAaPmB,GAAQnjB,KAAOgiB,KAAV,gDAILhJ,GAAiBhZ,aAAO0X,GAAP1X,CAAH,+DAGhB,SAAAI,GACA,MAAmB,WAAfA,EAAM1F,KACD,wCACU,YAAf0F,EAAM1F,KAA2B,aAClB,SAAf0F,EAAM1F,KAAwB,cAC3B,MA+CIgqB,GApCG,SAAAtkB,GAAU,IAClBf,EAAUe,EAAVf,MACFgkB,EAAShkB,EAAMikB,YACfC,EAAkBlkB,EAAMmkB,aACxBC,EAXsB,SAACJ,EAAQK,GACrC,OAAIA,GAAW,EAAU,CAAC,EAAG,GACzBA,GAAWL,EAAOptB,OAAS,EACtB,CAACotB,EAAOptB,OAAS,EAAGotB,EAAOptB,QAC7B,CAACytB,EAAU,EAAGA,EAAU,GAOjBC,CAAsBN,EAAQE,GAE5C,OACE,kBAAC,GAAD,CAAS3uB,SAAUyK,EAAM1I,cACvB,kBAAC,GAAD,CAAgB+D,KAAK,YACrB,kBAAC,GAAD,CAAgBA,KAAK,SACrB,kBAAC,GAAD,CAAgBA,KAAK,WAErB,kBAAC,GAAD,KACG2oB,EAAOO,MAAP,MAAAP,EAAM,YAAUI,IAAOv0B,KAAI,SAAC2D,EAAOgD,GAClC,IAAM6tB,EAAU7tB,EAAQ4tB,EAAM,GACxBI,EAAgB,YAAQH,EAC3B7nB,SAAS,IACT0mB,SAAS,EAAG,MAEf,OACE,kBAAC,GAAD,CAAMznB,IAAK+oB,GACT,kBAAC,GAAD,CACEltB,WAAY+sB,IAAYH,IAE1B,kBAAC,GAAD,KACE,kBAAC,GAAD,KAAUM,GACV,kBAAC,GAAD,CAAOltB,YAAU,GAAE9D,WC3HpB,OAAIqM,GAAU,CAC3B9L,KAAM,MACNsH,KAAM,MACNyE,YAAa,mBACbC,MAAO,SACP5E,eAAgB,CACd,CACEE,KAAM,aACNtH,KAAM,SACNomB,QAAS,IACT5lB,MAAO,aACPT,QAAS,CACP,CACES,MAAO,QACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,UACPf,MAAO,QAIb,CACE6H,KAAM,gBACNtH,KAAM,SACNomB,QAAS,IACT5lB,MAAO,gBACPT,QAAS,CACP,CACES,MAAO,QACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,OAIb,CACE6H,KAAM,UACNtH,KAAM,SACNQ,MAAO,oBAGXyL,MCpEa,cAAuB7B,EACpCC,WAAWjD,GACT/G,KAAKqwB,UAAYnK,OAAOnf,EAAeupB,YACvCtwB,KAAKuwB,aAAerK,OAAOnf,EAAeypB,eAC1CxwB,KAAK4vB,QAAU7oB,EAAe0pB,SAAW,IAAIC,YAC3C1wB,KAAKqwB,UACL,GAAKrwB,KAAKuwB,cAGZvwB,KAAKwK,aAAa,UAAW,CAC3BzK,KAAMC,KAAKuwB,aACXtmB,SAAU,IAEZjK,KAAKwK,aAAa,SAAU,CAAEP,SAAU,IACxCjK,KAAK0K,cAAc,OAAQ,CAAE3K,KAAMC,KAAKqwB,YAG1CR,YACE,OAAO7vB,KAAK4vB,OAGdG,aACE,OAAK/vB,KAAK4wB,QACF5wB,KAAK6wB,gBAAkB,GAAG1tB,WADT,EAI3BmjB,KAAKziB,GAIH,OAHA7D,KAAK6wB,eAAiBhtB,EAAMosB,QAC5BjwB,KAAK4wB,OAAS/sB,EAAM+sB,OAEf/sB,EAAM+sB,OAEJ,CACLjvB,KAAM3B,KAAK4vB,OAAO/rB,EAAMosB,UAHA,CAAEtuB,KAAM,ODuCpCkK,UACAC,UElEIyZ,GAAiBhZ,aAAO0X,GAAP1X,CAAH,gFAEhB,SAAAI,GAAK,MAAoB,OAAfA,EAAM1F,KAAgB,aAAe,iBACvC,SAAA0F,GAAK,OAAKA,EAAM9R,UAAY,GAAK,KAGvCyqB,GAAU/Y,KAAOC,IAAV,0FAID,SAAAG,GAAK,OAAI,GAAKA,EAAMwZ,YAGnBX,GAAQ,SAAC,GAA4B,IAA1BrkB,EAAyB,EAAzBA,SAAUglB,EAAe,EAAfA,SAC1B1R,EAAoB,GAAX0R,EAEf,OACE,yBACEV,QAAO,iBAAYhR,GACnBA,OAAQA,EACRF,MAAM,KACNtQ,KAAK,OACL2K,OACEzN,EAAW,uBAAyB,2BAEtCkqB,cAAc,OACdxc,YAAY,KAEZ,0BACEA,YAAY,IACZmB,EAAC,aAAQyE,EAAR,gBAAsBA,EAAS,GAA/B,YAEF,YAAI,IAAIpV,MAAM8mB,IACZ1qB,KAAI,SAACmwB,EAAGxpB,GAAJ,OAAcA,EAAQ,KAC1B3G,KAAI,SAAA2G,GACH,IAAMyqB,EAAYpY,EAAiB,GAARrS,EAE3B,OACE,0BACEiF,IAAKjF,EACL4N,EAAC,cAAS6c,EAAT,gBAA0BA,UAiC1BqE,GAzBQ,SAAAvkB,GAAU,IACvBf,EAAUe,EAAVf,MAEKzK,EAETyK,EAFFlM,QAAWyB,SACOilB,EAChBxa,EADF7E,eAAkBqf,UAGdD,EAAWD,OAAOE,GAClBmF,EAAcrtB,OAAOC,OAAOyN,EAAM4f,kBAExC,OACE,kBAAC,GAAD,CAASrF,SAAUA,GACjB,kBAAC,GAAD,CAAgBlf,KAAK,OACpBskB,EAAY9vB,KAAI,SAAC8I,EAAM3I,GAAP,OACf,kBAAC,GAAD,CACEyL,IAAK9C,EAAKP,UACViD,KAAM1C,EAAKP,UACXnJ,SAAoB,IAATe,EAAI,QAGnB,kBAAC,GAAD,CAAOuF,SAAUA,EAAUglB,SAAUA,MCpE5BgL,GAFM,kBAAM,kBAAC,GAAD,CAAOhL,SAAU,KCE7B,I,MAAA,OAAI1a,GAAU,CAC3B9L,KAAM,WACNsH,KAAM,WACNyE,YAAa,4CACbC,MAAO,SACP5E,eAAgB,CACd,CACEE,KAAM,YACNtH,KAAM,SACNomB,QAAS,IACT5lB,MAAO,kBACPT,QAAS,CACP,CACES,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,UACPf,MAAO,SAKfwM,MCnCa,cAA4B7B,EACzCC,WAAWjD,GACT/G,KAAKD,KAAOmmB,OAAOnf,EAAeqf,WAElCpmB,KAAKwK,aAAa,KAAM,CAAEzK,KAAMC,KAAKD,OACrC,IAAK,IAAInE,EAAI,EAAGA,EAAIoE,KAAKD,KAAMnE,GAAK,EAClCoE,KAAK0K,cAAe,MAAK9O,GAI7B0qB,KAAKziB,GACH,OAAO3F,OAAOyM,YACZ9G,EAAMijB,GACHN,QAAQxmB,KAAKD,MACbtE,IAAI,CAACyI,EAAK9B,GAASI,YAAa,CAC9B,OAAKA,EAASJ,EAAQ,GACvB8B,KAKRwiB,aAAa7iB,GACX,OAAO7D,KAAKsmB,KAAKziB,GAGnB8iB,UAAU9iB,GACR,OAAO7D,KAAKsmB,KAAKziB,KDUnBgI,UACAC,UEjCIslB,GAAW,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAE/C7L,GAAiBhZ,aAAO0X,GAAP1X,CAAH,qHAEV,SAAAI,GAAK,OAAIA,EAAM9R,SAASw2B,cACzB,SAAA1kB,GAAK,OAAIA,EAAM9R,SAASy2B,YAIpBhM,GAAU/Y,KAAOC,IAAV,kRAOT,SAAAG,GAAK,OAAKA,EAAMb,KAAO,GAAK,MAC3B,SAAAa,GAAK,OAAKA,EAAMb,KAAO,GAAK,MAExB,SAAAa,GAAK,uBAAcA,EAAMxL,SAAW,KAAO,SACvC,SAAAwL,GAAK,OAAKA,EAAMob,SAAW,GAAK,KAC9C,SAAApb,GAAK,OAAIA,EAAM8B,SAEf,SAAA9B,GAAK,OACLA,EAAMxL,SACF,yBACA,8BAIGqkB,GAAQ,SAAC,GAAD,IAAG+L,EAAH,EAAGA,SAAUpwB,EAAb,EAAaA,SAAU2K,EAAvB,EAAuBA,KAAvB,OACnB,yBACEyI,MAAOzI,EAAO,GAAK,GACnB2I,OAAQ3I,EAAO,GAAK,GACpB2Z,QAAS3Z,EAAO,aAAe,YAC/B7H,KAAK,OACL4K,YAAY,IACZwc,cAAc,QACdS,eAAe,QACf/J,MAAO,CACLyP,QAASrwB,EAAW,KAAO,KAC3B8tB,YAAa9tB,EAAW,KAAO,OAIjC,8BACE3F,OAAO,8BACPyI,KAAMstB,EAAShoB,EACf2e,cAAY,MAGd,8BACE1sB,OAAO,sCACPyI,KAAMstB,EAAS1wB,EACfqnB,cAAY,MAGd,8BACE1sB,OAAO,sCACPyI,KAAMstB,EAAStP,EACfiG,cAAY,MAGd,8BACE1sB,OAAO,6BACPyI,KAAMstB,EAASvhB,EACfkY,cAAY,MAGd,8BACE1sB,OAAO,2BACPyI,KAAMstB,EAASzrB,EACfoiB,cAAY,MAGd,8BACE1sB,OAAO,6BACPyI,KAAMstB,EAASE,EACfvJ,cAAY,MAGd,8BACE1sB,OAAO,oCACPyI,KAAMstB,EAASG,EACfxJ,cAAY,MAGd,4BACExZ,EAAE,IACFI,GAAG,KACHC,GAAG,KACH9K,KAAMstB,EAASI,GACfzJ,cAAY,SAkCH8E,GA7BG,SAAArgB,GAAU,IAClBf,EAAUe,EAAVf,MAEKzK,EACTyK,EADFlM,QAAWyB,SAGb,OACE,kBAAC,GAAD,CAASA,SAAUA,GACjB,kBAAC,GAAD,CACEA,SAAUA,EACVowB,SAAUH,GAAS9pB,QACjB,SAAC8T,EAAM3e,GAAP,mBAAC,eACI2e,GADL,kBAEG3e,EAAUmP,EAAMhH,SAASnI,OAE5B,MAGH20B,GAAS31B,KAAI,SAAAgB,GAAO,OACnB,kBAAC,GAAD,CACE4K,IAAK5K,EACLwK,KAAMxK,EACN5B,SAAU+Q,EAAMgmB,sBAAsBn1B,UCvGjCo1B,GAlBC,kBACd,kBAAC,GAAD,CAAS/lB,MAAI,GACX,kBAAC,GAAD,CACEA,MAAI,EACJylB,SAAU,CACRhoB,EAAG,UACH1I,EAAG,UACHohB,EAAG,UACHjS,EAAG,UACHlK,EAAG,UACH2rB,EAAG,UACHC,EAAG,UACHC,GAAI,eCVG,I,YAAA,OAAIlmB,GAAU,CAC3B9L,KAAM,MACNsH,KAAM,MACNyE,YAAa,yBACbC,MAAO,iBACP5E,eAAgB,CACd,CACEE,KAAM,cACNtH,KAAM,SACNomB,QAAS,OACT5lB,MAAO,cACPT,QAAS,CACP,CACES,MAAO,OACPf,MAAO,QAET,CACEe,MAAO,MACPf,MAAO,SAIb,CACE6H,KAAM,WACNtH,KAAM,SACNomB,QAAS,UACT5lB,MAAO,WACPT,QAAS,CACP,CACES,MAAO,MACPf,MAAO,WAET,CACEe,MAAO,QACPf,MAAO,WAET,CACEe,MAAO,OACPf,MAAO,WAET,CACEe,MAAO,QACPf,MAAO,WAET,CACEe,MAAO,QACPf,MAAO,aAIb,CACE6H,KAAM,YACNtH,KAAM,SACNomB,QAAS,YACT5lB,MAAO,YACPT,QAAS,CACP,CACES,MAAO,MACPf,MAAO,aAET,CACEe,MAAO,QACPf,MAAO,aAET,CACEe,MAAO,OACPf,MAAO,aAET,CACEe,MAAO,QACPf,MAAO,aAET,CACEe,MAAO,QACPf,MAAO,gBAKfwM,MCnFa,cAAuB7B,EACpCC,WAAWjD,GACT/G,KAAKktB,WAAanmB,EAAeomB,YACjCntB,KAAKotB,OAAS,CACZC,GAAItmB,EAAeumB,SACnBC,IAAKxmB,EAAeymB,WAGtBxtB,KAAKwK,aAAa,IAAK,CAAEP,SAAU,EAAGC,MAAO,IAC7ClK,KAAKwK,aAAa,IAAK,CAAEP,SAAU,EAAGC,MAAO,IAC7ClK,KAAKwK,aAAa,IAAK,CAAEP,SAAU,EAAGC,MAAO,IAC7ClK,KAAKwK,aAAa,IAAK,CAAEP,SAAU,EAAGC,MAAO,IAC7ClK,KAAKwK,aAAa,IAAK,CAAEP,SAAU,EAAGC,MAAO,IAC7ClK,KAAKwK,aAAa,IAAK,CAAEP,SAAU,EAAGC,MAAO,IAC7ClK,KAAKwK,aAAa,IAAK,CAAEP,SAAU,EAAGC,MAAO,IAC7ClK,KAAKwK,aAAa,KAAM,CAAEP,SAAU,EAAGC,MAAO,IAGhDue,SAAShsB,GACP,OAAOuD,KAAK6J,QAAQpN,GAASksB,YAAc,CAAC,GAG9CZ,SAAStrB,GACP,MAAMoH,EAAQ7D,KAAKyoB,SAAShsB,GAAS,GAErC,MAAwB,SAApBuD,KAAKktB,WACO,IAAVrpB,EAIQ,IAAVA,EAIN+tB,sBAAsBn1B,GACpB,MAmCM5B,EAnCY,CAChB0O,EAAG,CACD+nB,SAAU,EACVD,WAAY,GAEdxwB,EAAG,CACDywB,SAAU,EACVD,WAAY,GAEdpP,EAAG,CACDqP,SAAU,EACVD,WAAY,GAEdrhB,EAAG,CACDshB,SAAU,EACVD,WAAY,GAEdvrB,EAAG,CACDwrB,SAAU,EACVD,WAAY,GAEdI,EAAG,CACDH,SAAU,EACVD,WAAY,GAEdK,EAAG,CACDJ,SAAU,EACVD,WAAY,GAEdM,GAAI,CACFL,SAAU,EACVD,WAAY,IAIW50B,GAE3B,MAAO,CACL40B,WAAY,EAAI,IAAMx2B,EAASw2B,WAAa,GAC5CC,SAAgC,IAAtBz2B,EAASy2B,UAAkB,EAAI,IAI7C1sB,SAASnI,GACP,OAAIuD,KAAK+nB,SAAStrB,GAAiBuD,KAAKotB,OAAOC,GACxCrtB,KAAKotB,OAAOG,MDIrB1hB,UACAC,UEjFIyZ,GAAiBhZ,aAAO0X,GAAP1X,CAAH,mHAOPiZ,GAAQjZ,KAAOC,IAAV,8OAUF,SAAAG,GAAK,OACjBA,EAAMxL,SACF,uBACA,4BAEF,SAAAwL,GAAK,OACLA,EAAMxL,SACF,yBACA,8BAIG2wB,GAASvlB,KAAOya,OAAV,oRAaR,SAAAra,GAAK,OAAqB,IAAhBA,EAAMvN,MAAc,QAAU,WAItC2yB,GAAcxlB,KAAOC,IAAV,kKACT,SAAAG,GAAK,OAChBA,EAAMob,SAAW,kBAAoB,sBA0B1BiK,GAhBM,SAAArlB,GAAU,IACrBf,EAAUe,EAAVf,MAEKzK,EACTyK,EADFlM,QAAWyB,SAGb,OACE,kBAAC,GAAD,CAAOA,SAAUA,GACf,kBAAC2wB,GAAD,CAAQrK,QAAS,kBAAM7b,EAAM6b,YAC3B,kBAACsK,GAAD,CAAahK,SAAUnc,EAAMmc,cAE/B,kBAAC,GAAD,CAAgB9gB,KAAK,UC/DZgrB,GARI,kBACjB,kBAAC,GAAD,KACE,kBAACH,GAAD,CAAQlK,GAAG,OACT,kBAACmK,GAAD,CAAa3yB,MAAO,OCDX,I,SAAA,OAAIqM,GAAU,CAC3B9L,KAAM,SACNsH,KAAM,SACNyE,YAAa,gBACbC,MAAO,iBACP5E,eAAgB,GAChB6E,MCVa,cAA0B7B,EACvCC,aACEhK,KAAK0K,cAAc,OAGrBmd,oBACE7nB,KAAKoL,KAAK,CAAEmb,IAAK,IAGnBkB,QAAQrlB,GACN,MAAM8vB,EAAO,GAAO9vB,EAEpBpC,KAAKoL,KAAK,CAAEmb,IAAKvmB,KAAK6pB,YAAcqI,IAGtCrI,YACE,OAAO7pB,KAAK6J,QAAQ,OAAO8e,YAAc,CAAC,GAG5CZ,WACE,OAA+B,IAAxB/nB,KAAK6pB,YAAY,KDT1Bhe,UACAC,UENIwZ,GAAU/Y,KAAOC,IAAV,+OAWD,SAAAG,GAAK,OACXA,EAAMxL,SACF,uBACA,4BACI,SAAAwL,GAAK,OACbA,EAAMxL,SACF,yBACA,8BAIJ4sB,GAAyBxhB,KAAOC,IAAV,8JAIZ,SAAAG,GAAK,OACjBA,EAAMxL,SACF,yBACA,8BAKC,SAAAwL,GAAK,OAAqB,GAAjBA,EAAM9R,SAAgB,KAIlC0qB,GAAiBhZ,aAAO0X,GAAP1X,CAAH,yEAGhB,SAAAI,GACA,MAAmB,QAAfA,EAAM1F,KAAuB,GAC3B,QAAN,OAAgC,GAAjB0F,EAAM9R,SAAgB,EAArC,UAGA,SAAA8R,GACA,MAAmB,QAAfA,EAAM1F,KAAuB,cAC1B,gBAIEue,GAAQ,SAAC,GAAD,QAAGP,YAAH,MAAU,GAAV,MAAcG,qBAAd,MAA8B,GAA9B,SACnB,yBACE3Q,OAAQwQ,EACR1Q,MAAO0Q,EAAO,GACdQ,QAAQ,0BACRxhB,KAAK,yBACL2K,OAAO,2BACPC,YAAY,uBAEZ,2BACE,0BACE5K,KAAK,OACL8d,MAAO,CACL2D,UACE,mDAEJ1V,EAAE,wJAEJ,uBAAG0V,UAAU,qBACX,0BACE1V,EAAE,0OACF0V,UAAU,iBAEZ,4BAAQhX,EAAE,UAAUK,GAAG,KAAKD,GAAG,eAGnC,uBAAGD,YAAa,IACbuW,EAAcpiB,SAAS,IACtB,0BAAMgN,EAAE,uCAEToV,EAAcpiB,SAAS,IACtB,0BAAMgN,EAAE,uCAEToV,EAAcpiB,SAAS,IACtB,0BAAMgN,EAAE,uCAEToV,EAAcpiB,SAAS,IACtB,0BAAMgN,EAAE,uCAEToV,EAAcpiB,SAAS,IACtB,0BAAMgN,EAAE,0CAuCDmiB,GAjCI,SAAAxlB,GAAU,IACnBf,EAAUe,EAAVf,MAEFga,EAAa1nB,OAAOC,OAAOyN,EAAMia,iBACjCT,EAAgBX,GAAgBmB,EAAWpjB,QAEjD,OACE,kBAAC,GAAD,CAASrB,SAAUyK,EAAMlM,QAAQyB,UAC/B,kBAAC,GAAD,CACEA,SAAUyK,EAAM1I,aAChBkiB,cAAeA,EACfxD,QAAS,KAEVgE,EAAWnqB,KAAI,SAAC8I,EAAM3I,GAAP,OACd,kBAAC,WAAD,CAAUyL,IAAK9C,EAAKP,WAClB,kBAAC,GAAD,CACEiD,KAAM1C,EAAKP,UACXnJ,SAAUuqB,EAAcxpB,MAExBwpB,EAAcxpB,GAAK,GAAKwpB,EAAcxpB,GAAK,IAC3C,kBAAC,GAAD,CACEuF,SAAUyK,EAAM1I,aAChBrI,SAAUuqB,EAAcxpB,SAKhC,kBAAC,GAAD,CAAgBqL,KAAK,QACrB,kBAAC,GAAD,CAAOme,cAAeA,MChIbgN,GAFE,kBAAM,kBAAC,GAAD,CAAOnN,KAAM,MCErB,I,SAAA,OAAIxZ,GAAU,CAC3B9L,KAAM,OACNsH,KAAM,OACNyE,YAAa,gCACbC,MAAO,cACP5E,eAAgB,CACd,CACEE,KAAM,qBACNtH,KAAM,SACNomB,QAAS,EACT5lB,MAAO,wBACP1C,IAAK,EACLD,IAAK,GACLwoB,SAPF,SAOW5mB,GACP,OAAIA,EAAQY,KAAKvC,IACT,0BAAN,OAAiCuC,KAAKvC,KACpC2B,EAAQY,KAAKxC,IACT,0BAAN,OAAiCwC,KAAKxC,KACjC,OAGX,CACEyJ,KAAM,YACNtH,KAAM,SACNomB,QAAS,IACT5lB,MAAO,YACPT,QAAS,CACP,CACES,MAAO,QACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,UACPf,MAAO,QAIb,CACE6H,KAAM,0BACNtH,KAAM,SACNomB,QAAS,MACT5lB,MAAO,0BACPT,QAAS,CACP,CACES,MAAO,mCACPf,MAAO,OAET,CACEe,MAAO,6CACPf,MAAO,UAKfwM,MCtEa,cAAwB7B,EACrCC,WAAWjD,GACT/G,KAAKqyB,SAAWtrB,EAAeurB,wBAC/BtyB,KAAKmmB,SAAWD,OAAOnf,EAAeqf,WAEtC,MAAMH,EAAqBC,OACzBnf,EAAekf,oBAGjB,IAAK,IAAIrqB,EAAI,EAAGA,EAAIqqB,EAAoBrqB,GAAK,EAC3CoE,KAAKwK,aAAc,KAAI5O,EAAK,CAAEmE,KAAMC,KAAKmmB,WAE3CnmB,KAAK0K,cAAc,MAAO,CAAE3K,KAAMC,KAAKmmB,WAGzCE,WAAWtmB,GACT,MAAsB,QAAlBC,KAAKqyB,SAA2BryB,KAAKuyB,WAAWxyB,GAC9B,QAAlBC,KAAKqyB,SAA2BryB,KAAKwyB,WAAWzyB,GAC7C,GAGTwyB,WAAWxyB,GACT,OAAgD,IAAzCA,EAAKa,OAAOsD,GAAe,IAARA,GAAW1B,OAAe,EAAI,EAG1DgwB,WAAWzyB,GACT,OAAOA,EAAKa,OAAOsD,GAAe,IAARA,GAAW1B,OAAS,EAAI,EAAI,EAGxD8jB,KAAKziB,GACH,MAAO,CACL0iB,IAAKroB,OAAOC,OAAO0F,GAChBpI,IAAI2D,GAASA,EAAMonB,QAAQxmB,KAAKmmB,WAChCM,YACAhrB,IAAIuE,KAAKqmB,WAAWoM,KAAKzyB,QAIhC0mB,aAAa7iB,GACX,OAAO7D,KAAKsmB,KAAKziB,KDgCnBgI,UACAC,UElEIwZ,GAAU/Y,KAAOC,IAAV,8OAWD,SAAAG,GAAK,OACXA,EAAMxL,SACF,uBACA,4BACI,SAAAwL,GAAK,OACbA,EAAMxL,SACF,yBACA,8BAIJ4sB,GAAyBxhB,KAAOC,IAAV,8JAIZ,SAAAG,GAAK,OACjBA,EAAMxL,SACF,yBACA,8BAKC,SAAAwL,GAAK,OAAqB,GAAjBA,EAAM9R,SAAgB,KAIlC0qB,GAAiBhZ,aAAO0X,GAAP1X,CAAH,yEAGhB,SAAAI,GACA,MAAmB,QAAfA,EAAM1F,KAAuB,GAC3B,QAAN,OAAgC,GAAjB0F,EAAM9R,SAAgB,EAArC,UAGA,SAAA8R,GACA,MAAmB,QAAfA,EAAM1F,KAAuB,cAC1B,gBAIEue,GAAQ,SAAC,GAAD,QAAGP,YAAH,MAAU,GAAV,MAAcG,qBAAd,MAA8B,GAA9B,SACnB,yBACE3Q,OAAQwQ,EACR1Q,MAAO0Q,EACPQ,QAAQ,0BACRxhB,KAAK,yBACL2K,OAAO,2BACPC,YAAY,uBAEZ,2BACE,0BACE5K,KAAK,OACL8d,MAAO,CACL2D,UACE,mDAEJ1V,EAAE,wJAEJ,uBAAG0V,UAAU,wBACX,0BACE1V,EAAE,0OACF0V,UAAU,wBAIhB,uBAAG7W,YAAa,IACbuW,EAAcpiB,SAAS,IACtB,0BAAMgN,EAAE,uCAEToV,EAAcpiB,SAAS,IACtB,0BAAMgN,EAAE,uCAEToV,EAAcpiB,SAAS,IACtB,0BAAMgN,EAAE,uCAEToV,EAAcpiB,SAAS,IACtB,0BAAMgN,EAAE,uCAEToV,EAAcpiB,SAAS,IACtB,0BAAMgN,EAAE,0CAuCD0iB,GAjCG,SAAA/lB,GAAU,IAClBf,EAAUe,EAAVf,MAEFga,EAAa1nB,OAAOC,OAAOyN,EAAMia,iBACjCT,EAAgBX,GAAgBmB,EAAWpjB,QAEjD,OACE,kBAAC,GAAD,CAASrB,SAAUyK,EAAMlM,QAAQyB,UAC/B,kBAAC,GAAD,CACEA,SAAUyK,EAAM1I,aAChBkiB,cAAeA,EACfxD,QAAS,KAEVgE,EAAWnqB,KAAI,SAAC8I,EAAM3I,GAAP,OACd,kBAAC,WAAD,CAAUyL,IAAK9C,EAAKP,WAClB,kBAAC,GAAD,CACEiD,KAAM1C,EAAKP,UACXnJ,SAAUuqB,EAAcxpB,MAExBwpB,EAAcxpB,GAAK,GAAKwpB,EAAcxpB,GAAK,IAC3C,kBAAC,GAAD,CACEuF,SAAUyK,EAAM1I,aAChBrI,SAAUuqB,EAAcxpB,SAKhC,kBAAC,GAAD,CAAgBqL,KAAK,QACrB,kBAAC,GAAD,CAAOme,cAAeA,MC/HbuN,GAFC,kBAAM,kBAAC,GAAD,CAAO1N,KAAM,MCEpB,I,wKAAA,OAAIxZ,GAAU,CAC3B9L,KAAM,MACNsH,KAAM,MACNyE,YAAa,4BACbC,MAAO,cACP5E,eAAgB,CACd,CACEE,KAAM,qBACNtH,KAAM,SACNomB,QAAS,EACT5lB,MAAO,wBACP1C,IAAK,EACLD,IAAK,GACLwoB,SAPF,SAOW5mB,GACP,OAAIA,EAAQY,KAAKvC,IACT,0BAAN,OAAiCuC,KAAKvC,KACpC2B,EAAQY,KAAKxC,IACT,0BAAN,OAAiCwC,KAAKxC,KACjC,OAGX,CACEyJ,KAAM,YACNtH,KAAM,SACNomB,QAAS,IACT5lB,MAAO,YACPT,QAAS,CACP,CACES,MAAO,QACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,SACPf,MAAO,KAET,CACEe,MAAO,UACPf,MAAO,QAIb,CACE6H,KAAM,0BACNtH,KAAM,SACNomB,QAAS,MACT5lB,MAAO,0BACPT,QAAS,CACP,CACES,MAAO,mCACPf,MAAO,OAET,CACEe,MAAO,6CACPf,MAAO,UAKfwM,MCtEa,cAAuB7B,EACpCC,WAAWjD,GACT/G,KAAKqyB,SAAWtrB,EAAeurB,wBAC/BtyB,KAAKmmB,SAAWD,OAAOnf,EAAeqf,WAEtC,MAAMH,EAAqBC,OACzBnf,EAAekf,oBAGjB,IAAK,IAAIrqB,EAAI,EAAGA,EAAIqqB,EAAoBrqB,GAAK,EAC3CoE,KAAKwK,aAAc,KAAI5O,EAAK,CAAEmE,KAAMC,KAAKmmB,WAE3CnmB,KAAK0K,cAAc,MAAO,CAAE3K,KAAMC,KAAKmmB,WAGzCE,WAAWtmB,GACT,MAAsB,QAAlBC,KAAKqyB,SAA2BryB,KAAKuyB,WAAWxyB,GAC9B,QAAlBC,KAAKqyB,SAA2BryB,KAAKwyB,WAAWzyB,GAC7C,GAGTwyB,WAAWxyB,GACT,OAAgD,IAAzCA,EAAKa,OAAOsD,GAAe,IAARA,GAAW1B,OAAe,EAAI,EAG1DgwB,WAAWzyB,GACT,OAAOA,EAAKa,OAAOsD,GAAe,IAARA,GAAW1B,OAAS,EAAI,EAAI,EAGxD8jB,KAAKziB,GACH,MAAO,CACL0iB,IAAKroB,OAAOC,OAAO0F,GAChBpI,IAAI2D,GAASA,EAAMonB,QAAQxmB,KAAKmmB,WAChCM,YACAhrB,IAAIuE,KAAKqmB,WAAWoM,KAAKzyB,QAIhC0mB,aAAa7iB,GACX,OAAO7D,KAAKsmB,KAAKziB,KDgCnBgI,UACAC,UE9CIlF,GAAa,CACjBgsB,GACAC,GACA9L,GACA+K,GACAgB,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,IAGaxtB,MAEFytB,GAAoBztB,GAAWU,QAC1C,SAACkW,EAAK3W,GACJ,IAAM8E,EAAQ6R,EAAIjf,MAAK,SAAAmzB,GAAC,OAAIA,EAAEzqB,OAASJ,EAAU8E,SAKjD,OAHIA,EAAOA,EAAM/E,WAAWjG,KAAKkG,GAC5B2W,EAAI7c,KAAK,CAAEsG,KAAMJ,EAAU8E,MAAO/E,WAAY,CAACC,KAE7C2W,IAET,I,qBCjEI8W,GAAY/nB,KAAOC,IAAV,kGAQTua,GAASxa,KAAOya,OAAOva,OAAM,gBAAME,EAAN,uCAAC,eAC/BA,GAD8B,IAEjChN,KAAM,aAFO4M,CAAH,4ZA0CGgoB,GAde,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAa9nB,EAAhB,EAAgBA,SAAhB,OAC5B,kBAAC4nB,GAAD,CAAWnvB,GAAG,2BACZ,kBAAC,GAAD,CACEsiB,QAAS+M,EACT9nB,SAAUA,EACV+nB,WAAS,UACTC,WAAS,mBACTC,aAAW,QALb,OC7BWC,GAXG,SAAC,GAAD,QAAG3P,YAAH,MAAU,GAAV,MAAcxW,aAAd,MAAsB,OAAtB,SAChB,yBACE8F,MAAO0Q,EACPxQ,OAAQwQ,EACRhhB,KAAMwK,EACNgX,QAAQ,mBAER,6BAASjqB,OAAO,gFCDLq5B,GANC,SAAC,GAAD,QAAG5P,YAAH,MAAU,GAAV,MAAcxW,aAAd,MAAsB,OAAtB,SACd,yBAAK8F,MAAO0Q,EAAMxQ,OAAQwQ,EAAMhhB,KAAMwK,EAAOgX,QAAQ,aACnD,6BAASjqB,OAAO,kDCcLs5B,GAhBE,SAAC,GAAD,QAAG7P,YAAH,MAAU,GAAV,MAAcxW,aAAd,MAAsB,OAAtB,SACf,yBACE8F,MAAO0Q,EACPxQ,OAAQwQ,EACRQ,QAAQ,YACRxhB,KAAK,OACL2K,OAAQH,EACRI,YAAY,IACZwc,cAAc,QACdS,eAAe,SAEf,8BAAUtwB,OAAO,oBACjB,8BAAUA,OAAO,uBCDNu5B,GAXD,SAAC,GAAD,QAAG9P,YAAH,MAAU,GAAV,MAAcxW,aAAd,MAAsB,OAAtB,SACZ,yBACE8F,MAAO0Q,EACPxQ,OAAQwQ,EACRhhB,KAAMwK,EACNgX,QAAQ,qBAER,0BAAMzV,EAAE,6cCOGglB,GAdF,SAAC,GAAD,QAAG/P,YAAH,MAAU,GAAV,MAAcxW,aAAd,MAAsB,OAAtB,SACX,yBACE8F,MAAO0Q,EACPxQ,OAAQwQ,EACRQ,QAAQ,YACRxhB,KAAK,OACL2K,OAAQH,EACRI,YAAY,KAEZ,0BAAM3T,EAAE,IAAIC,EAAE,IAAIoZ,MAAM,KAAKE,OAAO,KAAKwgB,GAAG,IAAIC,GAAG,MACnD,0BAAMllB,EAAE,8DCOGmlB,GAjBH,SAAC,GAAD,QAAGlQ,YAAH,MAAU,GAAV,MAAcxW,aAAd,MAAsB,OAAtB,SACV,yBACE8F,MAAO0Q,EACPxQ,OAAQwQ,EACRQ,QAAQ,YACRxhB,KAAK,OACL2K,OAAQH,EACRI,YAAY,KAEZ,4BAAQC,GAAG,IAAIC,GAAG,IAAIL,EAAE,MACxB,4BAAQI,GAAG,IAAIC,GAAG,KAAKL,EAAE,MACzB,0BAAMob,GAAG,KAAKC,GAAG,IAAIC,GAAG,OAAOC,GAAG,UAClC,0BAAMH,GAAG,QAAQC,GAAG,QAAQC,GAAG,KAAKC,GAAG,OACvC,0BAAMH,GAAG,OAAOC,GAAG,OAAOC,GAAG,KAAKC,GAAG,SCG1BmL,GAhBA,SAAC,GAAD,QAAGnQ,YAAH,MAAU,GAAV,MAAcxW,aAAd,MAAsB,OAAtB,SACb,yBACE8F,MAAO0Q,EACPxQ,OAAQwQ,EACRQ,QAAQ,YACRxhB,KAAK,OACL2K,OAAQH,EACRI,YAAY,KAEZ,8BAAUrT,OAAO,iBACjB,0BAAMwU,EAAE,mFACR,0BAAM8Z,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,OACjC,0BAAMH,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,SCatBoL,GAzBG,SAAC,GAAD,QAAGpQ,YAAH,MAAU,GAAV,MAAcxW,aAAd,MAAsB,OAAtB,SAChB,yBACE8F,MAAO0Q,EACPxQ,OAAgB,GAAPwQ,EAAa,GACtBQ,QAAQ,YACRxhB,KAAK,OACL2K,OAAO,OACPC,YAAY,KAEZ,uBAAG6W,UAAU,wCACX,uBAAGA,UAAU,sCACX,uBAAGA,UAAU,oCACX,uBAAGA,UAAU,iCACX,6BAASlqB,OAAO,wBAChB,0BACEwU,EAAE,2rBACF/L,KAAMwK,UCAL6mB,GAhBF,SAAC,GAAD,QAAGrQ,YAAH,MAAU,GAAV,MAAcxW,aAAd,MAAsB,OAAtB,SACX,yBACE8F,MAAO0Q,EACPxQ,OAAQwQ,EACRQ,QAAQ,YACRxhB,KAAK,OACL2K,OAAQH,EACRI,YAAY,IACZwc,cAAc,QACdS,eAAe,SAEf,0BAAM9b,EAAE,+DACR,0BAAMA,EAAE,8DCuBGulB,GAnCD,SAAC,GAAD,QAAGtQ,YAAH,MAAU,GAAV,MAAcxW,aAAd,MAAsB,OAAtB,SACZ,yBACE8F,MAAO0Q,EACPxQ,OAAQwQ,EACRhhB,KAAMwK,EACNgX,QAAQ,uBAER,2BACE,2BACE,2BACE,0BACEzV,EAAE,y+BAUJ,0BACEA,EAAE,+HAGJ,0BACEA,EAAE,oICnBCwlB,GAPD,SAAC,GAAD,QAAGvQ,YAAH,MAAU,GAAV,MAAcxW,aAAd,MAAsB,UAAtB,SACZ,yBAAK8F,MAAO0Q,EAAMxQ,OAAQwQ,EAAMhhB,KAAMwK,EAAOgX,QAAQ,eACnD,0BAAMzV,EAAE,8GACR,0BAAMA,EAAE,gHCGGylB,GANF,SAAC,GAAD,QAAGxQ,YAAH,MAAU,GAAV,MAAcxW,aAAd,MAAsB,UAAtB,SACX,yBAAK8F,MAAO0Q,EAAMxQ,OAAQwQ,EAAMhhB,KAAMwK,EAAOgX,QAAQ,eACnD,0BAAMzV,EAAE,6MCIG0lB,GANF,SAAC,GAAD,QAAGzQ,YAAH,MAAU,GAAV,MAAcxW,aAAd,MAAsB,OAAtB,SACX,yBAAK8F,MAAO0Q,EAAMxQ,OAAQwQ,EAAMQ,QAAQ,cAAcxhB,KAAMwK,GAC1D,0BAAMuB,EAAE,2kBCYG2lB,GAdE,SAAC,GAAD,QAAG1Q,YAAH,MAAU,GAAV,MAAcxW,aAAd,MAAsB,OAAtB,SACf,yBACE8F,MAAO0Q,EACPxQ,OAAQwQ,EACRQ,QAAQ,YACRxhB,KAAK,OACL2K,OAAQH,EACRI,YAAY,KAEZ,4BAAQC,GAAG,KAAKC,GAAG,KAAKL,EAAE,MAC1B,0BAAMsB,EAAE,quBCJG4lB,GANF,SAAC,GAAD,QAAG3Q,YAAH,MAAU,GAAV,MAAcxW,aAAd,MAAsB,UAAtB,SACX,yBAAK8F,MAAO0Q,EAAMxQ,OAAQwQ,EAAMhhB,KAAMwK,EAAOgX,QAAQ,eACnD,0BAAMzV,EAAE,21BCIG6lB,GANF,SAAC,GAAD,QAAG5Q,YAAH,MAAU,GAAV,MAAcxW,aAAd,MAAsB,OAAtB,SACX,yBAAK8F,MAAO0Q,EAAMxQ,OAAQwQ,EAAMQ,QAAQ,cAAcxhB,KAAMwK,GAC1D,0BAAMuB,EAAE,+rBCcG8lB,GAhBA,SAAC,GAAD,QAAG7Q,YAAH,MAAU,GAAV,MAAcxW,aAAd,MAAsB,OAAtB,SACb,yBACE8F,MAAO0Q,EACPxQ,OAAQwQ,EACRQ,QAAQ,YACRxhB,KAAK,OACL2K,OAAQH,EACRI,YAAY,KAEZ,4BAAQC,GAAG,KAAKC,GAAG,KAAKL,EAAE,MAC1B,0BAAMob,GAAG,KAAKC,GAAG,KAAKC,GAAG,QAAQC,GAAG,UACpC,0BAAMH,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,OAChC,0BAAMH,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,SCGrB8L,GAfC,SAAC,GAAD,QAAG9Q,YAAH,MAAU,GAAV,MAAcxW,aAAd,MAAsB,OAAtB,SACd,yBACE8F,MAAO0Q,EACPxQ,OAAQwQ,EACRQ,QAAQ,YACRxhB,KAAK,OACL2K,OAAQH,EACRI,YAAY,KAEZ,4BAAQC,GAAG,KAAKC,GAAG,KAAKL,EAAE,MAC1B,0BAAMob,GAAG,KAAKC,GAAG,KAAKC,GAAG,QAAQC,GAAG,UACpC,0BAAMH,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,SCP9BqK,GAAY/nB,KAAOC,IAAV,ocA0BTua,GAASxa,KAAOya,OAAOva,OAAM,gBAAME,EAAN,uCAAC,eAC/BA,GAD8B,IAEjChN,KAAM,aAFO4M,CAAH,0MAqDGypB,GAlCkB,SAAC,GAAD,IAC/B7sB,EAD+B,EAC/BA,MACA8sB,EAF+B,EAE/BA,iBACAC,EAH+B,EAG/BA,iBACAC,EAJ+B,EAI/BA,gBAJ+B,OAM/B,kBAAC,GAAD,CAAWhxB,GAAG,8BACZ,kBAAC,GAAD,CACEsiB,QAASwO,EACTvpB,SAAoB,YAAVvD,EACVsrB,WAAS,UACTC,WAAS,oBAET,kBAAC,GAAD,OAEF,kBAAC,GAAD,CACEjN,QAASyO,EACTxpB,SAAoB,WAAVvD,GAAgC,YAAVA,EAChCsrB,WAAS,UACTC,WAAS,oBAET,kBAAC,GAAD,OAEF,kBAAC,GAAD,CACEjN,QAAS0O,EACTzpB,SAAoB,YAAVvD,EACVsrB,WAAS,UACTC,WAAS,mBAET,kBAAC,GAAD,SC5EA0B,GAAU7pB,KAAOC,IAAV,iPAiBP6pB,GAAS9pB,KAAOC,IAAV,gOAuBG8pB,GAND,SAAC,GAAD,IAAGrO,EAAH,EAAGA,SAAH,OACZ,kBAACmO,GAAD,KACE,kBAACC,GAAD,KAASpO,K,UCtCAsO,GAAShqB,KAAOC,IAAV,kLAWNgqB,GAAQjqB,KAAOkqB,GAAV,qIAULC,GAAWnqB,KAAOoqB,GAAV,qIAURC,GAAUrqB,KAAOC,IAAV,oDAIPqqB,GAAatqB,KAAOya,OAAV,gRAUnB,SAAAra,GACA,OAAIA,EAAMkI,KAAa,WAChB,e,UC7CLyf,GAAY/nB,KAAOC,IAAV,ooBASF,SAAAG,GAAK,OAAKA,EAAMzC,MAAQ,UAAY,aAGzB,SAAAyC,GAAK,OAAKA,EAAMzC,MAAQ,UAAY,UAcpC,SAAAyC,GAAK,OAAKA,EAAMzC,MAAQ,UAAY,UActD0oB,GAAQ,SAAC,GAgBR,IAdLkE,EAcI,EAdJA,KACAC,EAaI,EAbJA,MAEA9vB,EAWI,EAXJA,KACA9G,EAUI,EAVJA,MACA62B,EASI,EATJA,cACAr3B,EAQI,EARJA,KACAs3B,EAOI,EAPJA,SAOI,IALJv3B,eAKI,MALM,GAKN,EAHJ4mB,EAGI,EAHJA,KACA7oB,EAEI,EAFJA,IACAD,EACI,EADJA,IA2BA,OAAQmC,GACN,IAAK,SACH,OACE,oCACE,2BAAOu3B,QAASjwB,GAAO9G,GACvB,0CAAQgF,GAAI8B,EAAM8G,IAAKkpB,GAAcF,GAClCr3B,EAAQjE,KAAI,SAAA07B,GAAM,OACjB,4BAAQ/3B,MAAO+3B,EAAO/3B,MAAOiI,IAAK8vB,EAAO/3B,OACtC+3B,EAAOh3B,YAMpB,IAAK,SACH,OACE,oCACE,2BAAO+2B,QAASjwB,GAAO9G,GACvB,yCACEgF,GAAI8B,EACJ8G,IAAKkpB,GACDF,EAHN,CAIEzQ,KAAMA,EACN7oB,IAAKA,EACLD,IAAKA,EACLmC,KAAK,aAIb,IAAK,OACH,OACE,oCACE,2BAAOu3B,QAASjwB,GAAO9G,GACvB,yCAAOgF,GAAI8B,EAAM8G,IAAKkpB,GAAcF,EAApC,CAA2Cp3B,KAAK,WAGtD,IAAK,SACH,OACE,oCACE,2BAAOu3B,QAASjwB,GAAO9G,GACvB,2BACEgF,GAAI8B,EACJmwB,OAAO,SACPz3B,KAAK,OACL03B,SArEe,SAAA51B,GAAU,IAErB61B,EACR71B,EADFjD,OAAU84B,MAGZ,GAAqB,IAAjBA,EAAM90B,OAAV,CAEA,IAAM+0B,EAAc,kBAClB,GAAK3e,aAAL,sCACiC0e,EAAM,GAAGrwB,QAGtCuwB,EAAK,IAAIC,WACfD,EAAGE,QAAUH,EACbC,EAAGG,OAAS,SAAA7xB,GACV,IACE,IAAM8xB,EAAO9xB,EAAEtH,OAAOsC,OACtBg2B,EAAKe,cAAcd,EAAM9vB,KAAM2wB,GAC/B,MAAOE,GACPP,MAGJC,EAAGO,WAAWT,EAAMzZ,KAAK,SAmDzB,QACE,MAAM,IAAI5a,MAAJ,oDACyC+zB,EADzC,aAC2Dr3B,MAKjE6uB,GAAejiB,KAAOC,IAAV,uPA+BHwrB,GAhBqB,SAAArrB,GAAU,IAEjC1F,EAEP0F,EAFFoqB,MAAS9vB,KAILiD,EAFFyC,EADFmqB,KAAQmB,OAGWhxB,GAErB,OACE,kBAAC,GAAD,CAAWiD,MAAOA,GAChB,kBAAC,GAAUyC,GACVzC,GAAS,kBAAC,GAAD,KAAeA,KC/JzBguB,GAAoB,CACxBzqB,UAAW,iBAAO,CAChB6S,iBAAkB,aAClBlM,UAAW,aACX+jB,cAAe,iBAAO,CACpBC,SAAU,aACVC,UAAW,aACXhZ,WAAY,eAEdjhB,SAAU,iBAAO,CAAEoP,SAAU,kBAAM,QAIjC8qB,GAAa,SAACpuB,EAAOwC,GACzB,OAAIA,EAAiB,GACjBxC,EAAc,oBACX,YAGHquB,GAAchsB,KAAOC,IAAV,iIAwDFgsB,GAjDY,SAAC,GAMrB,IAAD,IALJ3xB,UAAalH,EAKT,EALSA,KAAMoM,EAKf,EALeA,OAAQhE,EAKvB,EALuBA,MAC3BhB,EAII,EAJJA,eACA0xB,EAGI,EAHJA,YACAvuB,EAEI,EAFJA,MACAwC,EACI,EADJA,SAEMd,EAAQ,IAAI7D,EAAMhB,EAAgBpH,GAExC,OACE,yBACE+4B,WAAYxuB,IAAUwC,EACtBisB,YAAa,SAAAl3B,GACXA,EAAMwL,aAAa2rB,aACjBn3B,EAAMo3B,cAAc5Q,SAAS,GAC7B,EACA,GAGFxmB,EAAMwL,aAAa6rB,QACjB,YACA/rB,KAAK0E,UAAU,CACb9R,OACAoH,oBAIJnF,uBAAsB,WACpBm3B,IAAQC,OACRP,QAGJhE,WAAS,UACTC,WAAU4D,GAAWpuB,EAAOwC,GAC5BioB,aAAW,UAEVzqB,EACC,kBAACquB,GAAD,MAEA,kBAAC,GAAersB,SAAhB,CAAyB9M,MAAO84B,IAC9B,kBAAC,GAAiBhsB,SAAlB,CAA2B9M,MAAOwM,GAChC,kBAACG,EAAD,CAAQH,MAAOA,QC3DrBqtB,GAAW1sB,KAAOC,IAAV,iRAQE,SAAAG,GAAK,oCACMA,EAAMzC,MAAQ,IAAM,EAD1B,mBAGC,SAAAyC,GAAK,8DAEdA,EAAMzC,MAAQ,IAAM,EAFN,0FAKdyC,EAAMzC,MAAQ,IAAM,EALN,6FAQdyC,EAAMzC,MAAQ,IAAM,EARN,mHAadyC,EAAMzC,MAAQ,IAAM,EAbN,0FAgBdyC,EAAMzC,MAAQ,IAAM,EAhBN,6FAmBdyC,EAAMzC,MAAQ,IAAM,EAnBN,yDA4BrBgvB,GAAa3sB,KAAOC,IAAV,sEAKV2sB,GAAS5sB,KAAOC,IAAV,iDAIN4sB,GAAO7sB,KAAOgiB,KAAV,+IAQJ8K,GAAe9sB,KAAOya,OAAOva,OAAM,gBAAME,EAAN,uCAAC,eACrCA,GADoC,IAEvChN,KAAM,aAFa4M,CAAH,yQAqBZ+sB,GAAmB,SAAAzyB,GAAS,OAChC3I,OAAOyM,YACL9D,EAAUE,eAAetL,KAAI,SAAA8O,GAAa,MAAI,CAC5CA,EAActD,KACdsD,EAAcwb,cAkHLwT,GAxGgB,SAAC,GAMzB,IALLC,EAKI,EALJA,SACA3yB,EAII,EAJJA,UACA4xB,EAGI,EAHJA,YACAgB,EAEI,EAFJA,WACAC,EACI,EADJA,aAEMC,EAAgBxS,mBAChBD,EAAYC,mBAYlB,OAVAI,qBAAU,WACJoS,EAAc3rB,QAChB2rB,EAAc3rB,QAAQ4rB,QAEtB1S,EAAUlZ,QAAQ4rB,WAItBrS,oBAAUwR,IAAQc,SAGhB,oCACE,kBAACtD,GAAD,MACIiD,GACA,kBAAC3C,GAAD,CACEhiB,MAAI,EACJ4S,QAASgS,EACThF,WAAS,UACTC,WAAS,aACTC,aAAW,SAEX,kBAAC,GAAD,OAGJ,kBAAC6B,GAAD,KAAQgD,EAAW,OAAS,YAA5B,cACA,kBAAC3C,GAAD,CACEtY,OAAK,EACLkJ,QAASgR,EACThE,WAAS,UACTC,WAAS,QACTC,aAAW,QAEX,kBAAC,GAAD,QAIJ,kBAACiC,GAAD,KACE,kBAAC,KAAD,CACEkD,cAAeR,GAAiBzyB,GAChCkzB,SAAU,SAAA57B,GACRu7B,EAAa,KAAM,CACjB/5B,KAAMkH,EAAUlH,KAChBoH,eAAgB5I,IAElBs6B,OAGD,gBAAGt6B,EAAH,EAAGA,OAAQ67B,EAAX,EAAWA,QAAX,OACC,kBAAC,KAAD,KACE,kBAACf,GAAD,CAAU/uB,OAAQ8vB,GAChB,kBAAC,GAAD,CACEnzB,UAAWA,EACXE,eAAgB5I,EAChBs6B,YAAaA,EACbvuB,OAAQ8vB,EACRttB,SAAU8sB,KAId,kBAACN,GAAD,CAAYe,aAAa,OACtBpzB,EAAUE,eAAetL,KACxB,SAAC8O,EAAenI,GAAhB,OACE,kBAAC,KAAD,eACEiF,IAAKkD,EAActD,KACnBJ,UAAWmxB,GACXf,SAAoB,IAAV70B,EAAcu3B,EAAgB,MACpCpvB,EAJN,CAKEyb,SACEzb,EAAcyb,SACV,SAAA5mB,GAAK,OACHmL,EAAcyb,SAAS5mB,EAAOjB,IAChC,YAOd,kBAACg7B,GAAD,MACIK,GACA,kBAACJ,GAAD,gDAEF,kBAACC,GAAD,CAAc3sB,UAAWstB,EAASjsB,IAAKmZ,GAlG5B,SAAC8S,EAASR,GACnC,OAAKQ,EACDR,EAAiB,iBACd,iBAFc,oBAkGJU,CAAmBF,EAASR,YCjJhCW,GA7CO,SAAC,GAMhB,IALLC,EAKI,EALJA,OACAxzB,EAII,EAJJA,WACAC,EAGI,EAHJA,UACA4xB,EAEI,EAFJA,YACAlW,EACI,EADJA,oBAEM8X,EAAWC,uBACf,SAAA74B,GAAK,OAbU,SAAC,EAAUg3B,GACf,WAD+B,EAAxB/nB,MAEpB+nB,IAWW8B,CAAW94B,EAAOg3B,KAC3B,CAACA,IAQH,GALAlR,qBAAU,WAER,OADApF,OAAOjZ,iBAAiB,UAAWmxB,GAC5B,kBAAMlY,OAAOxY,oBAAoB,UAAW0wB,MAClD,CAACA,KAECD,EAAQ,OAAO,KAEpB,IAAMhsB,EAAUxH,EAAWrI,MACzB,SAAA0jB,GAAC,OAAIA,EAAEtiB,OAASkH,EAAUnH,QAAQC,QAG9B66B,EAAI,2BACLpsB,GADK,IAERrH,eAAgBqH,EAAQrH,eAAetL,KAAI,SAAA8O,GAAa,kCACnDA,GADmD,IAEtDwb,QAASlf,EAAUE,eAAewD,EAActD,aAIpD,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CACEuyB,UAAQ,EACRf,YAAaA,EACbiB,aAAc,SAACj4B,EAAD,OAAUsF,EAAV,EAAUA,eAAV,OACZwb,EAAoB1b,EAAWE,IAEjCF,UAAW2zB,MC3CblG,GAAY/nB,KAAOC,IAAV,uDAIT+pB,GAAShqB,KAAOC,IAAV,oFAKNgqB,GAAQjqB,KAAOC,IAAV,0EAKLiuB,GAAsBluB,KAAOmuB,GAAV,0HAQnB7D,GAAatqB,KAAOya,OAAV,0GAKD,SAAAra,GAAK,OAAKA,EAAMytB,OAAS,iBAAmB,UAGrDO,GAAiBpuB,KAAOC,IAAV,qGACP,SAAAG,GAAK,OAAKA,EAAMytB,OAAS,OAAS,UAKzCQ,GAAkBruB,KAAOya,OAAV,uQAgBf6T,GAAiBtuB,KAAOoqB,GAAV,4EAKdmE,GAAgBvuB,KAAOC,IAAV,sDA2CJuuB,GAvCQ,SAAC,GAIjB,IAHL9zB,EAGI,EAHJA,KACAL,EAEI,EAFJA,WACAo0B,EACI,EADJA,sBACI,EACsBC,oBAAS,GAD/B,mBACGb,EADH,KACWc,EADX,KAGJ,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAQzT,QAAS,kBAAMyT,GAASd,KAC9B,kBAAC,GAAD,KAAQnzB,GACR,kBAACwzB,GAAD,MACA,kBAAC,GAAD,CACE5lB,MAAI,EACJulB,OAAQA,EACR3S,QAAS,kBAAMyT,GAASd,KAExB,kBAAC,GAAD,QAGJ,kBAACO,GAAD,CAAgBP,OAAQA,GACrBxzB,EAAWnL,KAAI,SAAAoL,GAAS,OACvB,kBAAC+zB,GAAD,CACEnT,QAAS,kBAAMuT,EAAsBn0B,IACrCQ,IAAKR,EAAUI,KACfwtB,WAAS,UACTC,WAAU7tB,EAAU6E,aAEpB,kBAACovB,GAAD,KACE,kBAACj0B,EAAUmF,KAAX,OAEF,kBAAC6uB,GAAD,KAAiBh0B,EAAUI,aCrFjCk0B,GAAY5uB,KAAO1I,MAAV,2OAgBTu3B,GAAS7uB,KAAOC,IAAV,2HAqGG6uB,GA/FS,SAAC,GAIlB,IAHLC,EAGI,EAHJA,OACAN,EAEI,EAFJA,sBACAvC,EACI,EADJA,YAEAlR,oBAAUwR,IAAQc,SADd,MAGwCoB,mBAASK,GAHjD,mBAGGC,EAHH,KAGmBC,EAHnB,OAIgCP,mBAAS,IAJzC,mBAIGQ,EAJH,KAIeC,EAJf,KAoDJ,OACE,oCACE,kBAACnF,GAAD,KACE,kBAAC4E,GAAD,CACEQ,WAAS,EACTC,YAAY,uBACZx8B,MAAOq8B,EACPpE,SAAU,mBArDS,SAAAj4B,GAGzB,GAFAs8B,EAAct8B,GAETA,EAAL,CAKA,IAAMy8B,EAAO,IAAIC,OAAJ,UAAc18B,EAAd,MAAyB,KAEhC28B,EAAoBT,EACvB7/B,KAAI,SAAAkQ,GAKH,OAJgCA,EAAM/E,WAAWpH,MAC/C,SAAAqH,GAAS,OAAIA,EAAUI,KAAK+0B,MAAMH,MAI3B,2BACFlwB,GADL,IAEE/E,WAAY+E,EAAM/E,WAAWhG,QAAO,SAAAiG,GAAS,OAC3CA,EAAUI,KAAK+0B,MAAMH,QAGpB,QAERj7B,QAAO,SAAA+K,GAAK,OAAa,MAATA,KAEnB6vB,EAAkBO,QAvBhBP,EAAkBF,GAkDZW,CADQ,EAAGz9B,OAAUY,QAGvB88B,UAAW,mBA1BG,SAAA70B,GACR,WAARA,IACFq0B,EAAc,IACdF,EAAkBF,IAIV,UAARj0B,GACAo0B,GACAF,EAAe/4B,OAAS,GACxB+4B,EAAe,GAAG30B,WAAWpE,OAAS,GAEtCw4B,EAAsBO,EAAe,GAAG30B,WAAW,IAcvBu1B,CAAb,EAAG90B,QAEhB,kBAACwvB,GAAD,CACEtY,OAAK,EACLkJ,QAASgR,EACThE,WAAS,UACTC,WAAS,QACTC,aAAW,QAEX,kBAAC,GAAD,QAIJ,kBAACiC,GAAD,KACE,kBAACwE,GAAD,KACGG,EAAe9/B,KAAI,gBAAGwL,EAAH,EAAGA,KAAML,EAAT,EAASA,WAAT,OAClB,kBAAC,GAAD,CACEK,KAAMA,EACNL,WAAYA,EACZo0B,sBAAuBA,EACvB3zB,IAAKJ,WChEJm1B,GA1CS,SAAC,GAKlB,IAJLhC,EAII,EAJJA,OACAkB,EAGI,EAHJA,OACA7C,EAEI,EAFJA,YACAtrB,EACI,EADJA,oBACI,EAC8C8tB,mBAAS,MADvD,mBACGoB,EADH,KACsBC,EADtB,KAEEjC,EAAWC,uBACf,SAAA74B,GAAK,OAjBU,SAAC,EAAD,GAGb,IAFFiP,EAEC,EAFDA,KACA+nB,EACC,EADDA,YAAa6D,EACZ,EADYA,qBAEF,WAAT5rB,IACJ+nB,IACA6D,EAAqB,OAWV/B,CAAW94B,EAAO,CAAEg3B,cAAa6D,2BAC1C,CAAC7D,IAQH,OALAlR,qBAAU,WAER,OADApF,OAAOjZ,iBAAiB,UAAWmxB,GAC5B,kBAAMlY,OAAOxY,oBAAoB,UAAW0wB,MAClD,CAACA,IAECD,EAGH,kBAAC,GAAD,KACGiC,EACC,kBAAC,GAAD,CACE5D,YAAa,WACXA,IACA6D,EAAqB,OAEvB5C,aAAcvsB,EACdssB,WAAY,kBAAM6C,EAAqB,OACvCz1B,UAAWw1B,IAGb,kBAAC,GAAD,CACE5D,YAAaA,EACbuC,sBAAuBsB,EACvBhB,OAAQA,KAlBI,MC5BhBhH,GAAY/nB,KAAOgiB,KAAV,iVAIH,SAAA5hB,GAAK,OAAIA,EAAMsY,QACZ,SAAAtY,GAAK,OAAIA,EAAMsY,KAAO,KACrB,SAAAtY,GAAK,OAAIA,EAAMsY,KAAO,KAEvB,SAAAtY,GAAK,OAAIA,EAAMsY,KAAO,KAOX,SAAAtY,GAAK,OAAIA,EAAMsY,KAAO,KAOjCsX,GAJH,SAAC,GAAD,IAAGtU,EAAH,EAAGA,SAAH,IAAahD,YAAb,MAAoB,GAApB,SACV,kBAAC,GAAD,CAAWA,KAAMA,GAAOgD,ICZXuU,GATkBjwB,KAAOC,IAAV,mICOfiwB,GAPsBlwB,KAAOC,IAAV,gHCgJnBkwB,GA/Hc,SAAC,GAAD,IAC3BzZ,EAD2B,EAC3BA,kBACAC,EAF2B,EAE3BA,YACAC,EAH2B,EAG3BA,aACAC,EAJ2B,EAI3BA,cACAC,EAL2B,EAK3BA,eACArQ,EAN2B,EAM3BA,KACAC,EAP2B,EAO3BA,KACAqQ,EAR2B,EAQ3BA,OACAC,EAT2B,EAS3BA,QACAoZ,EAV2B,EAU3BA,mBAV2B,OAY3B,kBAAC,QAAD,CAAMx3B,GAAG,aACP,kBAAC,QAAD,CAAMsiB,QAASxE,GACb,kBAAC,GAAD,KACE,kBAAC,GAAD,OAFJ,YAKE,kBAAC,GAAD,KACE,kBAAC,GAAD,aACA,kBAAC,GAAD,YAIJ,kBAAC,QAAD,CAAMwE,QAASvE,GACb,kBAAC,GAAD,KACE,kBAAC,GAAD,OAFJ,MAKE,kBAAC,GAAD,KACE,kBAAC,GAAD,aACA,kBAAC,GAAD,YAIJ,kBAAC,QAAD,CAAMuE,QAAStE,GACb,kBAAC,GAAD,KACE,kBAAC,GAAD,OAFJ,OAKE,kBAAC,GAAD,KACE,kBAAC,GAAD,aACA,kBAAC,GAAD,YAIJ,kBAAC,QAAD,CAAMsE,QAASrE,GACb,kBAAC,GAAD,KACE,kBAAC,GAAD,OAFJ,QAKE,kBAAC,GAAD,KACE,kBAAC,GAAD,aACA,kBAAC,GAAD,YAIJ,kBAAC,QAAD,CAAMqE,QAASpE,GACb,kBAAC,GAAD,KACE,kBAAC,GAAD,OAFJ,SAKE,kBAAC,GAAD,KACE,kBAAC,GAAD,iBAIJ,kBAAC,aAAD,MAEA,kBAAC,QAAD,CAAMoE,QAASnE,GACb,kBAAC,GAAD,KACE,kBAAC,GAAD,OAFJ,WAOA,kBAAC,QAAD,CAAMmE,QAASlE,GACb,kBAAC,GAAD,KACE,kBAAC,GAAD,OAFJ,YAOA,kBAAC,aAAD,MAEA,kBAAC,QAAD,CAAMkE,QAASzU,GACb,kBAAC,GAAD,KACE,kBAAC,GAAD,OAFJ,OAKE,kBAAC,GAAD,KACE,kBAAC,GAAD,aACA,kBAAC,GAAD,YAIJ,kBAAC,QAAD,CAAMyU,QAASxU,GACb,kBAAC,GAAD,KACE,kBAAC,GAAD,OAFJ,OAKE,kBAAC,GAAD,KACE,kBAAC,GAAD,aACA,kBAAC,GAAD,cACA,kBAAC,GAAD,YAIJ,kBAAC,aAAD,MAEA,kBAAC,QAAD,CACEwU,QAAS,gBAAU5gB,EAAV,EAAG8F,MAAH,OACPgwB,EAAmB91B,KAGrB,kBAAC,GAAD,KACE,kBAAC,GAAD,OANJ,yBASE,kBAAC,GAAD,KACE,kBAAC,GAAD,aACA,kBAAC,GAAD,cCvEO+1B,GA7DY,SAAC,GAAD,IACzBxZ,EADyB,EACzBA,cACApQ,EAFyB,EAEzBA,KACAC,EAHyB,EAGzBA,KACAqQ,EAJyB,EAIzBA,OACAC,EALyB,EAKzBA,QALyB,OAOzB,kBAAC,QAAD,CAAMpe,GAAG,WACP,kBAAC,QAAD,CAAMsiB,QAASrE,GACb,kBAAC,GAAD,KACE,kBAAC,GAAD,OAFJ,QAKE,kBAAC,GAAD,KACE,kBAAC,GAAD,aACA,kBAAC,GAAD,YAIJ,kBAAC,aAAD,MAEA,kBAAC,QAAD,CAAMqE,QAASnE,GACb,kBAAC,GAAD,KACE,kBAAC,GAAD,OAFJ,WAMA,kBAAC,QAAD,CAAMmE,QAASlE,GACb,kBAAC,GAAD,KACE,kBAAC,GAAD,OAFJ,YAOA,kBAAC,aAAD,MAEA,kBAAC,QAAD,CAAMkE,QAASzU,GACb,kBAAC,GAAD,KACE,kBAAC,GAAD,OAFJ,OAKE,kBAAC,GAAD,KACE,kBAAC,GAAD,aACA,kBAAC,GAAD,YAIJ,kBAAC,QAAD,CAAMyU,QAASxU,GACb,kBAAC,GAAD,KACE,kBAAC,GAAD,OAFJ,OAKE,kBAAC,GAAD,KACE,kBAAC,GAAD,aACA,kBAAC,GAAD,cACA,kBAAC,GAAD,cCrBO4pB,I,OAnCM,SAAC,GAAD,IACnB5Z,EADmB,EACnBA,kBACAC,EAFmB,EAEnBA,YACAC,EAHmB,EAGnBA,aACAC,EAJmB,EAInBA,cACAC,EALmB,EAKnBA,eACArQ,EANmB,EAMnBA,KACAC,EAPmB,EAOnBA,KACAqQ,EARmB,EAQnBA,OACAC,EATmB,EASnBA,QACAoZ,EAVmB,EAUnBA,mBAVmB,OAYnB,oCACE,kBAAC,GAAD,CACEvZ,cAAeA,EACfpQ,KAAMA,EACNC,KAAMA,EACNqQ,OAAQA,EACRC,QAASA,IAEX,kBAAC,GAAD,CACEN,kBAAmBA,EACnBC,YAAaA,EACbC,aAAcA,EACdC,cAAeA,EACfC,eAAgBA,EAChBrQ,KAAMA,EACNC,KAAMA,EACNqQ,OAAQA,EACRC,QAASA,EACToZ,mBAAoBA,O,+BCtBpBG,GAAUvwB,KAAOgiB,KAAV,gGAMPwO,GAAUxwB,KAAOmuB,GAAV,uFAsHEsC,GA3GG,SAAC,GAA6B,IAA3B5C,EAA0B,EAA1BA,OAAQ3B,EAAkB,EAAlBA,YACrB4B,EAAWC,uBACf,SAAA74B,GAAK,OAPU,SAAC,EAAUg3B,GACf,WAD+B,EAAxB/nB,MAEpB+nB,IAKW8B,CAAW94B,EAAOg3B,KAC3B,CAACA,IAQH,OALAlR,qBAAU,WAER,OADApF,OAAOjZ,iBAAiB,UAAWmxB,GAC5B,kBAAMlY,OAAOxY,oBAAoB,UAAW0wB,MAClD,CAACA,IAECD,EAGH,kBAAC,GAAD,KACE,kBAAC7D,GAAD,KACE,kBAACC,GAAD,cACA,kBAACK,GAAD,CACEtY,OAAK,EACLkJ,QAASgR,EACThE,WAAS,UACTC,WAAS,QACTC,aAAW,QAEX,kBAAC,GAAD,QAIJ,kBAACiC,GAAD,CACE7U,MAAO,CACLkb,WAAY,EACZC,UAAW,GACXC,UAAW,OACX1oB,OAAQ,oBACR2oB,QAAS,OACTC,cAAe,SACfC,WAAY,WAGd,yBACEvb,MAAO,CACLqb,QAAS,OACTC,cAAe,SACfC,WAAY,WAGd,yBACEC,IAAG,UAAKC,2CAAL,eACHC,IAAI,kBACJ1b,MAAO,CAAExN,MAAO,SAElB,kBAACuoB,GAAD,gBAAkBY,OAGpB,kBAACX,GAAD,MAEA,yBAAKhb,MAAO,CAAE4b,OAAQ,WACpB,uBAAG5b,MAAO,CAAE6b,UAAW,WAAvB,8CAC8C,IAC5C,uBACEC,KAAK,4CACLr/B,OAAO,SACP8f,IAAI,uBAHN,4BAQF,kBAAC,KAAD,CACE3e,KAAK,aACLm+B,UAAU,gBACVC,KAAK,aAEP,uBAAGhc,MAAO,CAAE6b,UAAW,WACrB,mDADF,wIAOF,kBAACb,GAAD,MAEA,yBAAKhb,MAAO,CAAE4b,OAAQ,WACpB,uBAAG5b,MAAO,CAAE6b,UAAW,WAAvB,6BAC6B,IAC3B,uBACEC,KAAK,mCACLr/B,OAAO,SACP8f,IAAI,uBAHN,oBAMK,IARP,uDASuD,IACrD,uBACEuf,KAAK,2BACLr/B,OAAO,SACP8f,IAAI,uBAHN,SAVF,QAvEY,MCvBhB0f,GAAiBzxB,KAAOC,IAAV,iDAIdyxB,GAAQ1xB,KAAO2xB,MAAV,6DAKLC,GAAc5xB,KAAO6xB,GAAV,yGA2LFC,GApLe,SAAC,GAA6B,IAA3BjE,EAA0B,EAA1BA,OAAQ3B,EAAkB,EAAlBA,YACjC4B,EAAWC,uBACf,SAAA74B,GAAK,OAvBU,SAAC,EAAUg3B,GACf,WAD+B,EAAxB/nB,MAEpB+nB,IAqBW8B,CAAW94B,EAAOg3B,KAC3B,CAACA,IAQH,OALAlR,qBAAU,WAER,OADApF,OAAOjZ,iBAAiB,UAAWmxB,GAC5B,kBAAMlY,OAAOxY,oBAAoB,UAAW0wB,MAClD,CAACA,IAECD,EAGH,kBAAC,GAAD,KACE,kBAAC7D,GAAD,KACE,kBAACC,GAAD,2BACA,kBAACK,GAAD,CACEtY,OAAK,EACLkJ,QAASgR,EACThE,WAAS,UACTC,WAAS,QACTC,aAAW,QAEX,kBAAC,GAAD,QAIJ,kBAACiC,GAAD,CACE7U,MAAO,CACLkb,WAAY,GACZC,UAAW,GACXC,UAAW,OACX1oB,OAAQ,sBAGV,8BACE,yCADF,gDAKA,kBAACiiB,GAAD,CAAU3U,MAAO,CAAEmb,UAAW,KAA9B,sBAGA,kBAACc,GAAD,KACE,kBAACC,GAAD,KACE,+BACE,4BACE,kBAACE,GAAD,aACA,kBAACA,GAAD,KACE,kBAAC,GAAD,CAAKlZ,KAAM,IAAX,QACA,kBAAC,GAAD,CAAKA,KAAM,IAAX,MAEF,kBAACkZ,GAAD,OAEF,4BACE,kBAACA,GAAD,aACA,kBAACA,GAAD,KACE,kBAAC,GAAD,CAAKlZ,KAAM,IAAX,QACA,kBAAC,GAAD,CAAKA,KAAM,IAAX,MAEF,kBAACkZ,GAAD,KACE,kBAAC,GAAD,CAAKlZ,KAAM,IAAX,QACA,kBAAC,GAAD,CAAKA,KAAM,IAAX,SACA,kBAAC,GAAD,CAAKA,KAAM,IAAX,OAGJ,4BACE,kBAACkZ,GAAD,aACA,kBAACA,GAAD,KACE,kBAAC,GAAD,CAAKlZ,KAAM,IAAX,QACA,kBAAC,GAAD,CAAKA,KAAM,IAAX,MAEF,kBAACkZ,GAAD,OAEF,4BACE,kBAACA,GAAD,aACA,kBAACA,GAAD,KACE,kBAAC,GAAD,CAAKlZ,KAAM,IAAX,QACA,kBAAC,GAAD,CAAKA,KAAM,IAAX,SACA,kBAAC,GAAD,CAAKA,KAAM,IAAX,MAEF,kBAACkZ,GAAD,KACE,kBAAC,GAAD,CAAKlZ,KAAM,IAAX,QACA,kBAAC,GAAD,CAAKA,KAAM,IAAX,UAOV,kBAACyR,GAAD,CAAU3U,MAAO,CAAEmb,UAAW,KAA9B,wBAGA,kBAACc,GAAD,KACE,kBAACC,GAAD,KACE,+BACE,4BACE,kBAACE,GAAD,4BACA,kBAACA,GAAD,KACE,kBAAC,GAAD,CAAKlZ,KAAM,IAAX,QACA,kBAAC,GAAD,CAAKA,KAAM,IAAX,OAGJ,4BACE,kBAACkZ,GAAD,kBACA,kBAACA,GAAD,KACE,kBAAC,GAAD,CAAKlZ,KAAM,IAAX,QACA,kBAAC,GAAD,CAAKA,KAAM,IAAX,OAGJ,4BACE,kBAACkZ,GAAD,eACA,kBAACA,GAAD,KACE,kBAAC,GAAD,CAAKlZ,KAAM,IAAX,YAGJ,4BACE,kBAACkZ,GAAD,aACA,kBAACA,GAAD,KACE,kBAAC,GAAD,CAAKlZ,KAAM,IAAX,QACA,kBAAC,GAAD,CAAKA,KAAM,IAAX,OAGJ,4BACE,kBAACkZ,GAAD,cACA,kBAACA,GAAD,KACE,kBAAC,GAAD,CAAKlZ,KAAM,IAAX,QACA,kBAAC,GAAD,CAAKA,KAAM,IAAX,OAGJ,4BACE,kBAACkZ,GAAD,YACA,kBAACA,GAAD,KACE,kBAAC,GAAD,CAAKlZ,KAAM,IAAX,QACA,kBAAC,GAAD,CAAKA,KAAM,IAAX,UAOV,kBAACyR,GAAD,CAAU3U,MAAO,CAAEmb,UAAW,KAA9B,sBAGA,kBAACc,GAAD,KACE,kBAACC,GAAD,KACE,+BACE,4BACE,kBAACE,GAAD,aACA,kBAACA,GAAD,KACE,kBAAC,GAAD,CAAKlZ,KAAM,IAAX,UAEF,kBAACkZ,GAAD,OAEF,4BACE,kBAACA,GAAD,cACA,kBAACA,GAAD,KACE,kBAAC,GAAD,CAAKlZ,KAAM,IAAX,UAEF,kBAACkZ,GAAD,OAEF,4BACE,kBAACA,GAAD,aACA,kBAACA,GAAD,KACE,kBAAC,GAAD,CAAKlZ,KAAM,IAAX,QACA,kBAAC,GAAD,CAAKA,KAAM,IAAX,UAEF,kBAACkZ,GAAD,KACE,kBAAC,GAAD,CAAKlZ,KAAM,IAAX,cA9JI,MC3ChBqP,GAAY/nB,KAAOC,IAAV,oTAuBA8xB,GAJQ,kBACrB,kBAAC,GAAD,4BCpBIC,GAAmB,CACvBr0B,MAAO,UACPs0B,QAAS,UACTC,KAAM,UACNC,QAAS,WAKLpK,GAAY/nB,KAAOC,IAAV,8kBAEN,SAAAG,GAAK,OAAKA,EAAMgyB,KAAO,MAAQ,WAJZ,KAqBZ,SAAAhyB,GAAK,OAAI4xB,GAAiB5xB,EAAMhN,SAU1Ci/B,GAAUryB,KAAOgiB,KAAV,8KAUPsQ,GAAWC,aAAH,4FASRC,GAAcxyB,KAAOC,IAAV,iSAOGqyB,IACM,SAAAlyB,GAAK,OAC3BA,EAAMqyB,OAAS,SAAW,aACN,SAAAryB,GAAK,OACzBA,EAAMsyB,QAAUC,MACCA,KAwBNC,GApBE,SAAC,GAAmD,IAAjDR,EAAgD,EAAhDA,KAAMlG,EAA0C,EAA1CA,YAAa2G,EAA6B,EAA7BA,QAASz/B,EAAoB,EAApBA,KAAMs/B,EAAc,EAAdA,QACpD,OACE,kBAAC,GAAD,CACEt/B,KAAMA,EACNs/B,QAASA,EACTN,KAAMA,EACNlX,QAASgR,GAET,kBAACmG,GAAD,KACGQ,EAAQC,MAAR,MAAoB5jC,KAAI,SAAC6jC,EAAQl9B,GAAT,OAEvB,yBAAKiF,IAAKjF,GAAQk9B,OAIrBX,GAAQ,kBAACI,GAAD,CAAaE,QAASA,MCtF/B3K,GAAY/nB,KAAOC,IAAV,2WAiBA,qBAAG+yB,SACH,oBAAsB,UAI/BC,GAAgBjzB,KAAOC,IAAV,sNAKb,qBAAGizB,UAA6B,UAAY,iBAQ5CC,GAAYnzB,KAAO1I,MAAV,+HAQTgzB,GAAatqB,KAAOya,OAAV,2GAOV2Y,GAAmBpzB,KAAOC,IAAV,iDAIhBua,GAASxa,KAAOya,OAAOva,OAAM,gBAAME,EAAN,uCAAC,eAC/BA,GAD8B,IAEjChN,KAAM,aAFO4M,CAAH,8TAMI,SAAAI,GACZ,OAAQA,EAAM8B,OACZ,IAAK,QACH,MAAO,UACT,IAAK,SACH,MAAO,SACT,QACE,MAAO,WAoBTmxB,GAAYrzB,KAAO1I,MAAV,iDAITg8B,GAAatzB,KAAOya,OAAOva,OAAM,gBAAME,EAAN,uCAAC,eACnCA,GADkC,IAErChN,KAAM,aAFW4M,CAAH,mYAyBVuzB,GAAiBvzB,KAAOC,IAAV,mSAgBduzB,GAAqBxzB,KAAOya,OAAV,2MAML,SAAAra,GAAK,OACpBA,EAAM5J,KAAO,OAAS,uBAQpBi9B,GAAazzB,KAAOya,OAAV,uXAeC,qBAAGuY,SACH,iBAAmB,UAuKrBU,GAlKE,SAAC,GAYX,IAXLC,EAWI,EAXJA,YACAC,EAUI,EAVJA,qBACAC,EASI,EATJA,wBACAC,EAQI,EARJA,uBACAC,EAOI,EAPJA,sBACAC,EAMI,EANJA,gBACAC,EAKI,EALJA,eACAC,EAII,EAJJA,6BACAC,EAGI,EAHJA,oBACAC,EAEI,EAFJA,iBACAj0B,EACI,EADJA,SAEMk0B,EAAgBzZ,mBAChB0Z,EAAc1Z,mBACd2Z,EAAe3Z,mBACf4Z,EAAe5Z,mBAJjB,EAKsC8T,oBAAS,GAL/C,mBAKG+F,EALH,KAKmBC,EALnB,OAM0BhG,oBAAS,GANnC,mBAMGsE,EANH,KAMa2B,EANb,KAoBEC,EAAuB,kBAAMF,GAAiBD,IAK9CI,EAAkB,SAAA3/B,GAEpBo/B,EAAY7yB,UACX6yB,EAAY7yB,QAAQqZ,SAAS5lB,EAAMjD,SACpCoiC,EAAc5yB,UACb4yB,EAAc5yB,QAAQqZ,SAAS5lB,EAAMjD,SAEtC2iC,KAUJ,OANA5Z,qBAAU,WAER,OADAlkB,SAAS6F,iBAAiB,YAAak4B,GAChC,kBACL/9B,SAASsG,oBAAoB,YAAay3B,OAI5C,kBAAC,GAAD,CAAW7B,SAAUA,GACnB,kBAACC,GAAD,CACEC,UAAWU,EACX1L,WAAS,UACTC,WAAS,yBACTC,aAAW,SAEX,kBAAC+K,GAAD,CACE3xB,IAAK+yB,EACL1hC,MAAO8gC,EACP7I,SAAU+I,EACViB,QAAShB,EACTiB,OAAQhB,EACRpE,UA/CkB,SAAAz6B,GACxB,GAAKq/B,EAAa9yB,QAAlB,CADiC,IAGzB3G,EAAQ5F,EAAR4F,IACI,UAARA,GAA2B,WAARA,GACrBy5B,EAAa9yB,QAAQuzB,SA2CjBC,UAAW,KAEb,kBAAC,GAAD,CAAY/Z,QA3CU,WACrBqZ,EAAa9yB,SAClB8yB,EAAa9yB,QAAQ4rB,UA0Cf,kBAAC,GAAD,QAIJ,kBAAC+F,GAAD,KACE,kBAACE,GAAD,CACE16B,GAAG,cACH4I,IAAK6yB,EACLnZ,QAAS0Z,EACT1M,WAAS,UACTC,WAAS,cACTC,aAAW,QAEX,oCAEDqM,GACC,kBAAClB,GAAD,CAAgB/xB,IAAK8yB,GACnB,kBAACd,GAAD,CACEtY,QAAS,WACPgZ,IACAU,MAHJ,sBAQA,kBAACpB,GAAD,CACEtY,QAAS,WACPyZ,GAAU,GACVR,IACAS,MAJJ,iBASA,kBAACpB,GAAD,CACEtY,QAAS,WACPkZ,IACAQ,KAEFp+B,MAAI,GALN,UAYJ,yBAAKoC,GAAG,qBACN,kBAAC,GAAD,CACEsJ,MAAM,QACNgZ,QAAS8Y,EACT7zB,SAAUA,EACV+nB,WAAS,UACTC,WAAS,uBACTC,aAAW,QANb,QAUA,kBAAC,GAAD,CACElmB,MAAM,SACN/B,SAAUA,EACV+a,QAnGc,WACjBsZ,EAAa/yB,SAClB+yB,EAAa/yB,QAAQyzB,SAkGbhN,WAAS,UACTC,WAAS,4BACTC,aAAW,QANb,QAUA,kBAACiL,GAAD,CACEz6B,GAAG,aACH4I,IAAKgzB,EACLphC,KAAK,OACLy3B,OAAO,SACPC,SAAUmJ,MAKhB,kBAACR,GAAD,CACET,SAAUA,EACV9X,QAnIkB,kBAAMyZ,GAAU,SAAAQ,GAAM,OAAKA,MAoI7CjN,WAAS,UACTC,WAAU6K,EAAW,gBAAkB,gBACvC5K,aAAW,QAEX,kBAAC,GAAD,S,6FC1UKgN,GAAsB,IAAtBA,GAAmC,IAKjC,IACbx8B,GAAI,eACJ8B,KAAM,0BACN26B,UAAW,2BACXC,UAAW,2BACXrgB,QAAS,CACPrc,GAAI,eACJuc,QAAQ,EACRE,QAAS,EACTC,QAAS,EACTC,KAAM,IACNhnB,SAAU,GACVgnC,OAAQ,CACN,CACE38B,GAAI,uCACJxF,KAAM,gBACNoiC,OAAO,EACPC,aAAa,EACbn6B,OAAQ,CACN,iBAAkB,CAChB1C,GAAI,iBACJxF,KAAM,OACNwB,UAAU,EACVxC,OAAQ,QACR8W,WAAY,aACZjX,OAAQ,MACRqX,WAAY,eACZra,OAAQ,CACN,CACE2J,GAAI,uCACJxF,KAAM,QACNzE,EAAG,GACHC,EAAG,IAEL,CACEgK,GAAI,uCACJxF,KAAM,QACNzE,EAAG,GACHC,EAAG,KAGP8mC,OAAQ,GACRriC,aAAc,GACdC,kBAAmB,KACnBC,kBAAmB,KACnBV,MAAO,KACPW,KAAM,GAER,eAAgB,CACdoF,GAAI,eACJxF,KAAM,OACNwB,UAAU,EACVxC,OAAQ,MACR8W,WAAY,eACZjX,OAAQ,KACRqX,WAAY,KACZra,OAAQ,CACN,CACE2J,GAAI,uCACJxF,KAAM,QACNzE,EAAG,IACHC,EAAG,IAEL,CACEgK,GAAI,uCACJxF,KAAM,QACNzE,EAAG,IACHC,EAAG,KAGP8mC,OAAQ,GACRriC,aAAc,GACdC,kBAAmB,KACnBC,kBAAmB,KACnBV,MAAO,KACPW,KAAM,GAER,kBAAmB,CACjBoF,GAAI,kBACJxF,KAAM,OACNwB,UAAU,EACVxC,OAAQ,SACR8W,WAAY,uCACZjX,OAAQ,MACRqX,WAAY,eACZra,OAAQ,CACN,CACE2J,GAAI,uCACJxF,KAAM,QACNzE,EAAG,GACHC,EAAG,IAEL,CACEgK,GAAI,uCACJxF,KAAM,QACNzE,EAAG,GACHC,EAAG,KAGP8mC,OAAQ,GACRriC,aAAc,CAAC,eACfC,kBAAmB,KACnBC,kBAAmB,KACnBV,MAAO,KACPW,KAAM,GAER,eAAgB,CACdoF,GAAI,eACJxF,KAAM,OACNwB,UAAU,EACVxC,OAAQ,MACR8W,WAAY,eACZjX,OAAQ,KACRqX,WAAY,KACZra,OAAQ,CACN,CACE2J,GAAI,uCACJxF,KAAM,QACNzE,EAAG,IACHC,EAAG,KAEL,CACEgK,GAAI,uCACJxF,KAAM,QACNzE,EAAG,IACHC,EAAG,MAGP8mC,OAAQ,GACRriC,aAAc,GACdC,kBAAmB,KACnBC,kBAAmB,KACnBV,MAAO,KACPW,KAAM,GAER,cAAe,CACboF,GAAI,cACJxF,KAAM,OACNwB,UAAU,EACVxC,OAAQ,KACR8W,WAAY,KACZjX,OAAQ,MACRqX,WAAY,uCACZra,OAAQ,CACN,CACE2J,GAAI,uCACJxF,KAAM,QACNzE,EAAG,GACHC,EAAG,IAEL,CACEgK,GAAI,uCACJxF,KAAM,QACNzE,EAAG,GACHC,EAAG,KAEL,CACEgK,GAAI,uCACJxF,KAAM,QACNzE,EAAG,GACHC,EAAG,MAGP8mC,OAAQ,GACRriC,aAAc,GACdC,kBAAmB,kBACnBC,kBAAmB,KACnBV,MAAO,KACPW,KAAM,KAIZ,CACEoF,GAAI,uCACJxF,KAAM,gBACNoiC,OAAO,EACPC,aAAa,EACbn6B,OAAQ,CACNipB,MAAO,CACL3rB,GAAI,QACJxF,KAAM,QACNwB,UAAU,EACVjG,EAAG,EACHC,EAAG,EACH6L,MAAO,CACL,CACE7B,GAAI,aACJxF,KAAM,OACNwB,UAAU,EACVjG,EAAG,GACHC,EAAG,GACH8L,KAAM,MACNi7B,WAAY,QACZx9B,MAAO,CAAC,kBACRb,OAAO,EACPzE,MAAO,KACPW,KAAM,IAGVgH,eAAgB,CACduhB,aAAc,GACdmB,cAAe,EACfC,aAAc,IAGlByY,IAAK,CACHh9B,GAAI,MACJxF,KAAM,MACNwB,UAAU,EACVjG,EAAG,GACHC,EAAG,EACH6L,MAAO,CACL,CACE7B,GAAI,eACJxF,KAAM,OACNwB,UAAU,EACVjG,EAAG,GACHC,EAAG,GACH8L,KAAM,MACNi7B,WAAY,MACZx9B,MAAO,CAAC,kBACRb,OAAO,EACPzE,MAAO,KACPW,KAAM,GAER,CACEoF,GAAI,eACJxF,KAAM,OACNwB,UAAU,EACVjG,EAAG,GACHC,EAAG,GACH8L,KAAM,MACNi7B,WAAY,MACZx9B,MAAO,CAAC,mBACRb,OAAO,EACPzE,MAAO,KACPW,KAAM,GAER,CACEoF,GAAI,eACJxF,KAAM,OACNwB,UAAU,EACVjG,EAAG,IACHC,EAAG,GACH8L,KAAM,MACNi7B,WAAY,MACZx9B,MAAO,CAAC,gBACRb,OAAO,EACPzE,MAAO,KACPW,KAAM,IAGVgH,eAAgB,CAAEqf,UAAW,IAAKH,mBAAoB,IAExDe,OAAQ,CACN7hB,GAAI,SACJxF,KAAM,SACNwB,UAAU,EACVjG,EAAG,EACHC,EAAG,GACH6L,MAAO,CACL,CACE7B,GAAI,uCACJxF,KAAM,OACNwB,UAAU,EACVjG,EAAG,GACHC,EAAG,GACH8L,KAAM,MACNi7B,WAAY,SACZx9B,MAAO,CAAC,mBACRb,OAAO,EACPzE,MAAO,KACPW,KAAM,IAGVgH,eAAgB,IAElBq7B,IAAK,CACHj9B,GAAI,MACJxF,KAAM,MACNwB,UAAU,EACVjG,EAAG,GACHC,EAAG,IACH6L,MAAO,CACL,CACE7B,GAAI,uCACJxF,KAAM,OACNwB,UAAU,EACVjG,EAAG,GACHC,EAAG,IACH8L,KAAM,KACNi7B,WAAY,MACZx9B,MAAO,CAAC,eACRb,OAAO,EACPzE,MAAO,KACPW,KAAM,GAER,CACEoF,GAAI,eACJxF,KAAM,OACNwB,UAAU,EACVjG,EAAG,IACHC,EAAG,IACH8L,KAAM,MACNi7B,WAAY,MACZx9B,MAAO,CAAC,gBACRb,OAAO,EACPzE,MAAO,KACPW,KAAM,IAGVgH,eAAgB,CACdqf,UAAW,WChTnBic,GAAQvD,aAAH,+JAWLwD,GAAQ/1B,KAAOgiB,KAAV,kRAKI8T,IACO,SAAA11B,GAAK,OAAIA,EAAM8B,SAIzB,SAAA9B,GAAK,OAAIA,EAAMsY,QAChB,SAAAtY,GAAK,OAAIA,EAAMsY,QAGpBsd,GAASh3B,IAAMi3B,YAAW,SAAC71B,EAAOoB,GAAR,OAC9B,kBAACu0B,GAAD,eACErd,KAAM,GACNxW,MAAM,0BACNV,IAAKA,GACDpB,GAEJ,kBAAC21B,GAAD,CAAOrd,KAAM,GAAIxW,MAAM,gCAIrBg0B,GAAa,CACjBC,UAAW,SACXC,aAAc,GACdC,UAAW,8CACXC,aAAc,IAGKC,G,kDACnB,WAAYn2B,GAAQ,IAAD,8BACjB,cAAMA,IAiRRo2B,oBAAsB,WAAO,IACnBC,EAAgB,EAAK75B,MAArB65B,YACQ,EAAKr2B,MAAbs2B,MAGJD,EAAc,IAGlBE,EAD4B,EAAKv2B,MAAzBu2B,qBAzRS,EA6RnB7I,SAAW,YAA8B,IAA3B16B,EAA0B,EAA1BA,KAAMwjC,EAAoB,EAApBA,OAAQ/gC,EAAY,EAAZA,MAAY,EACgB,EAAKuK,MAAnDy2B,EAD8B,EAC9BA,eAAgBC,EADc,EACdA,YAAaC,EADC,EACDA,aAGjC3jC,IAAS4jC,KAAOC,aACJ,IAAVphC,GAAe+gC,IAAWM,KAAQC,MAAML,IAC9B,IAAVjhC,GAAe+gC,IAAWM,KAAQE,MAAML,IAE5C,EAAKM,SAAS,CACZZ,YAAa5gC,GAAS+gC,IAAWM,KAAQC,KAAO,GAAK,MAKrD/jC,IAAS4jC,KAAOM,UAAYV,IAAWM,KAAQK,QACjDR,IACA/xB,aAAaC,QAAQ,aAAa,GAClC4xB,GAAe,GACf,EAAKQ,SAAS,CAAEZ,YAAa,MA7S/B,EAAK75B,MAAQ,CACX65B,YAAa,EACbe,MAAO,CACL,CACE1f,MAAO,WACP2f,QACE,yBAAKjiB,MAAO,CAAEqb,QAAS,OAAQC,cAAe,WAC5C,yBACEE,IAAG,UAAKC,2CAAL,eACHC,IAAI,kBACJ1b,MAAO,CACLxN,MAAO,IACPE,OAAQ,IACRiuB,UAAW,YAGf,sCACU,4CADV,qFAKA,oEAGJlkC,OAAQ,OACRylC,UAAW,SACXC,cAAc,EACdC,qBAAqB,EACrBC,OAAQ,CACNC,KAAM,aACNjsB,KAAM,iBAGV,CACE5Z,OAAQ,6BACR6lB,MAAO,kCACP2f,QACE,gFAKJ,CACExlC,OAAQ,2BACR6lB,MAAO,oBACP2f,QACE,8BACE,0EACA,wJAKA,2BACE,yCADF,WAEE,kBAAC,GAAD,CAAK/e,KAAM,IAAX,QACA,kBAAC,GAAD,CAAKA,KAAM,IAAX,KAHF,eAOJgf,UAAW,OAEb,CACEzlC,OAAQ,wBACR6lB,MAAO,oBACP2f,QAAS,8DACTM,iBAAkB,IAEpB,CACE9lC,OAAQ,wBACR6lB,MAAO,sBACP2f,QACE,yBAAKjiB,MAAO,CAAEqb,QAAS,OAAQC,cAAe,WAC5C,qLAKA,yBACEE,IAAKgH,KACL9G,IAAI,6BACJ1b,MAAK,2BACA0gB,IADA,IAEHluB,MAAO,IACPE,OAAQ,SAKhB6vB,iBAAkB,IAEpB,CACE9lC,OAAQ,iCACR6lB,MAAO,oBACP2f,QACE,yBAAKjiB,MAAO,CAAEqb,QAAS,OAAQC,cAAe,WAC5C,8GAIA,yBACEE,IAAKiH,KACL/G,IAAI,kCACJ1b,MAAK,2BACA0gB,IADA,IAEHluB,MAAO,IACPE,OAAQ,QAGZ,2BACE,uDADF,+EAOJwvB,UAAW,MACXK,iBAAkB,IAEpB,CACE9lC,OAAQ,8BACR6lB,MAAO,oBACP2f,QACE,0BACEjiB,MAAO,CAAEqb,QAAS,OAAQC,cAAe,WAEzC,kFAGA,yBACEE,IAAK78B,KACL+8B,IAAI,kCACJ1b,MAAK,2BACA0gB,IADA,IAEHluB,MAAO,IACPE,OAAQ,QAGZ,2BACE,2DADF,wEAMJwvB,UAAW,MACXK,iBAAkB,IAEpB,CACE9lC,OAAQ,8BACR6lB,MAAO,qBACP2f,QACE,yBAAKjiB,MAAO,CAAEqb,QAAS,OAAQC,cAAe,WAC5C,oHAIA,yBACEE,IAAKkH,KACLhH,IAAI,qCACJ1b,MAAK,2BACA0gB,IADA,IAEHluB,MAAO,IACPE,OAAQ,QAGZ,gDACA,wBAAIsN,MAAO,CAAE4b,OAAQ,IACnB,4BACE,+CACA,kBAAC,GAAD,CAAK1Y,KAAM,IAAX,UAEF,4BACE,yCACA,kBAAC,GAAD,CAAKA,KAAM,IAAX,QACA,kBAAC,GAAD,CAAKA,KAAM,IAAX,YAKRgf,UAAW,OAEb,CACEzlC,OAAQ,eACR6lB,MAAO,mBACP2f,QACE,8BACE,8HAIA,wBAAIjiB,MAAO,CAAE2iB,WAAY,SACvB,sDACA,sDACA,wFAQR,CACElmC,OAAQ,qBACR6lB,MAAO,gBACP2f,QACE,8BACE,6HAKA,gDACA,wBAAIjiB,MAAO,CAAE4b,OAAQ,IACnB,4BACE,yCACA,kBAAC,GAAD,CAAK1Y,KAAM,IAAX,QACA,kBAAC,GAAD,CAAKA,KAAM,IAAX,MAEF,4BACE,yCACA,kBAAC,GAAD,CAAKA,KAAM,IAAX,QACA,kBAAC,GAAD,CAAKA,KAAM,IAAX,SAMV,CACEzmB,OAAQ,OACR6lB,MAAO,wBACP2f,QACE,6BACE,yEAC8C,IAC5C,uBACEnG,KAAK,4CACLr/B,OAAO,SACP8f,IAAI,uBAHN,4BAQF,kBAAC,KAAD,CACE3e,KAAK,aACLm+B,UAAU,gBACVC,KAAK,aAEP,2BACE,mDADF,wIAQJkG,UAAW,SACXC,cAAc,EACdS,gBAAgB,EAChBR,qBAAqB,KApQV,E,qDA0QnB,WACEhiB,OAAOjZ,iBAAiB,SAAUlJ,KAAK+iC,uB,kCAGzC,WACE5gB,OAAOxY,oBAAoB,SAAU3J,KAAK+iC,uB,oBAoC5C,WAAU,IAAD,EACwB/iC,KAAKmJ,MAA5B46B,EADD,EACCA,MAAOf,EADR,EACQA,YACPC,EAAQjjC,KAAK2M,MAAbs2B,IAER,OACE,oCACE,kBAAC,KAAD,CACEA,IAAKA,EACLc,MAAOA,EACPa,UAAW5B,EACX6B,YAAU,EACVC,mBAAiB,EACjBZ,cAAY,EACZS,gBAAc,EACdR,qBAAmB,EACnBY,OAAQ,CACNC,QAAS,CACPrC,aAAc,IAEhBsC,eAAgB,CACdC,SAAU,GACVtH,UAAW,QAEbuH,WAAY,CACV12B,MAAO,QACPy2B,SAAU,IAEZE,WAAY,CACVC,WAAY,UACZH,SAAU,GACVvC,aAAc,GAEhB2C,WAAY,CACV72B,MAAO,UACPy2B,SAAU,GACVK,OAAQ,oBACR5C,aAAc,IAGlByB,OAAQ,CACNoB,KAAM,OACNC,MAAO,QACP1iC,KAAM,UACNqV,KAAM,OACNumB,KAAM,OACN0F,KAAM,QAERqB,gBAAiBnD,GACjBlI,SAAUr6B,KAAKq6B,WAEjB,yBACEtY,MAAO,CACLqb,QAAS6F,EAAM,QAAU,OACzBpoC,SAAU,WACV0Z,MAA2B,IAApB4N,OAAOC,WACd3N,OAA6B,GAArB0N,OAAOE,YACftN,IAAK,MACLF,KAAM,MACN6Q,UAAW,yBAEbvgB,GAAG,8BAEL,yBACE4c,MAAO,CACLqb,QAAS6F,EAAM,QAAU,OACzBpoC,SAAU,WACV0Z,MAAOotB,GACPltB,OAAQktB,GACR5sB,IAAK,MACLF,KAAM,MACN6Q,UAAW,yBAEbvgB,GAAG,8B,GA5XqBsG,aCvBbk6B,I,yDACnB,WAAYh5B,GAAQ,IAAD,8BACjB,cAAMA,IAuDR0D,oBAAsB,WAAO,IAAD,EAQtB,EAAKlH,MANPy8B,EAFwB,EAExBA,sBACAC,EAHwB,EAGxBA,oBACAC,EAJwB,EAIxBA,mBACAC,EALwB,EAKxBA,gBACA5F,EANwB,EAMxBA,qBACA6F,EAPwB,EAOxBA,cAGF,QACEJ,GACAC,GACAC,GACAC,GACA5F,GACA6F,IAxEe,EA4EnBC,gBAAkB,SAAAxkC,GAAU,IAClBqP,EAA4BrP,EAA5BqP,QAAS8B,EAAmBnR,EAAnBmR,SAAUlC,EAASjP,EAATiP,KAE3B,GAAK,EAAKL,sBAAV,CAGA,GAAIS,GAAoB,SAATJ,EAAiB,CAE9B,GADAjP,EAAMoL,kBACD,EAAK43B,WAAWyB,YAAa,OAElC,EAAKC,mBAIP,GAAIr1B,GAAoB,SAATJ,EAAiB,CAE9B,GADAjP,EAAMoL,kBACD,EAAK43B,WAAWyB,YAAa,OAElC,IAAME,EAAgB,EAAKx+B,QAAQmb,mBACnC,GAA6B,IAAzBqjB,EAAc5jC,OAAc,OAChC,IAAM6O,EAAO+0B,EAAc,GAC3B,EAAKC,kBAAkBh1B,GAIpBP,GAAoB,UAATJ,IACdjP,EAAMoL,iBACF,EAAK43B,WAAW6B,YAAa,EAAKpQ,mBACjC,EAAKD,qBAIPnlB,GAAoB,UAATJ,GAA8B,WAATA,KACnCjP,EAAMoL,iBAED,EAAK43B,WAAWyB,aAAa,EAAK/P,mBAIrCrlB,IAAY8B,GAAqB,SAATlC,IAC1BjP,EAAMoL,iBACN,EAAK0zB,oBAKJzvB,GAAoB,SAATJ,GACXI,GAAW8B,GAAqB,SAATlC,KAExBjP,EAAMoL,iBACN,EAAK05B,qBA9HU,EAkInBC,eAAiB,SAAAhlB,GACf,OAAKA,GAEmD,IAAjDtjB,OAAOmG,KAAKmd,EAAQsgB,OAAO,GAAGj6B,QAAQrF,QArI5B,EAwInBikC,SAAW,SAAA7O,GACT,EAAKgM,SAAS,CACZ1D,YAAatI,EAAK3wB,KAClBy/B,iBAAkB9O,EAAKgK,YAEzB,EAAKh6B,QAAQ2Z,KAAKqW,EAAKpW,UA7IN,EAgJnBmlB,YAhJmB,uCAgJL,WAAM1/B,GAAN,iBAAAsC,EAAA,6DACZ,EAAKq6B,SAAS,CAAEgD,kBAAkB,IADtB,SAEWzkB,OAAO0kB,MAAP,qBAA2B5/B,EAA3B,WAFX,cAEN6/B,EAFM,gBAGUA,EAASC,OAHnB,OAGNvlB,EAHM,OAIZ,EAAKilB,SAASjlB,GACd,EAAKoiB,SAAS,CAAEgD,kBAAkB,IALtB,2CAhJK,wDAwJnBI,YAAc,WACZ,IAAMC,EAAYl6B,KAAKC,MACrBuE,aAAaI,QAAQ,qBAGnB,EAAK60B,eAAL,OAAoBS,QAApB,IAAoBA,OAApB,EAAoBA,EAAWzlB,SACjC,EAAKoiB,SAAS,CAAEsD,iBAAiB,IAKpB/kB,OAAOglB,QAAQ,gCAE5B,EAAKV,SAASQ,IAEd,EAAKrD,SAAS,CAAEsD,iBAAiB,IACjC31B,aAAa61B,WAAW,sBAxKT,EA4KnBC,iBAAmB,SAACC,EAAgBC,GAClC,OAAI,EAAKf,eAAec,IAGtBv6B,KAAK0E,UAAU81B,EAAiBzF,UAChC/0B,KAAK0E,UAAU61B,EAAexF,SAjLf,EAqLnB0F,cAAgB,SAAA/lC,GACd,IAAMwlC,EAAYl6B,KAAKC,MACrBuE,aAAaI,QAAQ,uBAEjBimB,EAAO,EAAK6P,eAEd,EAAKJ,iBAAiBzP,EAAKpW,QAASylB,EAAUzlB,WAC5C,EAAKijB,WAAWyB,aAClB30B,aAAaC,QACX,mBACAzE,KAAK0E,UAAUmmB,IAInBn2B,EAAMimC,YACJ,sDApMa,EAwMnBD,aAAe,WAAO,IAAD,EACuB,EAAKt+B,MAAvC+2B,EADW,EACXA,YAAawG,EADF,EACEA,iBACfllB,EAAU,EAAK5Z,QAAQD,YAE7B,MAAO,CACLxC,GAAIqc,EAAQrc,GACZ8B,KAAMi5B,EACN0B,UAAW8E,GAAoB,IAAIiB,KACnC9F,UAAW,IAAI8F,KACfnmB,YAjNe,EAqNnBomB,SAAW,WACT,IAAMhQ,EAAO,EAAK6P,eAEM,iBAApB7P,EAAKpW,QAAQrc,KACb,EAAKqhC,eAAe5O,EAAKpW,UACxB,EAAKijB,WAAWyB,aAErB30B,aAAaC,QAAQ,mBAAoBzE,KAAK0E,UAAUmmB,MA5NvC,EA+NnBiQ,sBAAwB,WACtB,IAAMj+B,EAAO,EAAK66B,WAAWqD,UAG7B5pC,OAAO0M,QAAQhB,EAAKhD,YAAY7F,SAAQ,mCAAEoE,EAAF,KAAM4iC,EAAN,YACtC,EAAKngC,QAAQ8b,qBAAqBve,EAAI4iC,MAIxC7pC,OAAO0M,QAAQhB,EAAKlF,OAAO3D,SAAQ,mCAAEoE,EAAF,KAAM/F,EAAN,YACjC,EAAKwI,QAAQ4b,gBAAgBre,EAAI/F,MAGnC,EAAKqlC,WAAWr7B,YAChB,EAAKxB,QAAQ+Z,WA7OI,EAgPnBqmB,iBAAmB,WACZ,EAAKvD,WAAW6B,cAErB,EAAKuB,wBAELjmC,sBAAsB,EAAKomC,oBArPV,EAwPnBC,wBAA0B,SAAAxmC,GACxBA,EAAM4R,kBACN5R,EAAMoL,iBACN,EAAK+2B,SAAS,CAAE1D,YAAaz+B,EAAMjD,OAAOY,SA3PzB,EA8PnB8oC,uBAAyB,SAAAzmC,GACvB,EAAKmiC,SAAS,CAAEzD,sBAAsB,IAlQb,qBAmQrB1+B,EAAMjD,OAAOY,OACfqC,EAAMjD,OAAOoyB,UAjQE,EAoQnBuX,sBAAwB,kBACtB,EAAKvE,SAAS,CAAEzD,sBAAsB,KArQrB,EAuQnBI,gBAAkB,WACa,EAAKp3B,MAA1Bu9B,kBAEN,EAAK9C,SAAS,CAAE8C,iBAAkB,IAAIiB,OAExC,IAAM/P,EAAO7qB,KAAK0E,UAAU,EAAKg2B,eAAgB,KAAM,GACjDW,EAAO,IAAIC,KAAK,CAACzQ,GAAO,CAC5Bj4B,KAAM,qBAIF2oC,EADkB,EAAKn/B,MAArB+2B,YACqBqI,QAAQ,gBAAiB,IACtDh3B,aAAaC,QAAQ,qBAAsBomB,GAE3C4Q,KAAUC,OAAOL,EAAjB,UAA0BE,EAA1B,YArRiB,EAwRnB/B,gBAAkB,kBAChBljC,SAASqlC,eAAe,cAAcjH,SAzRrB,EA2RnBjB,eAAiB,SAAA/+B,GAAU,IAEb61B,EACR71B,EADFjD,OAAU84B,MAGZ,GAAqB,IAAjBA,EAAM90B,OAAV,CAEA,IAAM+0B,EAAc,kBAClB,EAAK3e,aAAL,uCACkC0e,EAAM,GAAGrwB,QAGvCuwB,EAAK,IAAIC,WACfD,EAAGE,QAAUH,EACbC,EAAGG,OAAS,SAAA7xB,GACV,IACE,IAAM8xB,EAAO7qB,KAAKC,MAAMlH,EAAEtH,OAAOsC,QACjC,EAAK2lC,SAAS7O,GACd,MAAOE,GACPP,MAGJC,EAAGO,WAAWT,EAAMzZ,KAAK,MAjTR,EAoTnBoY,iBAAmB,WACjB,IAAMpkB,EAAa9E,KAAK0E,UAAU,EAAK7J,QAAQD,aAC/C4J,aAAaC,QAAQ,mBAAoBK,GAEzC,EAAKjK,QAAQgK,iBACb,EAAKhK,QAAQmZ,WAAU,GAEvB,EAAK0jB,WAAW7+B,MAAM,EAAKgC,QAAQxJ,YACnC,EAAK4pC,mBACL,EAAKW,eA7TY,EAgUnBzS,iBAAmB,WACjB,EAAKuO,WAAWp+B,QAChB,EAAKsiC,eAlUY,EAqUnBxS,gBArUmB,sBAqUD,sBAAA5sB,EAAA,sEACV,EAAKk7B,WAAW/9B,OADN,OAEhB,EAAKkB,QAAQgc,iBACb,EAAKhc,QAAQmZ,WAAU,GACvB,EAAK4nB,cACL,EAAKlE,WAAWr7B,YALA,2CArUC,EA6UnB+8B,iBAAmB,kBACjB,EAAKvC,SAAS,CACZgC,uBAAuB,KA/UR,EAkVnBgD,iBAAmB,kBACjB,EAAKhF,SAAS,CACZgC,uBAAuB,KApVR,EAuVnBS,kBAAoB,SAAAwC,GAClB,EAAKjhC,QAAQgK,iBAEb,EAAKgyB,SAAS,CACZiC,qBAAqB,EACrBgD,mBA5Ve,EAgWnBC,kBAAoB,kBAClB,EAAKlF,SAAS,CACZiC,qBAAqB,EACrBgD,cAAe,QAnWA,EAsWnBzF,eAAiB,SAAA4C,GAAa,OAAI,EAAKpC,SAAS,CAAEoC,mBAtW/B,EAwWnB+C,aAAe,kBAAM,EAAK3F,gBAAe,IAxWtB,EA0WnB4F,iBAAmB,kBACjB,EAAKpF,SAAS,CAAEkC,oBAAoB,KA3WnB,EA6WnBmD,iBAAmB,kBACjB,EAAKrF,SAAS,CAAEkC,oBAAoB,KA9WnB,EAgXnBoD,cAAgB,kBAAM,EAAKtF,SAAS,CAAEmC,iBAAiB,KAhXpC,EAkXnBoD,cAAgB,kBAAM,EAAKvF,SAAS,CAAEmC,iBAAiB,KAlXpC,EAoXnBntB,aApXmB,uCAoXJ,WAAOwmB,GAAP,+BAAA71B,EAAA,yDAAgB5J,EAAhB,+BAAuB,QAC5BypC,EAAa,EAAKjgC,MAAlBigC,SACFnK,EAAU,IAAmC,GAA5BG,EAAQC,MAAM,KAAK78B,QAEtC4mC,EAASzK,KAJA,uBAKX0K,aAAaD,EAASE,WACtB,EAAKC,eANM,SAOL,IAAI//B,SAAQ,SAAAggC,GAAG,OAAIC,WAAWD,EAAK,QAP9B,OAUb,EAAK5F,SAAS,CACZwF,SAAU,CACRzK,MAAM,EACNS,UACAz/B,OACAs/B,UACAqK,UAAWG,WAAW,EAAKF,aAActK,MAhBhC,2CApXI,wDAyYnBsK,aAAe,WAAO,IACZH,EAAa,EAAKjgC,MAAlBigC,SACRC,aAAaD,EAASE,WAEtB,EAAK1F,UAAS,SAAAz6B,GAAK,MAAK,CACtBigC,SAAS,2BACJjgC,EAAMigC,UADH,IAENzK,MAAM,SAhZO,EAqZnB+K,sBAAwB,WACtB,EAAKC,kBAAoB,EAAKlC,eAC9B,EAAKhB,SAASmD,IACd,EAAKC,iCAxZY,EA2ZnBC,wBAA0B,WACnB,EAAKH,oBAEV,EAAKlD,SAAS,EAAKkD,mBACnB,EAAKA,kBAAoB,OA/ZR,EAkanBE,8BAAgC,WAC9B,EAAKjiC,QACFxJ,WACAgX,WACE+M,OAAOC,WAAauf,IAAoB,GACxCxf,OAAOE,YAAcsf,IAAqB,GAE/C,EAAK/5B,QAAQwZ,cACb,EAAKxZ,QAAQ+Z,WAvab,EAAKxY,MAAQ,CACXy8B,uBAAuB,EACvBC,qBAAqB,EACrBC,oBAAoB,EACpBC,iBAAiB,EACjB8C,cAAe,KACf3B,iBAAiB,EACjBlB,eAAgBj5B,KAAKC,MAAMuE,aAAaI,QAAQ,cAChDuuB,YAduB,mBAevBwG,iBAAkB,KAClBvG,sBAAsB,EACtByG,kBAAkB,EAClBwC,SAAU,CACRzK,MAAM,EACNS,QAAS,GACTz/B,KAAM,UACNs/B,QAAS,EACTqK,UAAW,OAIf,EAAK1hC,QAAU,IAAIqY,GACjBrZ,GACA,EAAKyJ,oBACL,EAAKuI,cAEP,EAAK6rB,WAAa,IAAI77B,EAAiBhC,IA7BtB,E,qDAgCnB,WACE,IACMmjC,EADY,IAAIC,gBAAgB7nB,OAAO8nB,SAASC,QAC5BC,IAAI,WAEd,OAAZJ,EACF5nB,OAAOjZ,iBAAiB,OAAQlJ,KAAKgnC,aAErChnC,KAAK2mC,YAAYoD,GAGnB5nB,OAAOjZ,iBAAiB,UAAWlJ,KAAKimC,iBACxC9jB,OAAOjZ,iBAAiB,eAAgBlJ,KAAKwnC,eAE7CxnC,KAAKoqC,iBAAmB9gB,YAAYtpB,KAAK4nC,SAAU,Q,kCAGrD,WACEzlB,OAAOxY,oBAAoB,UAAW3J,KAAKimC,iBAC3C9jB,OAAOjZ,iBAAiB,OAAQlJ,KAAKgnC,aACrC7kB,OAAOxY,oBAAoB,eAAgB3J,KAAKwnC,eAEhD7d,cAAc3pB,KAAKoqC,oB,oBAwXrB,WAAU,IAAD,EAaHpqC,KAAKmJ,MAXPy8B,EAFK,EAELA,sBACAC,EAHK,EAGLA,oBACAC,EAJK,EAILA,mBACAC,EALK,EAKLA,gBACA8C,EANK,EAMLA,cACA3B,EAPK,EAOLA,gBACAlB,EARK,EAQLA,cACA9F,EATK,EASLA,YACAC,EAVK,EAULA,qBACAyG,EAXK,EAWLA,iBACAwC,EAZK,EAYLA,SAGF,OACE,oCACE,kBAAC,GAAD,CACElJ,YAAaA,EACbC,qBAAsBA,EACtBC,wBAAyBpgC,KAAKioC,wBAC9B5H,uBAAwBrgC,KAAKkoC,uBAC7B5H,sBAAuBtgC,KAAKmoC,sBAC5B5H,gBAAiBvgC,KAAKugC,gBACtBC,eAAgBxgC,KAAKwgC,eACrBC,6BAA8BzgC,KAAKgpC,iBACnCtI,oBAAqB1gC,KAAK+oC,aAC1BpI,iBAAkB3gC,KAAKkpC,cACvBx8B,UAAW1M,KAAKykC,WAAWyB,cAE7B,kBAAC,GAAD,CACE/8B,MAAOnJ,KAAKykC,WAAW4F,WACvBpU,iBAAkBj2B,KAAKi2B,iBACvBC,iBAAkBl2B,KAAKk2B,iBACvBC,gBAAiBn2B,KAAKm2B,kBAExB,kBAAC,GAAD,CACE3B,YAAax0B,KAAKmmC,iBAClBz5B,UAAW1M,KAAKykC,WAAWyB,cAG7B,kBAAC,GAAD,CACE9L,OAAQwL,EACRtK,OAAQjH,GACRoE,YAAaz4B,KAAK4oC,iBAClBz7B,oBAAqBnN,KAAK4H,QAAQuF,sBAEpC,kBAAC,GAAD,CACEitB,OAAQyL,EACRj/B,WAAYA,GACZC,UAAWgiC,EACXpQ,YAAaz4B,KAAK8oC,kBAClBvmB,oBAAqBviB,KAAK4H,QAAQ2a,sBAGpC,kBAAC,GAAD,CACE6X,OAAQ0L,EACRrN,YAAaz4B,KAAKipC,mBAEpB,kBAAC,GAAD,CACE7O,OAAQ2L,EACRtN,YAAaz4B,KAAKmpC,gBAEnBjC,GACC,kBAAC,GAAD,CACEjE,IAAK+C,EACL5C,eAAgBpjC,KAAKojC,eACrBC,YAAarjC,KAAK0pC,sBAClBpG,aAActjC,KAAK8pC,wBACnB5G,gBAAiBljC,KAAK6pC,gCAIzBjD,GAAoB,kBAAC,GAAD,MACrB,kBAAC,GAAD,CAAS7oC,OAAQiC,KAAK4H,UAEtB,kBAAC,GAAD,CACEqb,kBAAmBjjB,KAAK4H,QAAQqb,kBAChCC,YAAaljB,KAAK4H,QAAQsb,YAC1BC,aAAcnjB,KAAK4H,QAAQub,aAC3BC,cAAepjB,KAAK4H,QAAQwb,cAC5BC,eAAgBrjB,KAAK4H,QAAQyb,eAC7BrQ,KAAMhT,KAAK4H,QAAQoL,KACnBC,KAAMjT,KAAK4H,QAAQqL,KACnBqQ,OAAQtjB,KAAK4H,QAAQ0b,OACrBC,QAASvjB,KAAK4H,QAAQ2b,QACtBoZ,mBAAoB38B,KAAKqmC,oBAG3B,kBAAC,IAAD,CAASlhC,GAAG,UAAUmlC,eAAe,UACrC,kBAAC,GAAD,CACE3L,KAAMyK,EAASzK,KACfh/B,KAAMypC,EAASzpC,KACfy/B,QAASgK,EAAShK,QAClBH,QAASmK,EAASnK,QAClBxG,YAAaz4B,KAAKupC,oB,GA7gBK99B,cCrBb8+B,QACW,cAA7BpoB,OAAO8nB,SAASO,UAEe,UAA7BroB,OAAO8nB,SAASO,UAEhBroB,OAAO8nB,SAASO,SAASxO,MACvB,2DCjBN38B,MAAM6I,UAAUse,QAAU,WACxB,OAAOxmB,MAGTX,MAAM6I,UAAU/E,SAAW,WACzB,GAAInD,KAAKR,MAAK,SAAA0E,GAAG,MAAY,MAARA,KAAc,MAAO,IAC1C,GAAIlE,KAAKR,MAAK,SAAA0E,GAAG,MAAY,MAARA,KAAc,MAAO,IAE1C,GAAIlE,KAAKR,MAAK,SAAA0E,GAAG,OAAY,IAARA,GAAqB,IAARA,KAChC,MAAM,IAAIjB,MACR,qFAGJ,OAAOjD,KAAKmwB,QACTlU,UACA3U,QAAO,SAACkW,EAAKitB,EAAMroC,GAAZ,OAAsBob,EAAMitB,EAAI,SAAG,EAAKroC,KAAO,IAG3D/C,MAAM6I,UAAUue,UAAY,WAAsB,IAAD,OAC/C,OAAOzmB,KAAK,GAAGvE,KAAI,SAACquB,EAAIluB,GAAL,OAAW,EAAKH,KAAI,SAAAuuB,GAAE,OAAIA,EAAGpuB,UAGlDsqB,OAAOhe,UAAU/E,SAAW,WAC1B,OAAO+iB,OAAOlmB,OAGhBkmB,OAAOhe,UAAUse,QAAU,SAAuBL,GAChD,IAAKA,EACH,MAAM,IAAIljB,MACR,mGAGJ,IAAMnC,EAAS,YAAId,KAAKoI,SAAS,IAAI3M,IAAIyqB,QAEzC,OAAO7mB,MAAM8mB,GACVliB,KAAK,GACLymC,OAAO5pC,GACPqvB,MAAMrvB,EAAO0B,SAGlBmoC,OAAOziC,UAAUse,QAAU,SAAuBL,GAChD,IAAKA,EACH,MAAM,IAAIljB,MACR,mGAGJ,OAAO,YAAIjD,KAAK8uB,SAAS3I,EAAU,IAAI1qB,KAAI,SAAAmvC,GACzC,MAAa,MAATA,EAAqB,EACZ,MAATA,EAAqB,EAClBA,MAIXD,OAAOziC,UAAUwoB,YAAc,SAC7BvK,EACA0kB,GAEC,IADDC,EACA,uDADW,EAEX,IAAK3kB,EACH,MAAM,IAAIljB,MACR,8FAGJ,IAAK4nC,EACH,MAAM,IAAI5nC,MACR,8FAGJ,IAAM8nC,EAAW,SACXC,EAAQ,IAAIlP,OAAJ,cAAkB3V,EAAlB,KAA+B,KAEvC6d,GACJhkC,KAAKuoC,QAAQwC,EAAU,IAAI/O,MAAMgP,IAAU,IAC3CvvC,KAAI,SAAA2D,GAAK,OAAI6rC,SAAS7rC,EAAO,MAE/B,OAAOC,MAAMwrC,GACV5mC,KAAK6mC,GACLrvC,KAAI,SAACyvC,EAAUtvC,GACd,IAAMwD,EAAQ4kC,EAAQpoC,GACtB,OAAKwD,GAAc8rC,MCxEzBC,IAASC,OAAO,kBAAC,GAAD,MAAS/nC,SAASqlC,eAAe,SFqI3C,kBAAmB2C,WACrBA,UAAUC,cAAcC,MAAMzpC,MAAK,SAAA0pC,GACjCA,EAAaC,kB","file":"static/js/main.f5fceb1c.chunk.js","sourcesContent":["module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"SimulationWorker.cb7ae75b9bc04e913668.js\");\n};","module.exports = __webpack_public_path__ + \"static/media/bifurcation.e3ec32b9.gif\";","module.exports = __webpack_public_path__ + \"static/media/context-menu.94343183.gif\";","module.exports = __webpack_public_path__ + \"static/media/simulation.2d0f910c.gif\";","module.exports = __webpack_public_path__ + \"static/media/wire.e7e521da.gif\";","import { Point } from '@projectstorm/geometry';\n\n/**\n * Returns a position, but snapped to the grid.\n */\nexport const snap = (position, gridSize = 15) => {\n  if (position instanceof Point) {\n    return new Point(\n      Math.round(position.x / gridSize) * gridSize,\n      Math.round(position.y / gridSize) * gridSize,\n    );\n  }\n\n  return Math.round(position / gridSize) * gridSize;\n};\n\n/**\n * Checks if two points are on the same position.\n */\nexport const samePosition = (p1, p2) =>\n  p1 &&\n  p2 &&\n  Math.round(p1.x) === Math.round(p2.x) &&\n  Math.round(p1.y) === Math.round(p2.y);\n\n/**\n * Checks if all given points share the same X position.\n */\nexport const sameX = (...points) =>\n  points.map(p => Math.round(p.x)).every((p, i, arr) => p === arr[0]);\n\n/**\n * Checks if all given points share the same Y position.\n */\nexport const sameY = (...points) =>\n  points.map(p => Math.round(p.y)).every((p, i, arr) => p === arr[0]);\n\n/**\n * Checks if all given points share positions on any axis.\n */\nexport const sameAxis = (...points) =>\n  sameX(...points) || sameY(...points);\n\n/**\n * Checks if two points are nearby each other, given a tolerance.\n */\nexport const nearby = (p1, p2, tolerance) =>\n  Math.abs(p1.x - p2.x) <= tolerance &&\n  Math.abs(p1.y - p2.y) <= tolerance;\n\n/**\n * Finds the closest position to a link from a given point.\n */\nexport const closestPointToLink = (P, link) => {\n  const distance = (A, B) => Math.hypot(A.x - B.x, A.y - B.y);\n\n  const closestPointOnSegment = (Q, segment) => {\n    const { A, B } = segment;\n\n    const v = new Point(B.x - A.x, B.y - A.y);\n    const u = new Point(A.x - Q.x, A.y - Q.y);\n\n    const vu = v.x * u.x + v.y * u.y;\n    const vv = v.x ** 2 + v.y ** 2;\n\n    const t = -vu / vv;\n\n    // Closest point lies between A and B\n    if (t >= 0 && t <= 1) {\n      const closest = new Point(\n        (1 - t) * A.x + t * B.x,\n        (1 - t) * A.y + t * B.y,\n      );\n      return {\n        point: closest,\n        distance: distance(Q, closest),\n      };\n    }\n\n    // Closest point is either A or B\n    const distanceToA = distance(Q, A);\n    const distanceToB = distance(Q, B);\n\n    return distanceToA <= distanceToB\n      ? { point: A, distance: distanceToA }\n      : { point: B, distance: distanceToB };\n  };\n\n  if (!link.hasMiddlePoint()) {\n    return closestPointOnSegment(P, {\n      A: link.getFirstPosition(),\n      B: link.getLastPosition(),\n    }).point;\n  }\n\n  const firstSegment = closestPointOnSegment(P, {\n    A: link.getFirstPosition(),\n    B: link.getMiddlePosition(),\n  });\n\n  const lastSegment = closestPointOnSegment(P, {\n    A: link.getMiddlePosition(),\n    B: link.getLastPosition(),\n  });\n\n  if (firstSegment.distance <= lastSegment.distance) {\n    return firstSegment.point;\n  }\n  return lastSegment.point;\n};\n\n/**\n * Determines is a point is over a given segment.\n */\nconst isPointOverSegment = (point, segment) => {\n  const { A, B } = segment;\n\n  if (sameX(A, point, B)) {\n    const max = Math.max(A.y, B.y);\n    const min = Math.min(A.y, B.y);\n\n    return min <= point.y && point.y <= max;\n  }\n\n  if (sameY(A, point, B)) {\n    const max = Math.max(A.x, B.x);\n    const min = Math.min(A.x, B.x);\n\n    return min <= point.x && point.x <= max;\n  }\n\n  return false;\n};\n\n/**\n * Determines if a point is over a given link's first segment.\n */\nexport const isPointOverFirstLinkSegment = (point, link) =>\n  isPointOverSegment(point, {\n    A: link.getFirstPosition(),\n    B: link.getSecondPosition(),\n  });\n\n/**\n * Determines if a point is over a given link's second segment.\n */\nexport const isPointOverSecondLinkSegment = (point, link) => {\n  if (!link.hasMiddlePoint()) return false;\n\n  return isPointOverSegment(point, {\n    A: link.getSecondPosition(),\n    B: link.getLastPosition(),\n  });\n};\n\n/**\n * Determines if a point is over a given link.\n */\nexport const isPointOverLink = (point, link) =>\n  isPointOverFirstLinkSegment(point, link) ||\n  isPointOverSecondLinkSegment(point, link);\n\n/**\n * Searches for any link that the given link might be landing on.\n */\nexport const getLandingLink = (link, engine) => {\n  const point = link.getLastPoint().getPosition();\n\n  return Object.values(\n    engine\n      .getModel()\n      .getLinkLayers()[0]\n      .getLinks(),\n  ).find(target => {\n    if (target.getID() === link.getID()) return false;\n    return isPointOverLink(point, target);\n  });\n};\n\n/**\n * Generates the error message displayed to the user for incompatible\n * display widths.\n */\nexport const getIncompatibleWidthsErrorMessage = (\n  source,\n  target,\n) => `Incompatible bit widths!\n\\nSource: ${source.getBits()} bit${source.getBits() > 1 ? 's' : ''}\n\\nTarget: ${target.getBits()} bit${target.getBits() > 1 ? 's' : ''}`;\n","/* eslint-disable no-restricted-globals */\nexport const MIN_VALUE = 0;\nexport const MAX_VALUE = {\n  1: 0b1,\n  2: 0b11,\n  4: 0b1111,\n  8: 0b1111_1111,\n  16: 0b1111_1111_1111_1111,\n};\n\nexport const adjustValueToBits = (value, dataBits = 1) => {\n  if (typeof value !== 'number') return value;\n\n  const allBitsSet = 0b1111_1111_1111_1111_1111_1111_1111_1111;\n  const mask = allBitsSet >>> (32 - dataBits);\n\n  return value & mask;\n};\n\nexport const isValueEqual = (value1, value2) => {\n  return value1\n    .map((v1, index) => v1 === value2[index])\n    .every(Boolean);\n};\n\nexport const isValueValid = value =>\n  value === null ||\n  (Array.isArray(value) && value.every(v => typeof v === 'number'));\n\nexport const isInputValid = input =>\n  input.every(item => isValueValid(item.value, item.bits));\n\nexport const isValueError = value =>\n  value === 'e' ||\n  (Array.isArray(value) && value.some(v => v === 'e'));\n\nexport const isInputError = input =>\n  input.some(item => isValueError(item.value));\n\nexport const isValueFloating = value =>\n  value === 'x' ||\n  (Array.isArray(value) && value.some(v => v === 'x'));\n\nexport const isInputFloating = input =>\n  input.some(item => isValueFloating(item.value));\n\nexport const getCleanDiff = () => ({\n  components: {},\n  links: {},\n});\n\nexport const getComponent = id => {\n  if (!self.circuit) return null;\n\n  return (\n    self.circuit.components.find(component => component.id === id) ||\n    null\n  );\n};\n\n/**\n * Find all meshes that are affected by an emitted change.\n */\nexport const getAffectedMeshes = emitted =>\n  self.circuit.meshes.filter(mesh =>\n    mesh.inputs.some(\n      meshInput =>\n        emitted.from.id === meshInput.componentId &&\n        Object.keys(emitted.value).includes(meshInput.name),\n    ),\n  );\n\n/**\n * Finds all components that are connected on a given mesh's Input.\n */\nexport const getMeshInputComponents = mesh =>\n  [\n    ...new Set(mesh.inputs.map(meshInput => meshInput.componentId)),\n  ].map(componentId => getComponent(componentId));\n\n/**\n * Finds all components that are connected on a given mesh's output.\n */\nexport const getMeshOutputComponents = mesh =>\n  [\n    ...new Set(\n      mesh.outputs.map(meshOutput => meshOutput.componentId),\n    ),\n  ].map(componentId => getComponent(componentId));\n\n/**\n * Determines the mesh input value.\n */\nexport const getMeshInputValue = mesh => {\n  const allInputValues = mesh.inputs\n    .map(portInfo => {\n      const component = getComponent(portInfo.componentId);\n\n      /**\n       * From the mesh's perspective, a component's output port is an\n       * input.\n       */\n      const port = component.getOutputPort(portInfo.name);\n\n      return port ? port.value : null;\n    })\n    .filter(value => value !== null);\n\n  return [...Array(allInputValues[0].length).keys()]\n    .map(index => allInputValues.map(v => v[index]))\n    .map(arr => {\n      const firstDefinedValue = arr.find(\n        value => typeof value === 'number',\n      );\n\n      const areBitsCompatible = arr.every(\n        item => item === firstDefinedValue || item === 'x',\n      );\n\n      if (!areBitsCompatible) return 'e';\n      if (typeof firstDefinedValue === 'number')\n        return firstDefinedValue;\n      return 'x';\n    });\n};\n\n/**\n * Initialize all links and ports with the floating value.\n */\nexport const initializeDiffAndValues = () => {\n  self.circuit.components.forEach(component => {\n    component.setInputValues(\n      Object.fromEntries(\n        component.ports.input.map(port => [\n          port.id,\n          new Array(port.bits || 1).fill('x'),\n        ]),\n      ),\n    );\n    component.setOutputValues(\n      Object.fromEntries(\n        component.ports.output.map(port => [\n          port.id,\n          new Array(port.bits || 1).fill('x'),\n        ]),\n      ),\n    );\n  });\n\n  const diffLinks = self.circuit.meshes\n    .map(mesh => mesh.links)\n    .flat()\n    .reduce((obj, link) => {\n      const { bits } = self.circuit.meshes.find(mesh =>\n        mesh.links.includes(link),\n      );\n\n      return { ...obj, [link]: Array(bits).fill('x') };\n    }, {});\n\n  const diffComponents = Object.fromEntries(\n    self.circuit.components.map(component => [\n      component.id,\n      {\n        output: Object.fromEntries(\n          [\n            ...component.ports.input,\n            ...component.ports.output,\n          ].map(port => [\n            port.name,\n            new Array(port.bits || 1).fill('x'),\n          ]),\n        ),\n        properties: component.getProperties(),\n      },\n    ]),\n  );\n\n  postMessage({\n    type: 'diff',\n    payload: { links: diffLinks, components: diffComponents },\n  });\n};\n\nexport const appendComponentDiff = (component, output) => {\n  if (!self.diff.components[component.id]) {\n    self.diff.components[component.id] = {\n      output: {},\n      properties: {},\n    };\n  }\n  self.diff.components[component.id] = {\n    ...self.diff.components[component.id],\n    output: output || self.diff.components[component.id].output,\n    properties: component.getProperties(),\n  };\n};\n","import { Point } from '@projectstorm/geometry';\nimport {\n  PointModel,\n  LabelModel,\n  LinkModel as RDLinkModel,\n} from '@projectstorm/react-diagrams';\nimport { DefaultLabelModel } from '@projectstorm/react-diagrams-defaults';\n\nimport { snap, sameAxis } from '../Diagram/states/common';\nimport {\n  isValueError,\n  isValueValid,\n  MAX_VALUE,\n} from '../Simulation/utils';\n\nexport default class LinkModel extends RDLinkModel {\n  constructor(options) {\n    super({\n      type: 'link',\n      ...options,\n    });\n\n    this.bifurcations = [];\n    this.bifurcationSource = null;\n    this.bifurcationTarget = null;\n\n    this.value = null;\n    this.bits = null;\n  }\n\n  getGridSize() {\n    return this.getParent()\n      .getParent()\n      .getOptions().gridSize;\n  }\n\n  addLabel(label) {\n    if (label instanceof LabelModel) {\n      return super.addLabel(label);\n    }\n\n    const newLabel = new DefaultLabelModel();\n    newLabel.setLabel(label);\n    return super.addLabel(newLabel);\n  }\n\n  setBifurcationSource(link) {\n    this.bifurcationSource = link;\n  }\n\n  getBifurcationSource() {\n    return this.bifurcationSource;\n  }\n\n  setBifurcationTarget(link) {\n    this.bifurcationTarget = link;\n  }\n\n  getBifurcationTarget() {\n    return this.bifurcationTarget;\n  }\n\n  isBifurcation() {\n    return !!(\n      this.getBifurcationSource() || this.getBifurcationTarget()\n    );\n  }\n\n  addBifurcation(link) {\n    if (\n      this.bifurcations.find(\n        bifurcation => bifurcation.getID() === link.getID(),\n      )\n    ) {\n      return;\n    }\n\n    this.bifurcations.push(link);\n  }\n\n  removeBifurcation(link) {\n    this.bifurcations = this.bifurcations.filter(\n      b => b.getID() !== link.getID(),\n    );\n  }\n\n  getBifurcations() {\n    return this.bifurcations;\n  }\n\n  getAllBifurcations() {\n    const result = [...this.bifurcations];\n    this.bifurcations.forEach(bifurcation =>\n      result.push(bifurcation.getAllBifurcations()),\n    );\n    return result.flat(Infinity);\n  }\n\n  getSelectionEntities() {\n    return [...super.getSelectionEntities(), ...this.bifurcations];\n  }\n\n  setSelected(selected) {\n    super.setSelected(selected);\n    this.bifurcations.forEach(b => b.setSelected(selected));\n\n    if (this.getSourcePort()) {\n      this.getSourcePort().setSelected(selected);\n    }\n    if (this.getTargetPort()) {\n      this.getTargetPort().setSelected(selected);\n    }\n  }\n\n  remove() {\n    this.bifurcations.forEach(bifurcation => bifurcation.remove());\n\n    if (this.bifurcationSource) {\n      this.bifurcationSource.removeBifurcation(this);\n    }\n\n    if (this.bifurcationTarget) {\n      this.bifurcationTarget.removeBifurcation(this);\n    }\n\n    super.remove();\n  }\n\n  serialize() {\n    return {\n      ...super.serialize(),\n      bifurcations: this.bifurcations.map(b => b.getID()),\n      bifurcationSource: this.bifurcationSource\n        ? this.bifurcationSource.getID()\n        : null,\n      bifurcationTarget: this.bifurcationTarget\n        ? this.bifurcationTarget.getID()\n        : null,\n      value: this.value,\n      bits: this.bits,\n    };\n  }\n\n  deserialize(event) {\n    super.deserialize(event);\n\n    const {\n      getModel,\n      registerModel,\n      data: {\n        bifurcationSource,\n        bifurcationTarget,\n        bifurcations,\n        bits,\n      },\n    } = event;\n\n    registerModel(this);\n\n    requestAnimationFrame(() => {\n      this.bits = bits;\n\n      this.points = event.data.points.map(\n        point =>\n          new PointModel({\n            link: this,\n            position: new Point(point.x, point.y),\n          }),\n      );\n\n      bifurcations.forEach(b =>\n        getModel(b).then(bifurcation =>\n          this.addBifurcation(bifurcation),\n        ),\n      );\n\n      if (bifurcationSource) {\n        getModel(bifurcationSource).then(source =>\n          this.setBifurcationSource(source),\n        );\n      }\n\n      if (bifurcationTarget) {\n        getModel(bifurcationTarget).then(target =>\n          this.setBifurcationTarget(target),\n        );\n      }\n\n      event.engine.repaintCanvas();\n    });\n  }\n\n  addPoint(pointModel, index = 1) {\n    super.addPoint(pointModel, index);\n\n    return pointModel;\n  }\n\n  generatePoint(x, y) {\n    const point = super.generatePoint(x, y);\n    point.setPosition(\n      snap(x, this.getGridSize()),\n      snap(y, this.getGridSize()),\n    );\n\n    return point;\n  }\n\n  getMiddlePoint() {\n    if (!this.hasMiddlePoint()) return null;\n\n    return this.getPoints()[1];\n  }\n\n  getSecondPoint() {\n    return this.getPoints()[1];\n  }\n\n  getSecondLastPoint() {\n    const points = this.getPoints();\n    return points[points.length - 2];\n  }\n\n  getFirstPosition() {\n    return snap(\n      this.getFirstPoint().getPosition(),\n      this.getGridSize(),\n    );\n  }\n\n  getSecondPosition() {\n    return snap(\n      this.getSecondPoint().getPosition(),\n      this.getGridSize(),\n    );\n  }\n\n  getMiddlePosition() {\n    if (!this.hasMiddlePoint()) return null;\n\n    return snap(\n      this.getMiddlePoint().getPosition(),\n      this.getGridSize(),\n    );\n  }\n\n  getSecondLastPosition() {\n    return snap(\n      this.getSecondLastPoint().getPosition(),\n      this.getGridSize(),\n    );\n  }\n\n  getLastPosition() {\n    return snap(\n      this.getLastPoint().getPosition(),\n      this.getGridSize(),\n    );\n  }\n\n  hasMiddlePoint() {\n    return this.getPoints().length === 3;\n  }\n\n  isStraight() {\n    if (!this.hasMiddlePoint()) return true;\n\n    const first = this.getFirstPosition();\n    const middle = this.getMiddlePosition();\n    const last = this.getLastPosition();\n\n    if (sameAxis(first, middle, last)) return true;\n\n    return false;\n  }\n\n  getBits() {\n    return this.bits;\n  }\n\n  setBits(bits) {\n    if (![1, 2, 4, 8, 16].includes(bits))\n      throw new Error(\n        '[logossim] Number of bits should be one of: 1, 2, 4, 8 or 16',\n      );\n\n    this.bits = bits;\n  }\n\n  getValue() {\n    return this.value;\n  }\n\n  setValue(value) {\n    this.value = value;\n  }\n\n  getColor() {\n    if (this.isSelected()) return 'var(--link-selected)';\n\n    if (!isValueValid(this.value, this.bits)) {\n      if (isValueError(this.value)) return 'var(--value-error)';\n      return 'var(--value-floating)';\n    }\n    if (this.value === null)\n      return `var(--link-${this.bits || 1}-bit-color)`;\n\n    return `var(--value-${Math.round(\n      (this.value.asNumber() / MAX_VALUE[this.bits]) * 10,\n    )})`;\n  }\n\n  getLineWidth() {\n    return `var(--link-${this.bits || 1}-bit-width)`;\n  }\n\n  getPointRadius() {\n    return getComputedStyle(document.body).getPropertyValue(\n      `--link-${this.bits || 1}-bit-join-radius`,\n    );\n  }\n}\n","import { PortModel as RDPortModel } from '@projectstorm/react-diagrams';\n\nimport LinkModel from '../Link/LinkModel';\n\nconst validateDefaultValue = (value, type, portName) => {\n  if (value === 0) return;\n  if (value === 1) return;\n  if (value === 'x') return;\n  if (value === 'e') return;\n\n  throw new Error(\n    `[logossim] Invalid default ${type} value provided for port \\`${portName}\\`. Should be either 0, 1, 'x' or 'e'.`,\n  );\n};\n\nexport default class PortModel extends RDPortModel {\n  constructor(options = {}) {\n    super({\n      type: 'Port',\n      maximumLinks: 1,\n      ...options,\n    });\n\n    this.value = null;\n    this.input = null;\n    this.bits = null;\n    this.defaultFloatingValue = null;\n    this.defaultErrorValue = null;\n  }\n\n  serialize() {\n    return {\n      ...super.serialize(),\n      input: this.input,\n      value: this.value,\n      bits: this.bits,\n      defaultFloatingValue: this.defaultFloatingValue,\n      defaultErrorValue: this.defaultErrorValue,\n    };\n  }\n\n  deserialize(event, engine) {\n    super.deserialize(event, engine);\n    this.value = event.data.value;\n    this.input = event.data.input;\n    this.bits = event.data.bits;\n    this.defaultFloatingValue = event.data.defaultFloatingValue;\n    this.defaultErrorValue = event.data.defaultErrorValue;\n  }\n\n  setAsInput() {\n    this.input = true;\n  }\n\n  setAsOutput() {\n    this.input = false;\n  }\n\n  isInput() {\n    return this.input === true;\n  }\n\n  isOutput() {\n    return this.input === false;\n  }\n\n  getBits() {\n    return this.bits;\n  }\n\n  setBits(bits) {\n    if (![1, 2, 4, 8, 16].includes(bits))\n      throw new Error(\n        '[logossim] Number of bits should be one of: 1, 2, 4, 8 or 16',\n      );\n\n    this.bits = bits;\n  }\n\n  setDefaultFloatingValue(defaultFloatingValue) {\n    validateDefaultValue(\n      defaultFloatingValue,\n      'floating',\n      this.getName(),\n    );\n\n    this.defaultFloatingValue = defaultFloatingValue;\n  }\n\n  getDefaultFloatingValue() {\n    return this.defaultFloatingValue;\n  }\n\n  setDefaultErrorValue(defaultErrorValue) {\n    validateDefaultValue(defaultErrorValue, 'error', this.getName());\n\n    this.defaultErrorValue = defaultErrorValue;\n  }\n\n  getDefaultErrorValue() {\n    return this.defaultErrorValue;\n  }\n\n  getValue() {\n    if (this.value === null) return Array(this.bits).fill(0);\n\n    return this.value.map(bit => {\n      if (bit === 'x') return this.getDefaultFloatingValue();\n      if (bit === 'e') return this.getDefaultErrorValue();\n      return bit;\n    });\n  }\n\n  setValue(value) {\n    this.value = value;\n  }\n\n  isNewLinkAllowed() {\n    return (\n      Object.keys(this.getLinks()).length < this.getMaximumLinks()\n    );\n  }\n\n  canLinkToPort(port) {\n    return port.isNewLinkAllowed() && this.getID() !== port.getID();\n  }\n\n  createLinkModel() {\n    if (this.isNewLinkAllowed()) {\n      const link = new LinkModel();\n      link.setBits(this.bits);\n      return link;\n    }\n    return null;\n  }\n\n  getMainLink() {\n    const links = Object.values(this.getLinks());\n    return links.length > 0 ? links[0] : null;\n  }\n\n  getColor() {\n    const link = this.getMainLink();\n    if (link) return link.getColor();\n\n    return 'var(--port-unconnected)';\n  }\n}\n","export default class AudioEngine {\n  constructor() {\n    this.context = new AudioContext();\n    this.destination = this.context.destination;\n    this.audios = {};\n  }\n\n  create({ id, frequency = 1000, waveform = 'sine' }) {\n    const gainNode = this.context.createGain();\n    gainNode.gain.value = 0.5;\n\n    const oscillator = this.context.createOscillator();\n    oscillator.type = waveform;\n    oscillator.frequency.value = frequency;\n    oscillator.connect(gainNode);\n    oscillator.start();\n\n    this.audios[id] = { gainNode, oscillator };\n  }\n\n  play({ id }) {\n    try {\n      this.getGainNode(id).connect(this.destination);\n    } catch (e) {\n      // Suppress\n    }\n  }\n\n  pause({ id }) {\n    try {\n      this.getGainNode(id).disconnect(this.destination);\n    } catch (e) {\n      // Suppress\n    }\n  }\n\n  setFrequency({ id, frequency }) {\n    this.getOscillator(id).frequency.value = frequency;\n  }\n\n  setWaveform({ id, waveform }) {\n    this.getOscillator(id).type = waveform;\n  }\n\n  handlePayload(payload) {\n    switch (payload.command) {\n      case 'create':\n        this.create(payload);\n        break;\n      case 'play':\n        this.play(payload);\n        break;\n      case 'pause':\n        this.pause(payload);\n        break;\n      case 'setFrequency':\n        this.setFrequency(payload);\n        break;\n      case 'setWaveform':\n        this.setWaveform(payload);\n        break;\n      default:\n        break;\n    }\n  }\n\n  getOscillator(id) {\n    return this.getAudio(id).oscillator;\n  }\n\n  getGainNode(id) {\n    return this.getAudio(id).gainNode;\n  }\n\n  getAudio(id) {\n    const audio = this.audios[id];\n\n    if (!audio)\n      throw new Error(\n        `[logossim] Audio with id ${id} was not found.`,\n      );\n\n    return audio;\n  }\n\n  cleanUp() {\n    Object.values(this.audios).forEach(audio =>\n      audio.oscillator.stop(),\n    );\n    this.audios = [];\n  }\n}\n","/**\n * In order to execute the simulation workload on a Web Worker, we\n * need to serialize some component properties and methods to send\n * them to the worker.\n */\n\n/* ---------------------------------------------------------------- */\n\n/**\n * Receives a component instance and returns the name of all custom\n * properties.\n */\nconst getComponentPropertyNames = instance =>\n  Object.keys(instance).filter(\n    key =>\n      ![\n        'listeners',\n        'options',\n        'position',\n        'ports',\n        'width',\n        'height',\n        'configurations',\n        'parent',\n      ].includes(key),\n  );\n\n/**\n * Receives a component class and returns the name of all custom\n * methods.\n */\nconst getModelMethodNames = Class =>\n  Object.getOwnPropertyNames(Class.prototype).filter(\n    methodName => !['constructor'].includes(methodName),\n  );\n\nconst serializeModels = components =>\n  components.map(component => {\n    const { type, Model } = component;\n\n    return {\n      type,\n      methods: getModelMethodNames(Model).reduce(\n        (obj, name) => ({\n          ...obj,\n          [name]: Model.prototype[name].toString(),\n        }),\n        {},\n      ),\n    };\n  });\n\nconst serializePorts = ports =>\n  Object.values(ports).map(port => ({\n    id: port.getID(),\n    name: port.getName(),\n    input: port.isInput(),\n    bits: port.getBits(),\n    defaultFloatingValue: port.getDefaultFloatingValue(),\n    defaultErrorValue: port.getDefaultErrorValue(),\n  }));\n\n/**\n * Prepares a list of component instances to transfer, including\n * configuration and instance properties.\n */\nconst serializeComponents = components =>\n  components.map(component => ({\n    id: component.getID(),\n    type: component.getType(),\n    configurations: component.configurations,\n    ports: serializePorts(component.ports),\n    properties: getComponentPropertyNames(component).reduce(\n      (obj, key) => ({ ...obj, [key]: component[key] }),\n      {},\n    ),\n  }));\n\nconst getPortInfo = port =>\n  port\n    ? {\n        componentId: port.getParent().getID(),\n        name: port.getName(),\n        input: port.isInput(),\n      }\n    : null;\n\nconst getLinkId = link => (link ? link.getID() : null);\n\nconst serializeLinks = links =>\n  links.map(link => ({\n    id: link.getID(),\n    source: getPortInfo(link.getSourcePort()),\n    target: getPortInfo(link.getTargetPort()),\n    bifurcations: link\n      .getBifurcations()\n      .map(bifurcation => bifurcation.getID()),\n    bifurcation: {\n      source: getLinkId(link.getBifurcationSource()),\n      target: getLinkId(link.getBifurcationTarget()),\n    },\n    isBifurcation: link.isBifurcation(),\n    bits: link.getBits(),\n  }));\n\n/**\n * Prepares the whole diagram to be transferred.\n */\nconst serialize = (diagram, models) => ({\n  models: serializeModels(models),\n  links: serializeLinks(\n    Object.values(diagram.getActiveLinkLayer().getModels()),\n  ),\n  components: serializeComponents(\n    Object.values(diagram.getActiveNodeLayer().getModels()),\n  ),\n});\n\nexport default serialize;\n","import AudioEngine from './AudioEngine';\nimport serialize from './serialize';\nimport SimulationWorker from './simulation.worker';\nimport { getCleanDiff } from './utils';\n\nconst worker = new SimulationWorker();\n\n/**\n * SimulationEngine encapsulates SimulationWorker to act as an\n * interface to the application. It handles messaging with the worker,\n * keeping track of the `diff` being generated so the application can\n * use it to update itself.\n */\nexport default class SimulationEngine {\n  constructor(components) {\n    this.components = components;\n\n    this.worker = worker;\n    this.worker.addEventListener('message', this.onSimulationMessage);\n\n    this.audioEngine = new AudioEngine();\n\n    this.state = 'stopped';\n    this.clearDiff();\n  }\n\n  onSimulationMessage = ({ data: { type, payload } }) => {\n    if (type === 'diff') {\n      this.appendDiff(payload);\n    }\n\n    if (type === 'audio') {\n      this.audioEngine.handlePayload(payload);\n    }\n\n    if (type === 'clear') {\n      this.audioEngine.cleanUp();\n    }\n  };\n\n  start(diagram) {\n    this.worker.postMessage({\n      command: 'start',\n      diagram:\n        this.state === 'stopped'\n          ? serialize(diagram, this.components)\n          : undefined,\n    });\n    this.state = 'started';\n  }\n\n  pause() {\n    this.worker.postMessage({ command: 'pause' });\n    this.state = 'paused';\n  }\n\n  async stop() {\n    return new Promise(resolve => {\n      const waitForEnd = ({ data: { type } }) => {\n        if (type === 'clear') {\n          this.worker.removeEventListener('message', waitForEnd);\n          this.state = 'stopped';\n          resolve();\n        }\n      };\n      this.worker.addEventListener('message', waitForEnd);\n\n      this.worker.postMessage({ command: 'stop' });\n    });\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  isRunning() {\n    return this.state === 'started';\n  }\n\n  isPaused() {\n    return this.state === 'paused';\n  }\n\n  isStopped() {\n    return this.state === 'stopped';\n  }\n\n  getDiff() {\n    return this.diff;\n  }\n\n  clearDiff() {\n    this.diff = getCleanDiff();\n  }\n\n  appendDiff(diff) {\n    this.diff = {\n      components: { ...this.diff.components, ...diff.components },\n      links: { ...this.diff.links, ...diff.links },\n    };\n  }\n}\n\n/**\n * Emit is exported as a separate function so it can be used on\n * `BaseModel`.\n */\nexport const emit = (from, value) =>\n  worker.postMessage({\n    command: 'emit',\n    emitted: { from, value },\n  });\n","import { Point } from '@projectstorm/geometry';\nimport { NodeModel } from '@projectstorm/react-diagrams';\n\nimport PortModel from './Port/PortModel';\nimport { emit } from './Simulation/SimulationEngine';\n\nconst getPort = nameOrInstance => {\n  if (nameOrInstance instanceof PortModel) return nameOrInstance;\n  return new PortModel({ name: nameOrInstance });\n};\n\nexport default class BaseModel extends NodeModel {\n  constructor(configurations = {}, type = 'generic') {\n    super({ type });\n\n    this.initialize(configurations);\n\n    this.configurations = configurations;\n  }\n\n  serialize() {\n    return {\n      ...super.serialize(),\n      configurations: this.configurations,\n    };\n  }\n\n  addInputPort(nameOrInstance, { bits, floating, error } = {}) {\n    const port = getPort(nameOrInstance);\n    port.setAsInput();\n    if (typeof nameOrInstance === 'string') {\n      port.setBits(bits || 1);\n      port.setDefaultFloatingValue(floating ?? 'x');\n      port.setDefaultErrorValue(error ?? 'e');\n    }\n    super.addPort(port);\n  }\n\n  addOutputPort(nameOrInstance, { bits } = {}) {\n    const port = getPort(nameOrInstance);\n    port.setAsOutput();\n    if (typeof nameOrInstance === 'string') {\n      port.setBits(bits || 1);\n      port.setDefaultFloatingValue('x');\n      port.setDefaultErrorValue('e');\n    }\n    super.addPort(port);\n  }\n\n  addPort(nameOrInstance, configuration) {\n    const port = getPort(nameOrInstance);\n\n    if (port.isInput()) {\n      this.addInputPort(port, configuration);\n      return;\n    }\n\n    if (port.isOutput()) {\n      this.addOutputPort(port, configuration);\n      return;\n    }\n\n    throw new Error(\n      '[logossim] Use either `addInputPort` or `addOutputPort`',\n    );\n  }\n\n  removePort(name) {\n    const port = getPort(name);\n    super.removePort(port);\n  }\n\n  getInputPorts() {\n    return Object.fromEntries(\n      Object.entries(this.getPorts()).filter(([, port]) =>\n        port.isInput(),\n      ),\n    );\n  }\n\n  getOutputPorts() {\n    return Object.fromEntries(\n      Object.entries(this.getPorts()).filter(\n        ([, port]) => !port.isInput(),\n      ),\n    );\n  }\n\n  getAllLinks() {\n    return Object.values(this.getPorts())\n      .map(port => port.getMainLink())\n      .filter(link => !!link)\n      .reduce(\n        (arr, link) => [...arr, link, ...link.getAllBifurcations()],\n        [],\n      );\n  }\n\n  clone(...args) {\n    const clone = super.clone(...args);\n    clone.setPosition(new Point(this.getX() + 15, this.getY() + 15));\n    return clone;\n  }\n\n  initialize() {}\n\n  onSimulationStart() {}\n\n  onSimulationPause() {}\n\n  onSimulationStop() {}\n\n  step() {}\n\n  emit(value) {\n    emit(this.getID(), value);\n  }\n\n  createAudio() {}\n}\n","import React from 'react';\n\nconst ComponentContext = React.createContext();\n\nexport default ComponentContext;\n","import React from 'react';\nimport { MenuProvider } from 'react-contexify';\n\nimport { AbstractReactFactory } from '@projectstorm/react-canvas-core';\n\nimport ComponentContext from './ComponentContext';\n\nexport default class Component extends AbstractReactFactory {\n  constructor({\n    type,\n    name,\n    description,\n    group,\n    configurations = [],\n    model,\n    widget,\n    icon,\n  }) {\n    super(type);\n    this.name = name;\n    this.description = description;\n    this.group = group;\n    this.configurations = configurations;\n    this.Model = model;\n    this.Widget = widget;\n    this.Icon = icon;\n  }\n\n  generateReactWidget(event) {\n    const { Widget } = this;\n    const { model } = event;\n\n    return (\n      <MenuProvider id=\"component\" storeRef={false} data={model}>\n        <ComponentContext.Provider value={model}>\n          <Widget model={model} />\n        </ComponentContext.Provider>\n      </MenuProvider>\n    );\n  }\n\n  generateModel(event) {\n    const { Model } = this;\n    const { configurations, type } = event.initialConfig;\n\n    return new Model(configurations, type);\n  }\n}\n","import React from 'react';\n\nconst DiagramContext = React.createContext();\n\nexport default DiagramContext;\n","import styled from 'styled-components';\n\nconst DroppableLayer = styled.div.attrs(({ disabled, ...props }) => ({\n  ...props,\n  onDragOver: event => event.preventDefault(),\n  onDrop: event => {\n    if (disabled) return;\n\n    const component = JSON.parse(\n      event.dataTransfer.getData('component'),\n    );\n\n    props.handleComponentDrop(event, component);\n  },\n}))`\n  width: 100vw;\n  height: 100vh;\n`;\n\nexport default DroppableLayer;\n","import React from 'react';\nimport { MenuProvider } from 'react-contexify';\n\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\n\nimport styled from 'styled-components';\n\nimport DiagramContext from './DiagramContext';\nimport DroppableLayer from './DroppableLayer';\n\nconst FullscreenCanvas = styled(CanvasWidget)`\n  height: 100%;\n  width: 100%;\n`;\n\nconst Diagram = ({ engine }) => (\n  <MenuProvider id=\"diagram\" storeRef={false} data={{ test: 1 }}>\n    <DroppableLayer\n      handleComponentDrop={(...args) =>\n        engine.handleComponentDrop(...args)\n      }\n      disabled={engine.isLocked()}\n    >\n      <DiagramContext.Provider value={engine}>\n        <FullscreenCanvas engine={engine.getEngine()} />\n      </DiagramContext.Provider>\n    </DroppableLayer>\n  </MenuProvider>\n);\n\nexport default Diagram;\n","import React, { Component } from 'react';\n\nimport { samePosition } from '../Diagram/states/common';\n\nexport default class LinkWidget extends Component {\n  constructor(props) {\n    super(props);\n\n    this.refPaths = [];\n  }\n\n  componentDidUpdate() {\n    this.updateRenderedPaths();\n  }\n\n  componentDidMount() {\n    this.updateRenderedPaths();\n  }\n\n  componentWillUnmount() {\n    this.clearRenderedPaths();\n  }\n\n  updateRenderedPaths() {\n    const { link } = this.props;\n\n    link.setRenderedPaths(\n      this.refPaths.map(ref => {\n        return ref.current;\n      }),\n    );\n  }\n\n  clearRenderedPaths() {\n    const { link } = this.props;\n\n    link.setRenderedPaths([]);\n  }\n\n  generatePathPoints() {\n    const { link } = this.props;\n\n    const points = link.getPoints();\n\n    return points\n      .map((point, i) => ({ from: points[i], to: points[i + 1] }))\n      .filter(tuple => tuple.to);\n  }\n\n  generateLinePath({ from, to }) {\n    return `M${from.getX()},${from.getY()} L${to.getX()},${to.getY()}`;\n  }\n\n  renderSegment(path, key) {\n    const { link, factory, options = {} } = this.props;\n\n    const { selected } = options;\n\n    const ref = React.createRef();\n    this.refPaths.push(ref);\n\n    return React.cloneElement(\n      factory.generateLinkSegment(link, selected, path),\n      { key, ref },\n    );\n  }\n\n  renderPoint(position, loose = false) {\n    const { link } = this.props;\n    const color = link.getColor();\n\n    return (\n      <circle\n        r={loose ? 6 : link.getPointRadius()}\n        fill={loose ? 'var(--background)' : color}\n        stroke={loose ? color : 'none'}\n        strokeWidth={3}\n        cx={position.x}\n        cy={position.y}\n      />\n    );\n  }\n\n  renderBifurcationSourcePoint() {\n    const { link } = this.props;\n\n    const bifurcationSource = link.getBifurcationSource();\n    if (!bifurcationSource) return null;\n\n    const bifurcationOrigin = link.getFirstPoint().getPosition();\n    const lastSourcePoint = bifurcationSource\n      .getLastPoint()\n      .getPosition();\n\n    if (samePosition(bifurcationOrigin, lastSourcePoint)) {\n      return null;\n    }\n\n    return this.renderPoint(bifurcationOrigin);\n  }\n\n  renderBifurcationTargetPoint() {\n    const { link } = this.props;\n\n    const bifurcationTarget = link.getBifurcationTarget();\n    if (!bifurcationTarget) return null;\n\n    const bifurcationTargetPosition = link\n      .getLastPoint()\n      .getPosition();\n    const lastSourcePoint = bifurcationTarget\n      .getLastPoint()\n      .getPosition();\n\n    if (samePosition(bifurcationTargetPosition, lastSourcePoint)) {\n      return null;\n    }\n\n    return this.renderPoint(bifurcationTargetPosition);\n  }\n\n  renderLooseLinkPoint() {\n    const { link } = this.props;\n\n    if (link.getTargetPort()) return null;\n    if (link.getBifurcationTarget()) return null;\n\n    const bifurcations = link.getBifurcations();\n    const lastSourcePoint = link.getLastPoint().getPosition();\n\n    const isContinued = bifurcations.some(\n      bifurcation =>\n        samePosition(\n          bifurcation.getFirstPosition(),\n          lastSourcePoint,\n        ) ||\n        samePosition(bifurcation.getLastPosition(), lastSourcePoint),\n    );\n\n    if (isContinued) return null;\n\n    return this.renderPoint(lastSourcePoint, true);\n  }\n\n  render() {\n    const { link } = this.props;\n\n    this.refPaths = [];\n\n    return (\n      <>\n        <g data-default-link-test={link.getOptions().testName}>\n          {this.generatePathPoints().map((tuple, index) =>\n            this.renderSegment(this.generateLinePath(tuple), index),\n          )}\n        </g>\n        {this.renderBifurcationSourcePoint()}\n        {this.renderBifurcationTargetPoint()}\n        {this.renderLooseLinkPoint()}\n      </>\n    );\n  }\n}\n","import React from 'react';\n\nimport { DefaultLinkFactory } from '@projectstorm/react-diagrams-defaults';\n\nimport styled from 'styled-components';\n\nimport LinkModel from './LinkModel';\nimport LinkWidget from './LinkWidget';\n\nconst Path = styled.path`\n  pointer-events: all;\n  stroke-linecap: round;\n`;\n\nexport default class LinkFactory extends DefaultLinkFactory {\n  constructor() {\n    super('link');\n  }\n\n  generateModel() {\n    return new LinkModel();\n  }\n\n  generateReactWidget(event) {\n    return (\n      <LinkWidget\n        diagramEngine={this.engine}\n        link={event.model}\n        factory={this}\n      />\n    );\n  }\n\n  generateLinkSegment(model, selected, path) {\n    return (\n      <>\n        <Path\n          stroke={model.getColor()}\n          strokeWidth={model.getLineWidth()}\n          d={path}\n        />\n        {/* This path is to facilitate link selection */}\n        <Path stroke=\"none\" strokeWidth={20} d={path} />\n      </>\n    );\n  }\n}\n","import { AbstractModelFactory } from '@projectstorm/react-canvas-core';\n\nimport PortModel from './PortModel';\n\nexport default class PortFactory extends AbstractModelFactory {\n  constructor() {\n    super('Port');\n  }\n\n  generateModel() {\n    return new PortModel();\n  }\n}\n","import { Action, InputType } from '@projectstorm/react-canvas-core';\n\nimport BaseModel from '../../BaseModel';\n\n/**\n * Handles clipboard actions.\n */\nexport default class ClipboardAction extends Action {\n  constructor(areShortcutsAllowed) {\n    super({\n      type: InputType.KEY_DOWN,\n      fire: ({ event }) => {\n        if (!areShortcutsAllowed()) return;\n        if (this.engine.getModel().isLocked()) return;\n\n        if (this.matchesInput(event)) {\n          event.preventDefault();\n\n          const { code } = event;\n          if (code === 'KeyX') this.handleCut();\n          if (code === 'KeyC') this.handleCopy();\n          if (code === 'KeyV') this.handlePaste();\n        }\n      },\n    });\n  }\n\n  matchesInput = ({ ctrlKey, code }) =>\n    ctrlKey &&\n    (code === 'KeyX' || code === 'KeyC' || code === 'KeyV');\n\n  getSelectedComponents = () =>\n    this.engine\n      .getModel()\n      .getSelectedEntities()\n      .filter(entity => entity instanceof BaseModel)\n      .filter(entity => !entity.isLocked());\n\n  /** Cut */\n  handleCut = () => {\n    const selected = this.getSelectedComponents();\n    const copies = selected.map(entity => entity.clone().serialize());\n\n    this.engine.fireEvent(\n      {\n        nodes: selected,\n        links: selected.reduce(\n          (arr, node) => [...arr, ...node.getAllLinks()],\n          [],\n        ),\n      },\n      'entitiesRemoved',\n    );\n    selected.forEach(node => node.remove());\n    this.engine.repaintCanvas();\n\n    localStorage.setItem('clipboard', JSON.stringify(copies));\n  };\n\n  /** Copy */\n  handleCopy = () => {\n    const copies = this.getSelectedComponents().map(entity =>\n      entity.clone().serialize(),\n    );\n\n    localStorage.setItem('clipboard', JSON.stringify(copies));\n  };\n\n  /** Paste */\n  handlePaste = () => {\n    const model = this.engine.getModel();\n\n    const clipboard = JSON.parse(localStorage.getItem('clipboard'));\n    if (!clipboard) return;\n\n    model.clearSelection();\n\n    const models = clipboard.map(serialized => {\n      const modelInstance = model\n        .getActiveNodeLayer()\n        .getChildModelFactoryBank(this.engine)\n        .getFactory(serialized.type)\n        .generateModel({ initialConfig: serialized });\n\n      modelInstance.deserialize({\n        engine: this.engine,\n        data: serialized,\n        registerModel: () => {},\n      });\n\n      return modelInstance;\n    });\n\n    models.forEach(modelInstance => {\n      model.addNode(modelInstance);\n      modelInstance.setSelected(true);\n    });\n\n    localStorage.setItem(\n      'clipboard',\n      JSON.stringify(\n        models.map(modelInstance =>\n          modelInstance.clone().serialize(),\n        ),\n      ),\n    );\n\n    this.engine.fireEvent({ nodes: models }, 'componentsAdded');\n\n    this.engine.repaintCanvas();\n  };\n}\n","import { Action, InputType } from '@projectstorm/react-canvas-core';\n\nimport BaseModel from '../../BaseModel';\nimport LinkModel from '../../Link/LinkModel';\n\n/**\n * Handles delete actions.\n */\nexport default class DeleteAction extends Action {\n  constructor(areShortcutsAllowed) {\n    super({\n      type: InputType.KEY_DOWN,\n      fire: ({ event }) => {\n        if (!areShortcutsAllowed()) return;\n        if (this.engine.getModel().isLocked()) return;\n\n        if (this.matchesInput(event)) {\n          event.preventDefault();\n          this.handleAction();\n        }\n      },\n    });\n  }\n\n  matchesInput = event => event.code === 'Delete';\n\n  handleAction = () => {\n    const entities = this.engine\n      .getModel()\n      .getSelectedEntities()\n      .filter(model => !model.isLocked());\n\n    this.fireEvent(entities);\n\n    entities.forEach(model => model.remove());\n\n    this.engine.repaintCanvas();\n  };\n\n  /**\n   * Event is fired to be on the command manager, so the user can undo\n   * and redo it.\n   */\n  fireEvent = entities => {\n    // All selected nodes\n    const nodes = entities.filter(\n      model => model instanceof BaseModel,\n    );\n\n    // All selected links\n    const links = entities.filter(\n      model => model instanceof LinkModel,\n    );\n\n    // All links from selected nodes\n    const nodesLinks = nodes.reduce(\n      (arr, node) => [...arr, ...node.getAllLinks()],\n      [],\n    );\n\n    this.engine.fireEvent(\n      { nodes, links: [...nodesLinks, ...links] },\n      'entitiesRemoved',\n    );\n  };\n}\n","import { Action, InputType } from '@projectstorm/react-canvas-core';\n\nimport BaseModel from '../../BaseModel';\n\n/**\n * Handle duplication (clone) actions.\n */\nexport default class DuplicateAction extends Action {\n  constructor(areShortcutsAllowed) {\n    super({\n      type: InputType.KEY_DOWN,\n      fire: ({ event }) => {\n        if (!areShortcutsAllowed()) return;\n        if (this.engine.getModel().isLocked()) return;\n\n        if (this.matchesInput(event)) {\n          event.preventDefault();\n          this.handleAction();\n        }\n      },\n    });\n  }\n\n  matchesInput = event => event.ctrlKey && event.code === 'KeyD';\n\n  handleAction = () => {\n    const model = this.engine.getModel();\n\n    const clones = model\n      .getSelectedEntities()\n      .filter(entity => entity instanceof BaseModel)\n      .filter(entity => !entity.isLocked())\n      .map(entity => entity.clone());\n\n    model.clearSelection();\n\n    clones.forEach(clone => {\n      model.addNode(clone);\n      clone.setSelected(true);\n    });\n\n    this.engine.fireEvent({ nodes: clones }, 'componentsAdded');\n\n    this.engine.repaintCanvas();\n  };\n}\n","import { Action, InputType } from '@projectstorm/react-canvas-core';\n\n/**\n * Handles undo/redo actions.\n */\nexport default class UndoRedoAction extends Action {\n  constructor(areShortcutsAllowed) {\n    super({\n      type: InputType.KEY_DOWN,\n      fire: ({ event }) => {\n        if (!areShortcutsAllowed()) return;\n        if (this.engine.getModel().isLocked()) return;\n\n        if (this.matchesInput(event)) {\n          event.preventDefault();\n\n          const { ctrlKey, shiftKey, code } = event;\n          if (ctrlKey && !shiftKey && code === 'KeyZ')\n            this.handleUndo();\n          else this.handleRedo();\n        }\n      },\n    });\n  }\n\n  matchesInput = ({ ctrlKey, shiftKey, code }) =>\n    (ctrlKey && (code === 'KeyZ' || code === 'KeyY')) ||\n    (ctrlKey && shiftKey && code === 'KeyZ');\n\n  /** Undo */\n  handleUndo = () => {\n    this.engine.commands.undo();\n    this.engine.repaintCanvas();\n  };\n\n  /** Redo */\n  handleRedo = () => {\n    this.engine.commands.redo();\n    this.engine.repaintCanvas();\n  };\n}\n","import { Action, InputType } from '@projectstorm/react-canvas-core';\n\nconst ZOOM_LEVELS = [15, 25, 50, 75, 100, 150, 200, 300];\n\n/**\n * Handles zoom in/out actions.\n */\nexport default class ZoomAction extends Action {\n  constructor() {\n    super({\n      type: InputType.MOUSE_WHEEL,\n      fire: ({ event }) => {\n        event.stopPropagation();\n\n        const model = this.engine.getModel();\n\n        // We can block layer rendering because we are only targeting the transforms\n        model.getLayers().forEach(layer => layer.allowRepaint(false));\n\n        const zoomDirection =\n          Math.sign(event.deltaY) > 0 ? 'in' : 'out';\n\n        const currentZoomLevelIndex = ZOOM_LEVELS.indexOf(\n          ZOOM_LEVELS.includes(model.getZoomLevel())\n            ? model.getZoomLevel()\n            : 100,\n        );\n\n        let nextZoomLevelIndex;\n        if (zoomDirection === 'in') {\n          nextZoomLevelIndex = Math.min(\n            currentZoomLevelIndex + 1,\n            ZOOM_LEVELS.length - 1,\n          );\n        } else {\n          nextZoomLevelIndex = Math.max(currentZoomLevelIndex - 1, 0);\n        }\n\n        const oldZoomFactor = model.getZoomLevel() / 100;\n        model.setZoomLevel(ZOOM_LEVELS[nextZoomLevelIndex]);\n        const zoomFactor = model.getZoomLevel() / 100;\n\n        const boundingRect = this.engine\n          .getCanvas()\n          .getBoundingClientRect();\n        const clientWidth = boundingRect.width;\n        const clientHeight = boundingRect.height;\n\n        // Compute difference between rect before and after scroll\n        const widthDiff =\n          clientWidth * zoomFactor - clientWidth * oldZoomFactor;\n        const heightDiff =\n          clientHeight * zoomFactor - clientHeight * oldZoomFactor;\n\n        // Compute mouse coords relative to canvas\n        const clientX = event.clientX - boundingRect.left;\n        const clientY = event.clientY - boundingRect.top;\n\n        // Compute width and height increment factor\n        const xFactor =\n          (clientX - model.getOffsetX()) /\n          oldZoomFactor /\n          clientWidth;\n        const yFactor =\n          (clientY - model.getOffsetY()) /\n          oldZoomFactor /\n          clientHeight;\n\n        model.setOffset(\n          model.getOffsetX() - widthDiff * xFactor,\n          model.getOffsetY() - heightDiff * yFactor,\n        );\n        this.engine.repaintCanvas();\n\n        // Re-enable rendering\n        model.getLayers().forEach(layer => layer.allowRepaint(true));\n      },\n    });\n  }\n}\n","import { PointModel } from '@projectstorm/react-diagrams';\n\nconst commandHandlers = ({ engine, editComponentConfiguration }) => {\n  const adjustLink = (link, nodes = []) => {\n    const nodeList = [\n      ...Object.values(\n        engine\n          .getModel()\n          .getActiveNodeLayer()\n          .getModels(),\n      ),\n      ...nodes,\n    ];\n\n    /**\n     * Port instance could have changed in consequence of component\n     * configuration edit.\n     */\n    let sourcePort = link.getSourcePort();\n    if (sourcePort) {\n      const node = nodeList.find(\n        n =>\n          n.getID() ===\n          link\n            .getSourcePort()\n            .getParent()\n            .getID(),\n      );\n\n      sourcePort = node.getPort(sourcePort.getName());\n\n      link.setSourcePort(sourcePort);\n      sourcePort.addLink(link);\n    }\n\n    let targetPort = link.getTargetPort();\n    if (targetPort) {\n      const node = nodeList.find(\n        n =>\n          n.getID() ===\n          link\n            .getTargetPort()\n            .getParent()\n            .getID(),\n      );\n\n      targetPort = node.getPort(targetPort.getName());\n\n      link.setTargetPort(targetPort);\n      targetPort.addLink(link);\n    }\n\n    if (link.getBifurcationSource())\n      link.getBifurcationSource().addBifurcation(link);\n\n    if (link.getBifurcationTarget())\n      link.getBifurcationTarget().addBifurcation(link);\n\n    return link;\n  };\n\n  return {\n    /**\n     * Componend added handler. Occurs when a component is added or\n     * pasted.\n     */\n    componentsAdded: ({ nodes }) => {\n      engine.commands.add({\n        execute: () => {\n          nodes.forEach(node => engine.getModel().addNode(node));\n        },\n        undo: () => {\n          nodes.forEach(node => node.remove());\n        },\n      });\n    },\n\n    /**\n     * Component configuration edit handler.\n     */\n    componentEdited: ({ node, configurations, links }) => {\n      engine.commands.add({\n        execute: () => {\n          editComponentConfiguration(node, configurations.after);\n        },\n        undo: () => {\n          editComponentConfiguration(node, configurations.before);\n\n          links.before.forEach(link =>\n            engine.getModel().addLink(adjustLink(link)),\n          );\n        },\n      });\n    },\n\n    /**\n     * Link added handler. Occurs on new links or bifurcations.\n     */\n    linkAdded: ({ link }) => {\n      engine.commands.add({\n        execute: () => {\n          engine.getModel().addLink(adjustLink(link));\n        },\n        undo: () => {\n          link.remove();\n        },\n      });\n    },\n\n    /**\n     * Link changed handler. Occurs when a link is extended.\n     */\n    linkChanged: ({ before, after }) => {\n      const handleLinkChanged = (from, to) => {\n        const link = engine.getModel().getLink(from.id);\n\n        // Update link points\n        link.setPoints(\n          from.points.map(position => {\n            const point = new PointModel({ link });\n            point.setPosition(position);\n            return point;\n          }),\n        );\n\n        // Updates bifurcation target\n        if (from.bifurcationTarget) {\n          const target = engine\n            .getModel()\n            .getLink(from.bifurcationTarget);\n          link.setBifurcationTarget(target);\n          target.addBifurcation(link);\n        } else if (to.bifurcationTarget) {\n          const oldTarget = engine\n            .getModel()\n            .getLink(to.bifurcationTarget);\n          link.setBifurcationTarget(null);\n          oldTarget.removeBifurcation(link);\n        }\n      };\n\n      engine.commands.add({\n        execute: () => {\n          handleLinkChanged(after, before);\n        },\n        undo: () => {\n          handleLinkChanged(before, after);\n        },\n      });\n    },\n\n    /**\n     * Components and links removal handler.\n     */\n    entitiesRemoved: ({ nodes, links }) => {\n      engine.commands.add({\n        execute: () => {\n          // Removes all nodes\n          nodes.forEach(node => node.remove());\n\n          // Removes all links\n          links.forEach(link => link.remove());\n        },\n        undo: () => {\n          /**\n           * Adds all links in the correct order. Bifurcations should be\n           * added before, otherwise links on the diagram are incorretly\n           * rendered.\n           */\n          links\n            .map(link => adjustLink(link, nodes))\n            .sort((l1, l2) => {\n              if (\n                l1.getBifurcationSource() === l2 ||\n                l1.getBifurcationTarget() === l2\n              )\n                return 1;\n\n              if (\n                l2.getBifurcationSource() === l1 ||\n                l2.getBifurcationTarget() === l1\n              )\n                return -1;\n\n              return 0;\n            })\n            .forEach(link => engine.getModel().addLink(link));\n\n          // Adds all nodes\n          nodes.forEach(node => engine.getModel().addNode(node));\n        },\n      });\n    },\n\n    /**\n     * Components and links move handler.\n     */\n    entitiesMoved: ({ nodes, links }) => {\n      const handleEntitiesMoved = state => {\n        // Updates all moved nodes position\n        nodes[state].forEach(({ id, position }) => {\n          const node = engine.getModel().getNode(id);\n          node.setPosition(position.x, position.y);\n        });\n\n        // Updates all moved links points\n        links[state].forEach(({ id, points }) => {\n          const link = engine.getModel().getLink(id);\n          link.setPoints(\n            points.map(position => {\n              const point = new PointModel({ link });\n              point.setPosition(position);\n              return point;\n            }),\n          );\n        });\n      };\n\n      engine.commands.add({\n        execute: () => {\n          handleEntitiesMoved('after');\n        },\n        undo: () => {\n          handleEntitiesMoved('before');\n        },\n      });\n    },\n  };\n};\n\nexport default commandHandlers;\n","export default class Command {\n  constructor(execute, undo) {\n    this.execute = execute;\n    this.undo = undo;\n  }\n\n  execute(engine) {\n    this.execute(engine);\n  }\n\n  undo(engine) {\n    this.undo(engine);\n  }\n}\n","import Command from './Command';\n\n/**\n * This class manages the undo/redo stack.\n */\nexport default class CommandManager {\n  constructor() {\n    this.clear();\n  }\n\n  clear() {\n    this.stack = [];\n    this.index = 0;\n  }\n\n  add({ execute, undo }) {\n    const command = new Command(execute, undo);\n    this.stack.length = this.index;\n    this.stack.push(command);\n    this.index += 1;\n  }\n\n  undo() {\n    if (this.index > 0) {\n      this.index -= 1;\n      const command = this.stack[this.index];\n      command.undo();\n    }\n  }\n\n  redo() {\n    if (this.index < this.stack.length) {\n      const command = this.stack[this.index];\n      command.execute();\n      this.index += 1;\n    }\n  }\n}\n","import { Point } from '@projectstorm/geometry';\n\nimport { snap, samePosition } from './common';\n\nconst getRelativePoint = (point, model) => {\n  const zoomLevelPercentage = model.getZoomLevel() / 100;\n  const engineOffsetX = model.getOffsetX() / zoomLevelPercentage;\n  const engineOffsetY = model.getOffsetY() / zoomLevelPercentage;\n\n  return new Point(point.x - engineOffsetX, point.y - engineOffsetY);\n};\n\nconst nextLinkPosition = (\n  event,\n  model,\n  initialRelative,\n  sourcePosition,\n) => {\n  const point = getRelativePoint(sourcePosition, model);\n\n  const zoomLevelPercentage = model.getZoomLevel() / 100;\n  const initialXRelative = initialRelative.x / zoomLevelPercentage;\n  const initialYRelative = initialRelative.y / zoomLevelPercentage;\n\n  const linkNextX =\n    point.x +\n    (initialXRelative - sourcePosition.x) +\n    event.virtualDisplacementX;\n  const linkNextY =\n    point.y +\n    (initialYRelative - sourcePosition.y) +\n    event.virtualDisplacementY;\n\n  return snap(\n    new Point(linkNextX, linkNextY),\n    model.options.gridSize,\n  );\n};\n\n/**\n * Handles mouse move on link or bifurcation creation, creating and\n * moving link points according to user input.\n *\n * This implementation mimics logisim link creation behavior.\n */\nexport default function handleLinkDrag(event, link) {\n  const first = link.getFirstPosition();\n  const last = link.getLastPosition();\n\n  const next = nextLinkPosition(\n    event,\n    this.engine.getModel(),\n    { x: this.initialXRelative, y: this.initialYRelative },\n    first,\n  );\n\n  if (!this.hasStartedMoving && samePosition(first, last)) {\n    /**\n     * For some reason, inputs are only valid after the first and last\n     * position are equals once. Before that, the last position is\n     * (0, 0).\n     */\n    this.hasStartedMoving = true;\n  }\n\n  if (this.hasStartedMoving) {\n    if (!link.hasMiddlePoint()) {\n      if (last.x !== next.x) {\n        if (!this.moveDirection) {\n          this.moveDirection = 'horizontal';\n        }\n\n        if (this.moveDirection === 'vertical') {\n          link.addPoint(link.generatePoint(last.x, next.y), 1);\n        }\n      } else if (last.y !== next.y) {\n        if (!this.moveDirection) {\n          this.moveDirection = 'vertical';\n        }\n\n        if (this.moveDirection === 'horizontal') {\n          link.addPoint(link.generatePoint(next.x, last.y), 1);\n        }\n      }\n    } else {\n      const middle = link.getMiddlePosition();\n      if (samePosition(middle, last)) {\n        link.removePoint(link.getMiddlePoint());\n      } else if (samePosition(first, middle)) {\n        link.removePoint(link.getMiddlePoint());\n        this.moveDirection =\n          this.moveDirection === 'horizontal'\n            ? 'vertical'\n            : 'horizontal';\n      } else if (this.moveDirection === 'horizontal') {\n        if (last.x !== next.x) {\n          link.getMiddlePoint().setPosition(next.x, first.y);\n        }\n      } else if (this.moveDirection === 'vertical') {\n        if (last.y !== next.y) {\n          link.getMiddlePoint().setPosition(first.x, next.y);\n        }\n      }\n    }\n  }\n\n  /**\n   * Sometimes, user input may be fast enough to skip the creation of\n   * a middle point. If this happens, we add it here.\n   */\n  if (\n    !link.hasMiddlePoint() &&\n    first.x !== next.x &&\n    first.y !== next.y\n  ) {\n    if (samePosition(first, last)) {\n      link.addPoint(link.generatePoint(next.x, first.y), 1);\n    } else if (this.moveDirection === 'horizontal') {\n      link.addPoint(link.generatePoint(next.x, first.y), 1);\n    } else {\n      link.addPoint(link.generatePoint(first.x, next.y), 1);\n    }\n  }\n\n  link.getLastPoint().setPosition(next.x, next.y);\n\n  this.engine.repaintCanvas();\n}\n","import React, { useContext } from 'react';\n\nimport { PortWidget } from '@projectstorm/react-diagrams';\n\nimport styled from 'styled-components';\n\nimport ComponentContext from '../ComponentContext';\nimport DiagramContext from '../Diagram/DiagramContext';\n\nconst Circle = styled.div`\n  width: 10px;\n  height: 10px;\n  border: var(--port-width) solid\n    ${props =>\n      props.link\n        ? 'var(--port-connected-border)'\n        : 'var(--port-unconnected-border)'};\n  border-radius: 100%;\n  background: ${props => props.port.getColor()};\n\n  &:hover {\n    background: var(--port-hover);\n  }\n`;\n\nclass Port extends PortWidget {\n  report() {\n    if (this.props.port) super.report();\n  }\n\n  componentDidUpdate() {\n    if (this.props.port) super.componentDidUpdate();\n  }\n\n  render() {\n    const { name, port, model, className = '' } = this.props;\n\n    if (!port) return null;\n\n    return (\n      <Circle\n        className={`port ${className}`}\n        data-name={name}\n        data-nodeid={model.getID()}\n        port={port}\n        link={port.getMainLink()}\n        title={name}\n      />\n    );\n  }\n}\n\n/**\n * React Diagrams PortWidget implementation needs us to forward some\n * props in order to function properly. We have this HOC so that\n * component widgets don't need to pass them every time.\n */\nconst withProps = WrappedComponent => ({ ...props }) => {\n  const diagram = useContext(DiagramContext);\n  const model = useContext(ComponentContext);\n\n  return (\n    <WrappedComponent\n      {...props}\n      port={model.getPort(props.name)}\n      engine={diagram.getEngine()}\n      model={model}\n    />\n  );\n};\n\nexport default withProps(Port);\n","import { Point } from '@projectstorm/geometry';\nimport {\n  AbstractDisplacementState,\n  Action,\n  InputType,\n} from '@projectstorm/react-canvas-core';\nimport {\n  NodeModel,\n  PortModel,\n} from '@projectstorm/react-diagrams-core';\n\nimport {\n  snap,\n  samePosition,\n  getLandingLink,\n  isPointOverLink,\n  sameX,\n  sameAxis,\n  closestPointToLink,\n  getIncompatibleWidthsErrorMessage,\n} from './common';\nimport handleLinkDrag from './handleLinkDrag';\n\n/**\n * This State is responsible for handling bifurcation events.\n *\n * A bifurcation is just like a normal link, but instead of having a\n * source port, it has a source link (its `bifurcationSource`).\n *\n * There are three ways the user can create bifurcations:\n *\n * 1. By dragging an existing link into another existing link\n *    (link-to-link bifurcation)\n * 2. By dragging an existing link to any other point on the canvas,\n *    except on top of nodes\n *\n * If the drag start and end points are near each other, this action\n * will behave as a link selection.\n */\nexport default class BifurcateLinkState extends AbstractDisplacementState {\n  constructor(showSnackbar) {\n    super({ name: 'bifurcate-link' });\n\n    this.registerAction(\n      new Action({\n        type: InputType.MOUSE_DOWN,\n        fire: event => {\n          this.moveDirection = undefined;\n          this.hasStartedMoving = false;\n\n          this.source = this.engine.getMouseElement(event.event);\n          this.sourceBefore = this.getLinkPoints(this.source);\n          this.sourceEdited = false;\n\n          const position = this.snapPointToSourceLink(\n            this.engine.getRelativeMousePoint(event.event),\n            this.source,\n          );\n\n          if (this.source.isLocked()) {\n            this.eject();\n            return;\n          }\n\n          this.bifurcation = this.engine\n            .getLinkFactories()\n            .getFactory(this.source.getType())\n            .generateModel();\n          this.bifurcation.setBits(this.source.getBits());\n\n          if (!this.bifurcation) {\n            this.eject();\n            return;\n          }\n\n          this.bifurcation.setBifurcationSource(this.source);\n          this.bifurcation.getFirstPoint().setPosition(position);\n          this.bifurcation.getLastPoint().setPosition(position);\n\n          this.bifurcation.setSelected(true);\n          this.engine.getModel().clearSelection();\n\n          this.source.setSelected(false);\n          this.source.addBifurcation(this.bifurcation);\n          this.engine.getModel().addLink(this.bifurcation);\n        },\n      }),\n    );\n\n    this.registerAction(\n      new Action({\n        type: InputType.MOUSE_UP,\n        fire: event => {\n          // Link selection\n          if (this.isNearbySourcePosition()) {\n            this.cleanUp();\n            this.engine.getModel().clearSelection();\n            this.source.setSelected(true);\n            this.engine.repaintCanvas();\n            return;\n          }\n\n          const model = this.engine.getMouseElement(event.event);\n\n          // Disallows creation under nodes\n          if (model instanceof NodeModel) {\n            this.cleanUp();\n            this.engine.repaintCanvas();\n            return;\n          }\n\n          // Bifurcation connected to port\n          if (\n            model instanceof PortModel &&\n            model.isNewLinkAllowed()\n          ) {\n            // Disallows connecting ports with different bit numbers\n            if (this.source.getBits() !== model.getBits()) {\n              this.cleanUp();\n              this.engine.repaintCanvas();\n              showSnackbar(\n                getIncompatibleWidthsErrorMessage(this.source, model),\n              );\n              return;\n            }\n\n            this.bifurcation.setTargetPort(model);\n\n            model.reportPosition();\n            this.adjustBifurcationOverlayingSource(this.bifurcation);\n            this.engine.repaintCanvas();\n            this.fireEvent();\n            return;\n          }\n\n          // Bifurcation landing on another existing link\n          const landing = getLandingLink(\n            this.bifurcation,\n            this.engine,\n          );\n          if (landing) {\n            // Disallows connecting links with different bit numbers\n            if (landing.getBits() !== this.bifurcation.getBits()) {\n              this.cleanUp();\n              this.engine.repaintCanvas();\n              showSnackbar(\n                getIncompatibleWidthsErrorMessage(\n                  this.bifurcation,\n                  landing,\n                ),\n              );\n              return;\n            }\n\n            this.bifurcation.setBifurcationTarget(landing);\n            landing.addBifurcation(this.bifurcation);\n            landing.setSelected(true);\n          }\n\n          this.mergeWithBifurcation(\n            this.bifurcation.getBifurcationSource(),\n          );\n          this.adjustBifurcationOverlayingSource(this.bifurcation);\n          this.fireEvent();\n        },\n      }),\n    );\n  }\n\n  /**\n   * Event is fired to be on the command manager, so the user can undo\n   * and redo it.\n   */\n  fireEvent = () => {\n    if (this.sourceEdited) {\n      this.engine.fireEvent(\n        {\n          before: this.sourceBefore,\n          after: this.getLinkPoints(this.source),\n        },\n        'linkChanged',\n      );\n    } else {\n      this.engine.fireEvent({ link: this.bifurcation }, 'linkAdded');\n    }\n  };\n\n  getLinkPoints(link) {\n    return {\n      id: link.getID(),\n      points: link.getPoints().map(point => point.getPosition()),\n      bifurcationTarget: link.getBifurcationTarget()\n        ? link.getBifurcationTarget().getID()\n        : null,\n    };\n  }\n\n  cleanUp() {\n    this.source.removeBifurcation(this.bifurcation);\n    this.bifurcation.remove();\n  }\n\n  /**\n   * Snaps a point to a point which is over the source link.\n   */\n  snapPointToSourceLink(position, source) {\n    const { gridSize } = this.engine.getModel().getOptions();\n    const sourcePoints = source.getPoints();\n\n    const closestCorner = this.getClosestCornerToPosition(\n      sourcePoints,\n      position,\n    );\n\n    if (closestCorner.distance < gridSize - 1) {\n      return new Point(\n        closestCorner.position.x,\n        closestCorner.position.y,\n      );\n    }\n\n    const closestPath = this.getClosestPathToPosition(\n      sourcePoints,\n      position,\n    );\n\n    const snappedPosition = snap(position, gridSize);\n\n    return new Point(\n      closestPath.axis === 'x'\n        ? closestPath.position\n        : snappedPosition.x,\n      closestPath.axis === 'y'\n        ? closestPath.position\n        : snappedPosition.y,\n    );\n  }\n\n  getClosestCornerToPosition(points, position) {\n    return points\n      .map(sourcePoint => ({\n        distance: Math.hypot(\n          position.x - sourcePoint.position.x,\n          position.y - sourcePoint.position.y,\n        ),\n        ...sourcePoint,\n      }))\n      .reduce((closest, point) =>\n        point.distance < closest.distance ? point : closest,\n      );\n  }\n\n  getPathPoints(points) {\n    return points\n      .map((point, i) => ({ from: points[i], to: points[i + 1] }))\n      .filter(tuple => tuple.to);\n  }\n\n  getPathDirections(points) {\n    return this.getPathPoints(points).map(pathPosition =>\n      sameX(pathPosition.from.position, pathPosition.to.position)\n        ? {\n            axis: 'x',\n            position: pathPosition.from.position.x,\n          }\n        : {\n            axis: 'y',\n            position: pathPosition.from.position.y,\n          },\n    );\n  }\n\n  getClosestPathToPosition(points, position) {\n    return this.getPathDirections(points)\n      .map(path => ({\n        distance: Math.abs(position[path.axis] - path.position),\n        ...path,\n      }))\n      .reduce((closest, path) =>\n        path.distance < closest.distance ? path : closest,\n      );\n  }\n\n  isNearbySourcePosition() {\n    return samePosition(\n      this.bifurcation.getFirstPosition(),\n      this.bifurcation.getLastPosition(),\n    );\n  }\n\n  /**\n   * Removes the bifurcation points which are causing the bifurcation\n   * to overlay its source link. Removes the whole bifurcation, in\n   * case it is completely overlayed by its source link.\n   */\n  adjustBifurcationOverlayingSource() {\n    const source = this.bifurcation.getBifurcationSource();\n\n    if (\n      samePosition(\n        this.bifurcation.getFirstPosition(),\n        source.getLastPosition(),\n      )\n    ) {\n      if (\n        isPointOverLink(this.bifurcation.getSecondPosition(), source)\n      ) {\n        this.bifurcation.removePoint(\n          this.bifurcation.getFirstPoint(),\n        );\n      }\n      return;\n    }\n\n    if (\n      isPointOverLink(this.bifurcation.getFirstPosition(), source) &&\n      isPointOverLink(this.bifurcation.getSecondPosition(), source)\n    ) {\n      if (!this.bifurcation.hasMiddlePoint()) {\n        this.bifurcation.remove();\n        source.removeBifurcation(this.bifurcation);\n        return;\n      }\n\n      this.bifurcation.removePoint(this.bifurcation.getFirstPoint());\n\n      if (\n        samePosition(\n          this.bifurcation.getFirstPosition(),\n          source.getMiddlePosition(),\n        )\n      ) {\n        if (\n          isPointOverLink(this.bifurcation.getLastPosition(), source)\n        ) {\n          this.bifurcation.remove();\n          source.removeBifurcation(this.bifurcation);\n          return;\n        }\n\n        this.bifurcation\n          .getFirstPoint()\n          .setPosition(source.getLastPosition());\n\n        this.mergeWithBifurcation(source);\n        return;\n      }\n    }\n\n    if (source.hasMiddlePoint()) {\n      if (\n        sameAxis(\n          this.bifurcation.getFirstPosition(),\n          source.getMiddlePosition(),\n          this.bifurcation.getSecondPosition(),\n        )\n      ) {\n        this.bifurcation\n          .getFirstPoint()\n          .setPosition(source.getMiddlePosition());\n      }\n    }\n  }\n\n  /**\n   * Merges a link with its bifurcations, when possible.\n   */\n  mergeWithBifurcation(link) {\n    const source = {\n      first: link.getFirstPosition(),\n      middle: link.getMiddlePosition(),\n      last: link.getLastPosition(),\n      secondLast: link.getSecondLastPosition(),\n    };\n\n    link.getBifurcations().forEach(b => {\n      if (isPointOverLink(link.getLastPosition(), b)) {\n        b.getFirstPoint().setPosition(link.getLastPosition());\n      }\n    });\n\n    const elegibleBifurcations = link.getBifurcations().filter(b => {\n      if (!samePosition(b.getFirstPosition(), source.last))\n        return false;\n\n      if (!link.hasMiddlePoint() && !b.hasMiddlePoint()) return true;\n\n      if (link.hasMiddlePoint() && b.hasMiddlePoint()) {\n        if (samePosition(source.middle, b.getMiddlePosition())) {\n          return true;\n        }\n        return false;\n      }\n\n      if (\n        sameAxis(\n          source.last,\n          source.secondLast,\n          b.getSecondPosition(),\n        )\n      )\n        return true;\n\n      return false;\n    });\n\n    const bifurcationToMerge = elegibleBifurcations[0];\n\n    if (!bifurcationToMerge) return;\n\n    const newMiddle = bifurcationToMerge.getSecondLastPosition();\n    const newLast = bifurcationToMerge.getLastPosition();\n\n    if (!link.hasMiddlePoint()) {\n      link.addPoint(link.generatePoint(newMiddle.x, newMiddle.y), 1);\n    }\n\n    link.getLastPoint().setPosition(newLast.x, newLast.y);\n\n    if (link.isStraight() && link.hasMiddlePoint()) {\n      link.removePoint(link.getMiddlePoint());\n    }\n\n    link.removeBifurcation(bifurcationToMerge);\n    const bifurcationTarget = bifurcationToMerge.getBifurcationTarget();\n    if (bifurcationTarget) {\n      link.setBifurcationTarget(bifurcationTarget);\n      bifurcationTarget.addBifurcation(link);\n    }\n    this.sourceEdited = true;\n    bifurcationToMerge.remove();\n\n    if (\n      samePosition(link.getFirstPosition(), link.getLastPosition())\n    ) {\n      link.remove();\n    } else {\n      link.setSelected(true);\n    }\n\n    this.adjustBifurcationPoints(link);\n  }\n\n  /**\n   * Adjusts points for bifurcations on which its first point is not\n   * over its source link.\n   */\n  adjustBifurcationPoints(link) {\n    const { gridSize } = this.engine.getModel().getOptions();\n\n    link\n      .getBifurcations()\n      .filter(b => !isPointOverLink(b.getFirstPosition(), link))\n      .forEach(b => {\n        const newSource = snap(\n          closestPointToLink(b.getFirstPosition(), link),\n          gridSize,\n        );\n\n        b.getFirstPoint().setPosition(newSource.x, newSource.y);\n\n        if (sameAxis(b.getFirstPosition(), b.getLastPosition()))\n          return;\n\n        // Adjust middle point aswell\n        if (b.hasMiddlePoint()) {\n          b.removePoint(b.getMiddlePoint());\n        }\n\n        if (\n          sameX(link.getFirstPosition(), link.getSecondPosition())\n        ) {\n          b.addPoint(\n            b.generatePoint(\n              b.getLastPosition().x,\n              b.getFirstPosition().y,\n            ),\n            1,\n          );\n        } else {\n          b.addPoint(\n            b.generatePoint(\n              b.getFirstPosition().x,\n              b.getLastPosition().y,\n            ),\n            1,\n          );\n        }\n      });\n  }\n\n  /**\n   * Updates bifurcation's points upon mouse move.\n   */\n  fireMouseMoved(event) {\n    handleLinkDrag.call(this, event, this.bifurcation);\n  }\n}\n","import { AbstractDisplacementState } from '@projectstorm/react-canvas-core';\n\nexport default class DragCanvasState extends AbstractDisplacementState {\n  constructor() {\n    super({\n      name: 'drag-canvas',\n    });\n  }\n\n  async activated(prev) {\n    super.activated(prev);\n    this.engine.getModel().clearSelection();\n    await this.engine.repaintCanvas(true);\n\n    // We can block layer rendering because we are only targeting the transforms\n    this.engine\n      .getModel()\n      .getLayers()\n      .forEach(layer => layer.allowRepaint(false));\n\n    this.initialCanvasX = this.engine.getModel().getOffsetX();\n    this.initialCanvasY = this.engine.getModel().getOffsetY();\n  }\n\n  deactivated(next) {\n    super.deactivated(next);\n\n    this.engine\n      .getModel()\n      .getLayers()\n      .forEach(layer => layer.allowRepaint(true));\n  }\n\n  fireMouseMoved(event) {\n    // Allow moving only with left clicks\n    if (\n      event.event.nativeEvent.which !== 1 &&\n      !event.event.nativeEvent.targetTouches\n    )\n      return;\n\n    this.engine\n      .getModel()\n      .setOffset(\n        this.initialCanvasX + event.displacementX,\n        this.initialCanvasY + event.displacementY,\n      );\n    this.engine.repaintCanvas();\n  }\n}\n","import {\n  AbstractDisplacementState,\n  Action,\n  InputType,\n} from '@projectstorm/react-canvas-core';\n\nimport BaseModel from '../../BaseModel';\nimport PortModel from '../../Port/PortModel';\nimport {\n  nearby,\n  getLandingLink,\n  getIncompatibleWidthsErrorMessage,\n} from './common';\nimport handleLinkDrag from './handleLinkDrag';\n\n/**\n * This State is responsible for handling link creation events.\n */\nexport default class DragNewLinkState extends AbstractDisplacementState {\n  constructor(showSnackbar) {\n    super({ name: 'drag-new-link' });\n\n    this.registerAction(\n      new Action({\n        type: InputType.MOUSE_DOWN,\n        fire: event => {\n          this.moveDirection = undefined;\n          this.hasStartedMoving = false;\n\n          this.port = this.engine.getMouseElement(event.event);\n\n          if (\n            !(this.port instanceof PortModel) ||\n            this.port.isLocked()\n          ) {\n            this.eject();\n            return;\n          }\n\n          this.link = this.port.createLinkModel();\n\n          if (!this.link) {\n            this.eject();\n            return;\n          }\n\n          this.link.setSelected(true);\n          this.link.setSourcePort(this.port);\n          this.engine.getModel().clearSelection();\n          this.engine.getModel().addLink(this.link);\n          this.port.reportPosition();\n        },\n      }),\n    );\n\n    this.registerAction(\n      new Action({\n        type: InputType.MOUSE_UP,\n        fire: event => {\n          const model = this.engine.getMouseElement(event.event);\n\n          // Disallows creation under nodes\n          if (\n            Object.getPrototypeOf(model) instanceof BaseModel ||\n            this.isNearbySourcePort(event.event)\n          ) {\n            this.link.remove();\n            this.engine.repaintCanvas();\n          }\n\n          // Link connecting to port\n          if (\n            model instanceof PortModel &&\n            this.port.canLinkToPort(model)\n          ) {\n            // Disallows connecting ports with different bit numbers\n            if (this.port.getBits() !== model.getBits()) {\n              this.link.remove();\n              this.engine.repaintCanvas();\n              showSnackbar(\n                getIncompatibleWidthsErrorMessage(this.port, model),\n              );\n              return;\n            }\n\n            this.link.setTargetPort(model);\n            model.reportPosition();\n            this.engine.repaintCanvas();\n            this.fireEvent();\n            return;\n          }\n\n          // Link landing on another link\n          const landing = getLandingLink(this.link, this.engine);\n          if (landing) {\n            // Disallows connecting links with different bit numbers\n            if (landing.getBits() !== this.link.getBits()) {\n              this.link.remove();\n              this.engine.repaintCanvas();\n              showSnackbar(\n                getIncompatibleWidthsErrorMessage(this.link, landing),\n              );\n              return;\n            }\n\n            const reverse = this.engine\n              .getFactoryForLink(landing)\n              .generateModel();\n            reverse.setPoints(this.link.getPoints().reverse());\n            reverse.setTargetPort(this.link.getSourcePort());\n            reverse.setBifurcationSource(landing);\n            reverse.setBits(landing.getBits());\n\n            landing.addBifurcation(reverse);\n            landing.setSelected(true);\n\n            this.link.remove();\n            this.engine.getModel().addLink(reverse);\n            this.link = reverse;\n          }\n\n          this.fireEvent();\n        },\n      }),\n    );\n  }\n\n  /**\n   * Event is fired to be on the command manager, so the user can undo\n   * and redo it.\n   */\n  fireEvent = () => {\n    this.engine.fireEvent({ link: this.link }, 'linkAdded');\n  };\n\n  isNearbySourcePort(event) {\n    const point = this.engine.getRelativeMousePoint(event);\n\n    const sourcePort = this.link.getSourcePort();\n    const sourcePortSize = sourcePort.width;\n    const sourcePortPosition = sourcePort.getPosition();\n\n    return nearby(point, sourcePortPosition, sourcePortSize);\n  }\n\n  /**\n   * Updates link's points upon mouse move.\n   */\n  fireMouseMoved(event) {\n    handleLinkDrag.call(this, event, this.link);\n  }\n}\n","import { Point } from '@projectstorm/geometry';\nimport {\n  Action,\n  InputType,\n  BasePositionModel,\n  AbstractDisplacementState,\n} from '@projectstorm/react-canvas-core';\nimport { NodeModel } from '@projectstorm/react-diagrams-core';\n\nimport BaseModel from '../../BaseModel';\nimport {\n  snap,\n  samePosition,\n  sameX,\n  sameY,\n  closestPointToLink,\n} from './common';\n\n/**\n * This State handles node moving.\n *\n * When nodes are moved, all of its links (and all bifurcations from\n * or to this link) need to be rearranged.\n */\nexport default class MoveItemsState extends AbstractDisplacementState {\n  constructor() {\n    super({\n      name: 'move-items',\n    });\n\n    this.registerAction(\n      new Action({\n        type: InputType.MOUSE_DOWN,\n        fire: event => {\n          if (this.engine.getModel().isLocked()) {\n            this.eject();\n            return;\n          }\n\n          this.lastDisplacement = new Point(0, 0);\n\n          this.element = this.engine\n            .getActionEventBus()\n            .getModelForEvent(event);\n\n          if (!this.element) {\n            this.eject();\n            return;\n          }\n\n          if (!this.element.isSelected()) {\n            this.engine.getModel().clearSelection();\n          }\n\n          this.linkDirections = this.getLinkDirections(this.element);\n\n          this.element.setSelected(true);\n          this.engine.repaintCanvas();\n\n          this.nodesBefore = this.getNodesPositions();\n          this.linksBefore = this.getLinksPoints();\n        },\n      }),\n    );\n\n    this.registerAction(\n      new Action({\n        type: InputType.MOUSE_UP,\n        fire: () => {\n          if (\n            this.lastDisplacement.x === 0 &&\n            this.lastDisplacement.y === 0\n          ) {\n            return;\n          }\n\n          this.fireEvent();\n        },\n      }),\n    );\n  }\n\n  getNodesPositions = () =>\n    this.engine\n      .getModel()\n      .getSelectedEntities()\n      .filter(\n        model => Object.getPrototypeOf(model) instanceof BaseModel,\n      )\n      .map(node => ({\n        id: node.getID(),\n        position: node.getPosition(),\n      }));\n\n  getLinksPoints = () =>\n    this.engine\n      .getModel()\n      .getSelectedEntities()\n      .filter(\n        model => Object.getPrototypeOf(model) instanceof BaseModel,\n      )\n      .map(node => node.getAllLinks())\n      .flat()\n      .map(link => ({\n        id: link.getID(),\n        points: link.getPoints().map(point => point.getPosition()),\n      }));\n\n  /**\n   * Event is fired to be on the command manager, so the user can undo\n   * and redo it.\n   */\n  fireEvent() {\n    this.engine.fireEvent(\n      {\n        nodes: {\n          before: this.nodesBefore,\n          after: this.getNodesPositions(),\n        },\n        links: {\n          before: this.linksBefore,\n          after: this.getLinksPoints(),\n        },\n      },\n      'entitiesMoved',\n    );\n  }\n\n  activated(previous) {\n    super.activated(previous);\n    this.initialPositions = {};\n  }\n\n  /**\n   * Gets all links from a given node, including all its bifurcations.\n   */\n  getLinksFromNode(node) {\n    if (!(Object.getPrototypeOf(node) instanceof BaseModel))\n      return [];\n\n    return Object.values(node.getPorts())\n      .map(p => Object.entries(p.getLinks()))\n      .filter(entry => entry.length > 0)\n      .flat()\n      .map(([id, link]) => [\n        [id, link],\n        ...this.getBifurcatedLinks(link),\n      ])\n      .flat();\n  }\n\n  getBifurcatedLinks(link) {\n    return link\n      .getBifurcations()\n      .map(b => [[b.getID(), b], ...this.getBifurcatedLinks(b)])\n      .flat();\n  }\n\n  getLinkDirections(node) {\n    return this.getLinksFromNode(node).reduce(\n      (acc, [id, link]) => ({\n        ...acc,\n        [id]: this.getLinkDirection(link),\n      }),\n      {},\n    );\n  }\n\n  getLinkDirection(link) {\n    if (!link.hasMiddlePoint()) {\n      return null;\n    }\n\n    const first = link.getFirstPosition();\n    const middle = link.getMiddlePosition();\n\n    if (sameX(first, middle)) return 'vertical';\n    if (sameY(first, middle)) return 'horizontal';\n\n    return null;\n  }\n\n  fireMouseMoved(event) {\n    // Allow moving only with left clicks\n    if (event.event.nativeEvent.which !== 1) return;\n\n    const currentDisplacement = snap(\n      new Point(\n        event.virtualDisplacementX,\n        event.virtualDisplacementY,\n      ),\n      this.engine.getModel().getOptions().gridSize,\n    );\n\n    // Avoids rearranging everything before moving at least one grid\n    if (samePosition(currentDisplacement, this.lastDisplacement)) {\n      return;\n    }\n    this.lastDisplacement = currentDisplacement;\n\n    this.engine\n      .getModel()\n      .getSelectedEntities()\n      .filter(\n        entity => Object.getPrototypeOf(entity) instanceof BaseModel,\n      )\n      .forEach(entity => {\n        this.moveEntity(entity, event);\n        this.adjustNodeLinks(entity);\n      });\n\n    this.engine.repaintCanvas();\n  }\n\n  moveEntity(entity, event) {\n    if (entity.isLocked()) {\n      return;\n    }\n\n    if (!this.initialPositions[entity.getID()]) {\n      this.initialPositions[entity.getID()] = {\n        point: entity.getPosition(),\n        item: entity,\n      };\n    }\n\n    const initial = this.initialPositions[entity.getID()].point;\n    const model = this.engine.getModel();\n\n    entity.setPosition(\n      model.getGridPosition(initial.x + event.virtualDisplacementX),\n      model.getGridPosition(initial.y + event.virtualDisplacementY),\n    );\n  }\n\n  adjustNodeLinks(node) {\n    Object.values(node.getPorts()).forEach(port =>\n      Object.values(port.getLinks()).forEach(this.adjustLinkPoints),\n    );\n  }\n\n  adjustLinkPoints = link => {\n    const first = link.getFirstPosition();\n    const last = link.getLastPosition();\n\n    if (\n      !link.hasMiddlePoint() &&\n      first.x !== last.x &&\n      first.y !== last.y\n    ) {\n      link.addPoint(link.generatePoint(first.x, last.y), 1);\n    } else if (link.hasMiddlePoint()) {\n      const linkDirection = this.linkDirections[link.getID()];\n\n      if (linkDirection === 'horizontal') {\n        link.getMiddlePoint().setPosition(last.x, first.y);\n      } else {\n        link.getMiddlePoint().setPosition(first.x, last.y);\n      }\n\n      const middle = link.getMiddlePosition();\n\n      if (samePosition(first, middle) || samePosition(middle, last)) {\n        link.removePoint(link.getMiddlePoint());\n      }\n    }\n\n    // Adjusts origin/target position from bifurcations of this link\n    this.adjustLinkBifurcations(link);\n  };\n\n  adjustLinkBifurcations(link) {\n    const bifurcations = link.getBifurcations();\n\n    bifurcations.forEach(bifurcation => {\n      this.adjustFirstAndLastPoints(bifurcation);\n\n      // Adjusts the points of this bifurcation (recursion)\n      this.adjustLinkPoints(bifurcation);\n    });\n  }\n\n  /**\n   * Assures that the first position on a bifurcation is still over\n   * the source link, and that the last position is still over the\n   * target link.\n   */\n  adjustFirstAndLastPoints(bifurcation) {\n    const { gridSize } = this.engine.getModel().getOptions();\n\n    const first = bifurcation.getFirstPoint();\n    const closestToFirst = snap(\n      closestPointToLink(\n        first.getPosition(),\n        bifurcation.getBifurcationSource(),\n      ),\n      gridSize,\n    );\n    first.setPosition(closestToFirst.x, closestToFirst.y);\n\n    if (bifurcation.getBifurcationTarget()) {\n      const last = bifurcation.getLastPoint();\n      const closestToLast = snap(\n        closestPointToLink(\n          last.getPosition(),\n          bifurcation.getBifurcationTarget(),\n        ),\n        gridSize,\n      );\n      last.setPosition(closestToLast.x, closestToLast.y);\n    }\n  }\n}\n","import { Rectangle } from '@projectstorm/geometry';\nimport {\n  AbstractDisplacementState,\n  SelectionLayerModel,\n} from '@projectstorm/react-canvas-core';\nimport {\n  LinkModel,\n  PointModel,\n} from '@projectstorm/react-diagrams-core';\n\n/**\n * This State handles selection box events.\n *\n * Link (and link points) selection is currently disabled.\n */\nexport default class SelectionBoxState extends AbstractDisplacementState {\n  constructor() {\n    super({\n      name: 'selection-box',\n    });\n  }\n\n  activated(previous) {\n    super.activated(previous);\n    this.layer = new SelectionLayerModel();\n    this.engine.getModel().addLayer(this.layer);\n  }\n\n  deactivated(next) {\n    super.deactivated(next);\n    this.layer.remove();\n    this.engine.repaintCanvas();\n  }\n\n  getBoxDimensions(event) {\n    const rel = this.engine.getRelativePoint(\n      event.event.clientX,\n      event.event.clientY,\n    );\n\n    return {\n      left:\n        rel.x > this.initialXRelative ? this.initialXRelative : rel.x,\n      top:\n        rel.y > this.initialYRelative ? this.initialYRelative : rel.y,\n      width: Math.abs(rel.x - this.initialXRelative),\n      height: Math.abs(rel.y - this.initialYRelative),\n      right:\n        rel.x < this.initialXRelative ? this.initialXRelative : rel.x,\n      bottom:\n        rel.y < this.initialYRelative ? this.initialYRelative : rel.y,\n    };\n  }\n\n  fireMouseMoved(event) {\n    this.layer.setBox(this.getBoxDimensions(event));\n\n    const relative = this.engine.getRelativeMousePoint({\n      clientX: this.initialX,\n      clientY: this.initialY,\n    });\n    if (event.virtualDisplacementX < 0) {\n      relative.x -= Math.abs(event.virtualDisplacementX);\n    }\n    if (event.virtualDisplacementY < 0) {\n      relative.y -= Math.abs(event.virtualDisplacementY);\n    }\n    const rect = new Rectangle(\n      relative,\n      Math.abs(event.virtualDisplacementX),\n      Math.abs(event.virtualDisplacementY),\n    );\n\n    if (!this.engine.getModel().isLocked()) {\n      this.engine\n        .getModel()\n        .getSelectionEntities()\n        .forEach(model => {\n          if (model.getBoundingBox) {\n            if (!this.allowSelection(model)) return;\n\n            const bounds = model.getBoundingBox();\n            if (\n              rect.containsPoint(bounds.getTopLeft()) &&\n              rect.containsPoint(bounds.getBottomRight())\n            ) {\n              model.setSelected(true);\n            } else {\n              model.setSelected(false);\n            }\n          }\n        });\n    }\n\n    this.engine.repaintCanvas();\n  }\n\n  allowSelection(model) {\n    return (\n      !(model instanceof LinkModel) && !(model instanceof PointModel)\n    );\n  }\n}\n","import {\n  State,\n  Action,\n  InputType,\n} from '@projectstorm/react-canvas-core';\n\nimport SelectionBoxState from './SelectionBoxState';\n\n/**\n * This State handles nodes selection.\n */\nexport default class SelectingState extends State {\n  constructor() {\n    super({\n      name: 'selecting',\n    });\n    this.keys = ['shift'];\n\n    this.registerAction(\n      new Action({\n        type: InputType.MOUSE_DOWN,\n        fire: event => {\n          const element = this.engine\n            .getActionEventBus()\n            .getModelForEvent(event);\n\n          // Go into a selection box on the canvas state\n          if (!element) {\n            this.transitionWithEvent(new SelectionBoxState(), event);\n          } else {\n            element.setSelected(true);\n            this.engine.repaintCanvas();\n          }\n        },\n      }),\n    );\n  }\n}\n","import {\n  State,\n  Action,\n  InputType,\n} from '@projectstorm/react-canvas-core';\n\nimport LinkModel from '../../Link/LinkModel';\nimport PortModel from '../../Port/PortModel';\nimport BifurcateLinkState from './BifurcateLinkState';\nimport DragCanvasState from './DragCanvasState';\nimport DragNewLinkState from './DragNewLinkState';\nimport MoveItemsState from './MoveItemsState';\nimport SelectingState from './SelectingState';\n\n/**\n * This class defines custom handlers (called states) to respond to\n * clicking events on certain elements.\n */\nexport default class States extends State {\n  constructor(showSnackbar) {\n    super({\n      name: 'diagram-states',\n    });\n\n    this.childStates = [new SelectingState()];\n    this.dragCanvas = new DragCanvasState();\n    this.dragNewLink = new DragNewLinkState(showSnackbar);\n    this.bifurcateLink = new BifurcateLinkState(showSnackbar);\n    this.dragItems = new MoveItemsState();\n\n    // Determine what was clicked on\n    this.registerAction(\n      new Action({\n        type: InputType.MOUSE_DOWN,\n        fire: event => {\n          const element = this.engine\n            .getActionEventBus()\n            .getModelForEvent(event);\n\n          // The canvas was clicked on, transition to the dragging canvas state\n          if (!element) {\n            this.transitionWithEvent(this.dragCanvas, event);\n          }\n          // Initiate dragging a new link\n          else if (element instanceof PortModel) {\n            this.transitionWithEvent(this.dragNewLink, event);\n          }\n          // Create a bifurcation\n          else if (element instanceof LinkModel) {\n            this.transitionWithEvent(this.bifurcateLink, event);\n          }\n          // Move items\n          else {\n            this.transitionWithEvent(this.dragItems, event);\n          }\n        },\n      }),\n    );\n\n    // Allows dragging the canvas on touch devices\n    this.registerAction(\n      new Action({\n        type: InputType.TOUCH_START,\n        fire: event => {\n          this.transitionWithEvent(this.dragCanvas, event);\n        },\n      }),\n    );\n  }\n}\n","import { Point } from '@projectstorm/geometry';\nimport createEngine, {\n  DiagramModel,\n} from '@projectstorm/react-diagrams';\n\nimport BaseModel from '../BaseModel';\nimport LinkFactory from '../Link/LinkFactory';\nimport PortFactory from '../Port/PortFactory';\nimport ClipboardAction from './actions/ClipboardAction';\nimport DeleteAction from './actions/DeleteAction';\nimport DuplicateAction from './actions/DuplicateAction';\nimport UndoRedoAction from './actions/UndoRedoAction';\nimport ZoomAction from './actions/ZoomAction';\nimport commandHandlers from './Command/commandHandlers';\nimport CommandManager from './Command/CommandManager';\nimport States from './states/States';\n\nexport default class DiagramEngine {\n  constructor(components, areShortcutsAllowed, showSnackbar) {\n    this.components = components;\n    this.areShortcutsAllowed = areShortcutsAllowed;\n    this.showSnackbar = showSnackbar;\n    this.locked = false;\n\n    this.initializeEngine();\n    this.initializeModel();\n  }\n\n  getEngine = () => this.engine;\n\n  getModel = () => this.engine.getModel();\n\n  /**\n   * Initialization methods\n   */\n  initializeEngine = () => {\n    this.engine = createEngine({\n      registerDefaultDeleteItemsAction: false,\n      registerDefaultZoomCanvasAction: false,\n    });\n\n    this.engine.commands = new CommandManager();\n    this.engine.registerListener(commandHandlers(this));\n\n    this.engine\n      .getStateMachine()\n      .pushState(new States(this.showSnackbar));\n\n    const actions = [\n      DuplicateAction,\n      ClipboardAction,\n      DeleteAction,\n      UndoRedoAction,\n      ZoomAction,\n    ];\n    actions.forEach(Action =>\n      this.engine\n        .getActionEventBus()\n        .registerAction(new Action(this.areShortcutsAllowed)),\n    );\n\n    this.engine.getPortFactories().registerFactory(new PortFactory());\n    this.engine.getLinkFactories().registerFactory(new LinkFactory());\n\n    this.registerComponents();\n  };\n\n  initializeModel = () => {\n    this.model = new DiagramModel();\n\n    this.model.setGridSize(15);\n    this.model.setLocked(false);\n    this.model.registerListener({\n      eventDidFire: event => {\n        const type = event.function;\n        if (type === 'offsetUpdated') this.adjustGridOffset(event);\n        if (type === 'zoomUpdated') this.adjustGridZoom(event);\n      },\n    });\n    this.realignGrid();\n\n    this.engine.setModel(this.model);\n  };\n\n  registerComponents = () => {\n    this.components.forEach(component => {\n      this.engine.getNodeFactories().registerFactory(component);\n    });\n  };\n\n  /**\n   * Serializing & deserializing methods\n   */\n  serialize = () => this.model.serialize();\n\n  load = circuit => {\n    this.engine.commands.clear();\n    this.model.deserializeModel(circuit, this.engine);\n    this.realignGrid();\n    this.engine.repaintCanvas();\n  };\n\n  /**\n   * Diagram locking methods\n   */\n  setLocked = locked => {\n    this.model.setLocked(locked);\n    this.locked = locked;\n  };\n\n  isLocked = () => this.locked;\n\n  /**\n   * Diagram painting methods\n   */\n  repaint = () => this.engine.repaintCanvas();\n\n  realignGrid = () => {\n    this.adjustGridOffset({\n      offsetX: this.model.getOffsetX(),\n      offsetY: this.model.getOffsetY(),\n    });\n\n    this.adjustGridZoom({\n      zoom: this.model.getZoomLevel(),\n    });\n  };\n\n  adjustGridOffset = ({ offsetX, offsetY }) => {\n    document.body.style.setProperty('--offset-x', `${offsetX}px`);\n    document.body.style.setProperty('--offset-y', `${offsetY}px`);\n  };\n\n  adjustGridZoom = ({ zoom }) => {\n    const { gridSize } = this.model.getOptions();\n    document.body.style.setProperty(\n      '--grid-size',\n      `${(gridSize * zoom) / 100}px`,\n    );\n  };\n\n  /**\n   * Component creation and configuration methods\n   */\n  handleComponentDrop = (event, component) => {\n    const { Model } = this.components.find(\n      c => c.type === component.type,\n    );\n\n    const getSnappedWindowCenter = () => {\n      const zoomFactor = this.model.getZoomLevel() / 100;\n\n      const x =\n        -(this.model.getOffsetX() / zoomFactor) +\n        window.innerWidth / (zoomFactor * 2);\n      const y =\n        -(this.model.getOffsetY() / zoomFactor) +\n        window.innerHeight / (zoomFactor * 2);\n\n      return new Point(\n        Math.round(x / 15) * 15,\n        Math.round(y / 15) * 15,\n      );\n    };\n\n    const getSnappedRelativeMousePoint = () => {\n      const { x, y } = this.engine.getRelativeMousePoint(event);\n      return new Point(\n        Math.round(x / 15) * 15,\n        Math.round(y / 15) * 15,\n      );\n    };\n\n    const point = event\n      ? getSnappedRelativeMousePoint(event)\n      : getSnappedWindowCenter();\n\n    const node = new Model(component.configurations, component.type);\n    node.setPosition(point);\n    this.model.addNode(node);\n\n    this.engine.fireEvent({ nodes: [node] }, 'componentsAdded');\n    this.engine.repaintCanvas();\n  };\n\n  handleComponentEdit = (node, configurations) => {\n    const configurationsBefore = node.configurations;\n    const linksBefore = node.getAllLinks();\n\n    this.editComponentConfiguration(node, configurations);\n\n    this.engine.fireEvent(\n      {\n        node,\n        configurations: {\n          before: configurationsBefore,\n          after: node.configurations,\n        },\n        links: {\n          before: linksBefore,\n          after: node.getAllLinks(),\n        },\n      },\n      'componentEdited',\n    );\n\n    this.engine.repaintCanvas();\n  };\n\n  /**\n   * When the component configuration is changed, we reinitialize the\n   * given component with the given configurations.\n   *\n   * For simplicity's sake, if this configuration edit creates or\n   * removes a port, we delete all its links. Also, if the number of\n   * bits of a port is changed, its main link is deleted.\n   */\n  editComponentConfiguration = (node, configurations) => {\n    const portsBefore = node.getPorts();\n\n    // Resets configurations and ports for the node and reinitialize\n    node.configurations = configurations; // eslint-disable-line no-param-reassign\n    node.ports = {}; // eslint-disable-line no-param-reassign\n    node.initialize(configurations);\n\n    const hasNewPort = Object.values(node.getPorts()).some(\n      newPort => !portsBefore[newPort.getName()],\n    );\n    const hasRemovedPort = Object.values(portsBefore).some(\n      oldPort => !node.getPort(oldPort.getName()),\n    );\n\n    if (hasNewPort || hasRemovedPort) {\n      /**\n       * If there was any port added or removed, we need to remove all\n       * links connected to the edited component.\n       */\n      Object.values(portsBefore).forEach(port =>\n        Object.values(port.getLinks()).forEach(link => link.remove()),\n      );\n      return;\n    }\n\n    /**\n     * If no port was neither added or removed, we need to map old\n     * port links to new ports\n     */\n    Object.values(portsBefore).forEach(portBefore => {\n      const newPort = node.getPort(portBefore.getName());\n      /**\n       * If the number of bits for this port has changed, delete its\n       * main link, to avoid inconsistencies.\n       */\n      if (portBefore.getBits() !== newPort.getBits()) {\n        if (portBefore.getMainLink())\n          portBefore.getMainLink().remove();\n        return;\n      }\n\n      const link = Object.values(portBefore.getLinks())[0];\n      if (!link) return;\n      newPort.addLink(link);\n      if (portBefore === link.getSourcePort())\n        link.setSourcePort(newPort);\n      if (portBefore === link.getTargetPort())\n        link.setTargetPort(newPort);\n      portBefore.remove();\n    });\n  };\n\n  clearSelection = () =>\n    this.getEngine()\n      .getModel()\n      .clearSelection();\n\n  getSelectedNodes = () =>\n    this.engine\n      .getModel()\n      .getSelectedEntities()\n      .filter(entity => entity instanceof BaseModel);\n\n  fireAction = event =>\n    this.engine.getActionEventBus().fireAction({\n      event: {\n        ...event,\n        key: '',\n        preventDefault: () => {},\n        stopPropagation: () => {},\n      },\n    });\n\n  duplicateSelected = () =>\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyD' });\n\n  cutSelected = () =>\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyX' });\n\n  copySelected = () =>\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyC' });\n\n  pasteSelected = () =>\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyV' });\n\n  deleteSelected = () =>\n    this.fireAction({ type: 'keydown', code: 'Delete' });\n\n  undo = () =>\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyZ' });\n\n  redo = () =>\n    this.fireAction({\n      type: 'keydown',\n      ctrlKey: true,\n      shiftKey: true,\n      code: 'KeyZ',\n    });\n\n  zoomIn = ({ event }) =>\n    this.fireAction({\n      clientX: event.clientX,\n      clientY: event.clientY,\n      type: 'wheel',\n      deltaY: +1,\n    });\n\n  zoomOut = ({ event }) =>\n    this.fireAction({\n      clientX: event.clientX,\n      clientY: event.clientY,\n      type: 'wheel',\n      deltaY: -1,\n    });\n\n  /**\n   * Simulation methods\n   */\n  synchronizeLink = (id, value) =>\n    this.getEngine()\n      .getModel()\n      .getLink(id)\n      .setValue(value);\n\n  synchronizeComponent = (id, diff) => {\n    const component = this.getEngine()\n      .getModel()\n      .getNode(id);\n\n    // Sets output port values\n    Object.entries(diff.output).forEach(([name, value]) =>\n      component.getPort(name).setValue(value),\n    );\n\n    // Sets custom properties\n    Object.entries(diff.properties).forEach(([name, value]) => {\n      component[name] = value;\n    });\n  };\n\n  clearAllValues = () => {\n    this.clearLinkValues();\n    this.clearPortValues();\n  };\n\n  clearLinkValues = () =>\n    this.getEngine()\n      .getModel()\n      .getLinks()\n      .forEach(link => link.setValue(null));\n\n  clearPortValues = () =>\n    this.getEngine()\n      .getModel()\n      .getNodes()\n      .forEach(node =>\n        Object.values(node.getPorts()).forEach(port =>\n          port.setValue(null),\n        ),\n      );\n}\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nconst MAX_PORTS = 5;\n\n/**\n * Given a number of ports, returns an array with the port positions\n * symmetrically distributed.\n */\nexport const distributePorts = numPorts => {\n  if (numPorts === 2) return [1, 5];\n  if (numPorts === 3) return [1, 3, 5];\n  if (numPorts === 4) return [1, 2, 4, 5];\n\n  const isNumberOfPortsEven = numPorts % 2 === 0;\n  const closestEven = numPorts - (isNumberOfPortsEven ? 0 : 1);\n\n  let startAt = 0;\n  let length = MAX_PORTS;\n  if (numPorts > MAX_PORTS) {\n    startAt = Math.floor((MAX_PORTS - closestEven) / 2);\n    length = closestEven + 1;\n  }\n\n  const result = [...Array(length).keys()].map(i => i + startAt + 1);\n  if (isNumberOfPortsEven) {\n    result.splice(numPorts / 2, 1);\n  }\n  return result;\n};\n\nconst PortExtensionBar = styled.div`\n  position: absolute;\n  left: ${props => props.offsetX}px;\n  height: ${props => props.size}px;\n  width: 2px;\n  background: ${props =>\n    props.selected\n      ? 'var(--border-selected)'\n      : 'var(--border-unselected)'};\n\n  ${props => `${props.place}: 88px;`}\n`;\n\nexport const PortExtension = ({\n  selected,\n  portPositions,\n  offsetX = 1,\n}) => {\n  const lastPortPosition = portPositions[portPositions.length - 1];\n  if (lastPortPosition <= MAX_PORTS) return null;\n\n  const size = (lastPortPosition - MAX_PORTS) * 15;\n\n  return (\n    <>\n      <PortExtensionBar\n        selected={selected}\n        size={size}\n        place=\"top\"\n        offsetX={offsetX}\n      />\n      <PortExtensionBar\n        selected={selected}\n        size={size}\n        place=\"bottom\"\n        offsetX={offsetX}\n      />\n    </>\n  );\n};\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nimport { PortExtension, distributePorts } from '../portExtendUtils';\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 90px;\n  height: 90px;\n\n  transition: 100ms linear;\n  svg {\n    fill: ${props =>\n      props.selected\n        ? 'var(--body-selected)'\n        : 'var(--body-unselected)'};\n    stroke: ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  }\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n\n  ${props => {\n    if (props.name === 'out') return '';\n    return `top: ${props.position * 15 - 5}px;`;\n  }}\n\n  ${props => {\n    if (props.name === 'out') return 'right: -5px';\n    return 'left: -5px';\n  }};\n`;\n\nexport const Shape = ({ size = 90 }) => (\n  <svg\n    height={size}\n    width={size}\n    viewBox=\"0 0 23.812499 23.812501\"\n    fill=\"var(--body-unselected)\"\n    stroke=\"var(--border-unselected)\"\n    strokeWidth=\"var(--border-width)\"\n  >\n    <g>\n      <path\n        transform=\"scale(0.26458333)\"\n        d=\"M 2 2 L 2 45 A 42.999999 42.999999 0 0 0 2 45.271484 L 2 88 L 45 88 A 42.999999 42.999999 0 0 0 88 45 A 42.999999 42.999999 0 0 0 45 2 L 44.728516 2 L 2 2 z \"\n      />\n    </g>\n  </svg>\n);\n\nconst AndWidget = props => {\n  const { model } = props;\n\n  const inputPorts = Object.values(model.getInputPorts());\n  const portPositions = distributePorts(inputPorts.length);\n\n  return (\n    <Wrapper selected={model.isSelected()}>\n      <PortExtension\n        selected={model.isSelected()}\n        portPositions={portPositions}\n      />\n      {inputPorts.map((port, i) => (\n        <PositionedPort\n          key={port.getName()}\n          name={port.getName()}\n          position={portPositions[i]}\n        />\n      ))}\n      <PositionedPort name=\"out\" />\n      <Shape />\n    </Wrapper>\n  );\n};\n\nexport default AndWidget;\n","import React from 'react';\n\nimport { Shape } from './AndWidget';\n\nconst AndIcon = () => <Shape size={30} />;\n\nexport default AndIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './AndIcon';\nimport model from './AndModel';\nimport widget from './AndWidget';\n\nexport default new Component({\n  type: 'And',\n  name: 'And',\n  description: 'Logic \"and\" gate',\n  group: 'Logic gates',\n  configurations: [\n    {\n      name: 'INPUT_PORTS_NUMBER',\n      type: 'number',\n      default: 2,\n      label: 'Number of input ports',\n      min: 2,\n      max: 16,\n      validate(value) {\n        if (value < this.min)\n          return `Minimum input ports is ${this.min}`;\n        if (value > this.max)\n          return `Maximum input ports is ${this.max}`;\n        return null;\n      },\n    },\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class AndModel extends BaseModel {\n  initialize(configurations) {\n    const INPUT_PORTS_NUMBER = Number(\n      configurations.INPUT_PORTS_NUMBER,\n    );\n    this.dataBits = Number(configurations.DATA_BITS);\n\n    for (let i = 0; i < INPUT_PORTS_NUMBER; i += 1) {\n      this.addInputPort(`in${i}`, { bits: this.dataBits });\n    }\n    this.addOutputPort('out', { bits: this.dataBits });\n  }\n\n  executeBit(bits) {\n    if (bits.every(bit => bit === 1)) return 1;\n    if (bits.some(bit => bit === 0)) return 0;\n    return 'e';\n  }\n\n  step(input) {\n    return {\n      out: Object.values(input)\n        .map(value => value.asArray(this.dataBits))\n        .transpose()\n        .map(this.executeBit),\n    };\n  }\n\n  stepFloating(input) {\n    return this.step(input);\n  }\n\n  stepError(input) {\n    return this.step(input);\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 30px;\n  height: 30px;\n\n  transition: 100ms linear;\n  svg {\n    fill: ${props =>\n      props.selected\n        ? 'var(--body-selected)'\n        : 'var(--body-unselected)'};\n    stroke: ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  }\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  ${props => {\n    if (props.name === 'in') return 'left: -5px;';\n    if (props.name === 'out') return 'right: -5px;';\n    return '';\n  }}\n`;\n\nexport const Shape = ({ size = 30 }) => (\n  <svg\n    height={size}\n    width={size}\n    viewBox=\"0 0 45.0 45.0\"\n    fill=\"var(--body-unselected)\"\n    stroke=\"var(--border-unselected)\"\n    strokeWidth=\"var(--border-width)\"\n  >\n    <g>\n      <path d=\"M 1.0207771,1.6492624 V 43.357967 L 42.724327,22.649262 Z\" />\n    </g>\n  </svg>\n);\n\nconst BufferWidget = props => {\n  const { model } = props;\n  const {\n    options: { selected },\n  } = model;\n\n  return (\n    <Wrapper selected={selected}>\n      <PositionedPort name=\"in\" />\n      <PositionedPort name=\"out\" />\n      <Shape />\n    </Wrapper>\n  );\n};\n\nexport default BufferWidget;\n","import React from 'react';\n\nimport { Shape } from './BufferWidget';\n\nconst BufferIcon = () => <Shape size={30} />;\n\nexport default BufferIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './BufferIcon';\nimport model from './BufferModel';\nimport widget from './BufferWidget';\n\nexport default new Component({\n  type: 'Buffer',\n  name: 'Buffer',\n  description: 'Simple buffer',\n  group: 'Logic gates',\n  configurations: [\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class BufferModel extends BaseModel {\n  initialize(configurations) {\n    const DATA_BITS = Number(configurations.DATA_BITS);\n\n    this.addInputPort('in', { bits: DATA_BITS });\n    this.addOutputPort('out', { bits: DATA_BITS });\n  }\n\n  step(input) {\n    return { out: input.in };\n  }\n}\n","import React, { useEffect, useRef } from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nexport const Shape = styled.div`\n  position: relative;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 30px;\n  height: 30px;\n\n  background: ${props =>\n    props.selected\n      ? 'var(--body-selected)'\n      : 'var(--body-unselected)'};\n  border: 2px solid\n    ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n\n  transition: 100ms linear;\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  border-radius: 50%;\n  width: 18px;\n  height: 18px;\n  outline: none;\n\n  border: 2px solid rgba(0, 0, 0, 0.3);\n  background: linear-gradient(\n    225deg,\n    rgba(238, 0, 0, 1) 0%,\n    rgba(125, 20, 20, 1) 100%\n  );\n\n  :active {\n    border: 2px solid rgba(255, 255, 255, 0.5);\n    background: linear-gradient(\n      225deg,\n      rgba(125, 20, 20, 1) 0%,\n      rgba(238, 0, 0, 1) 100%\n    );\n  }\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  right: -7px;\n`;\n\nconst ButtonWidget = props => {\n  const { model } = props;\n  const {\n    options: { selected },\n  } = model;\n\n  const buttonRef = useRef();\n\n  const handleReleaseAway = event => {\n    if (\n      buttonRef.current &&\n      !buttonRef.current.contains(event.target)\n    ) {\n      model.onRelease();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('mouseup', handleReleaseAway);\n    return () =>\n      document.removeEventListener('mouseup', handleReleaseAway);\n  });\n\n  return (\n    <Shape selected={selected}>\n      <PositionedPort name=\"out\" />\n      <Button\n        ref={buttonRef}\n        onMouseDown={() => model.onClick()}\n        onMouseUp={() => model.onRelease()}\n      />\n    </Shape>\n  );\n};\n\nexport default ButtonWidget;\n","import React from 'react';\n\nimport { Shape, Button } from './ButtonWidget';\n\nconst ButtonIcon = () => (\n  <Shape>\n    <Button as=\"div\" />\n  </Shape>\n);\n\nexport default ButtonIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './ButtonIcon';\nimport model from './ButtonModel';\nimport widget from './ButtonWidget';\n\nexport default new Component({\n  type: 'Button',\n  name: 'Button',\n  description: 'Simple button',\n  group: 'Input & output',\n  configurations: [],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class ButtonModel extends BaseModel {\n  initialize() {\n    this.addOutputPort('out');\n  }\n\n  onSimulationStart() {\n    this.emit({ out: 0 });\n  }\n\n  onClick() {\n    this.emit({ out: 1 });\n  }\n\n  onRelease() {\n    this.emit({ out: 0 });\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  left: -7px;\n  top: 50%;\n  transform: translateY(-50%);\n`;\n\nconst Body = styled.div`\n  position: relative;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 30px;\n  height: 30px;\n\n  background: ${props =>\n    `rgba(62, 62, 62, ${props.selected ? 0.5 : 1})`};\n  box-shadow: 0 0 ${props => (props.isActive ? 15 : 0)}px black;\n  border: 2px solid\n    ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  border-radius: 15px;\n`;\n\nconst Hole = styled.div`\n  width: 8px;\n  height: 8px;\n\n  background: black;\n  border-radius: 4px;\n`;\n\nexport const Shape = ({ selected, isActive, children }) => (\n  <Body selected={selected} isActive={isActive} data-testid=\"body\">\n    <Hole />\n    {children}\n  </Body>\n);\n\nconst BuzzerWidget = props => {\n  const { model } = props;\n  const {\n    options: { selected },\n  } = model;\n\n  return (\n    <Shape selected={selected} isActive={model.isActive()}>\n      <PositionedPort name=\"in\" />\n    </Shape>\n  );\n};\n\nexport default BuzzerWidget;\n","import React from 'react';\n\nimport { Shape } from './BuzzerWidget';\n\nconst BuzzerIcon = () => <Shape color=\"#00ff00\" />;\n\nexport default BuzzerIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './BuzzerIcon';\nimport model from './BuzzerModel';\nimport widget from './BuzzerWidget';\n\nexport default new Component({\n  type: 'Buzzer',\n  name: 'Buzzer',\n  description: 'Outputs sound at a give frequency',\n  group: 'Input & output',\n  configurations: [\n    {\n      name: 'FREQUENCY_HZ',\n      type: 'number',\n      default: 300,\n      label: 'Sound frequency (in Hertz)',\n      min: 0,\n      max: 20000,\n      validate(value) {\n        if (value < this.min)\n          return `Minimum frequency is ${this.min} Hz`;\n        if (value > this.max)\n          return `Maximum frequency is ${this.max} Hz`;\n        return null;\n      },\n    },\n    {\n      name: 'WAVEFORM',\n      type: 'select',\n      default: 'SINE',\n      label: 'Waveform',\n      options: [\n        {\n          label: 'Sine',\n          value: 'SINE',\n        },\n        {\n          label: 'Square',\n          value: 'SQUARE',\n        },\n        {\n          label: 'Sawtooth',\n          value: 'SAWTOOTH',\n        },\n        {\n          label: 'Triangle',\n          value: 'TRIANGLE',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class BuzzerModel extends BaseModel {\n  initialize(configurations) {\n    this.frequencyHz = Number(configurations.FREQUENCY_HZ);\n    this.waveform = configurations.WAVEFORM;\n\n    this.addInputPort('in');\n  }\n\n  onSimulationStart() {\n    this.audio = this.createAudio(this.frequencyHz, this.waveform);\n\n    if (this.getInput() === 1) this.audio.play();\n  }\n\n  onSimulationPause() {\n    this.audio.pause();\n  }\n\n  step(input) {\n    if (input.in) {\n      this.audio.play();\n    } else {\n      this.audio.pause();\n    }\n  }\n\n  getInput() {\n    const value = this.getPort('in').getValue();\n\n    if (!value) return 0;\n    return value[0];\n  }\n\n  isActive() {\n    return !!this.getInput();\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  right: -7px;\n`;\n\nexport const Shape = styled.div`\n  position: relative;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 30px;\n  height: 30px;\n\n  background: ${props =>\n    props.selected\n      ? 'var(--body-selected)'\n      : 'var(--body-unselected)'};\n  border: 2px solid\n    ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n\n  transition: 100ms linear;\n`;\n\nexport const Decoration = ({\n  isActive,\n  color,\n  periodMs,\n  animateTransition,\n}) => (\n  <svg\n    width={30}\n    height={30}\n    viewBox=\"0 0 7.9374997 7.9375003\"\n    strokeWidth=\"1\"\n  >\n    <path\n      data-testid=\"decoration\"\n      stroke={color}\n      strokeWidth={0.75}\n      fill=\"none\"\n      style={{\n        transform: isActive ? 'none' : 'rotateX(180deg)',\n        transformOrigin: 'center',\n        transition: animateTransition\n          ? `calc(${periodMs}ms / 2 * 0.4) ease-in-out`\n          : 'none',\n      }}\n      d=\"M 1.8683545,4.4337648 V 6.14192 H 4.0062447 V 1.79558 h 2.0629007 v 1.7578226\"\n    />\n  </svg>\n);\n\nconst ClockWidget = props => {\n  const { model } = props;\n  const {\n    options: { selected },\n    periodMs,\n  } = model;\n\n  const out = model.getPort('out');\n\n  return (\n    <Shape selected={selected}>\n      <PositionedPort name=\"out\" />\n      <Decoration\n        isActive={model.isActive()}\n        color={out.getColor()}\n        periodMs={periodMs}\n        animateTransition={periodMs >= 500}\n      />\n    </Shape>\n  );\n};\n\nexport default ClockWidget;\n","import React from 'react';\n\nimport { Shape, Decoration } from './ClockWidget';\n\nconst ClockIcon = () => (\n  <Shape>\n    <Decoration color=\"var(--port-unconnected)\" />\n  </Shape>\n);\n\nexport default ClockIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './ClockIcon';\nimport model from './ClockModel';\nimport widget from './ClockWidget';\n\nexport default new Component({\n  type: 'Clock',\n  name: 'Clock',\n  description: 'Generates a clock signal',\n  group: 'Input & output',\n  configurations: [\n    {\n      name: 'FREQUENCY_HZ',\n      type: 'number',\n      default: 1,\n      label: 'Frequency (in Hz)',\n      step: 0.25,\n      min: 0.25,\n      max: 1000,\n      validate(value) {\n        if (value < this.min)\n          return `Frequency should be greater than ${this.min} Hz`;\n        if (value > this.max)\n          return `Frequency should be lesser than ${this.max} Hz`;\n        if (value % this.step !== 0)\n          return `Frequency should be divisible by ${this.step} Hz`;\n        return null;\n      },\n    },\n    {\n      name: 'HIGH_DURATION',\n      type: 'number',\n      default: 1,\n      label: 'High duration (in cycles)',\n      min: 1,\n      validate(value) {\n        if (value < this.min)\n          return `High duration should be greater than ${this.min}`;\n        return null;\n      },\n    },\n    {\n      name: 'LOW_DURATION',\n      type: 'number',\n      default: 1,\n      label: 'Low duration (in cycles)',\n      min: 1,\n      validate(value) {\n        if (value < this.min)\n          return `Low duration should be greater than ${this.min}`;\n        return null;\n      },\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class ClockModel extends BaseModel {\n  initialize(configurations) {\n    this.addOutputPort('out');\n\n    this.configurations = configurations;\n\n    this.output = 0;\n    this.emitInterval = null;\n    this.periodMs = 1000 / this.configurations.FREQUENCY_HZ;\n    this.highCount = 0;\n    this.lowCount = 0;\n  }\n\n  onSimulationStart() {\n    this.emit({ out: this.output });\n\n    this.emitInterval = setInterval(() => {\n      const lastOutput = this.output;\n      this.output = this.getNextOutput();\n\n      if (lastOutput === this.output) return;\n\n      this.emit({ out: this.output });\n    }, this.periodMs / 2);\n  }\n\n  getNextOutput() {\n    const { HIGH_DURATION, LOW_DURATION } = this.configurations;\n\n    if (this.output === 1) {\n      this.highCount += 1;\n\n      if (this.highCount === HIGH_DURATION) {\n        this.highCount = 0;\n        return 0;\n      }\n\n      return 1;\n    }\n\n    this.lowCount += 1;\n\n    if (this.lowCount === LOW_DURATION) {\n      this.lowCount = 0;\n      return 1;\n    }\n\n    return 0;\n  }\n\n  onSimulationPause() {\n    clearInterval(this.emitInterval);\n  }\n\n  onSimulationStop() {\n    clearInterval(this.emitInterval);\n  }\n\n  getOutput() {\n    return this.getPort('out').getValue() || [0];\n  }\n\n  isActive() {\n    return this.getOutput()[0] === 1;\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 30px;\n  height: 30px;\n\n  transition: 100ms linear;\n  svg {\n    fill: ${props =>\n      props.selected\n        ? 'var(--body-selected)'\n        : 'var(--body-unselected)'};\n    stroke: ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  }\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  ${props => {\n    if (props.name === 'control') return 'bottom: -5px;';\n    if (props.name === 'in') return 'left: -5px;';\n    if (props.name === 'out') return 'right: -5px;';\n    return '';\n  }}\n`;\n\nexport const Shape = ({ size = 30 }) => (\n  <svg\n    height={size}\n    width={size}\n    viewBox=\"0 0 45.0 45.0\"\n    fill=\"var(--body-unselected)\"\n    stroke=\"var(--border-unselected)\"\n    strokeWidth=\"var(--border-width)\"\n  >\n    <g>\n      <path d=\"M 1.0207771,1.6492624 V 43.357967 L 42.724327,22.649262 Z\" />\n      <line x1=\"22.5\" y1=\"32.5\" x2=\"22.5\" y2=\"45\" />\n    </g>\n  </svg>\n);\n\nconst ControlledBufferWidget = props => {\n  const { model } = props;\n  const {\n    options: { selected },\n  } = model;\n\n  return (\n    <Wrapper selected={selected}>\n      <PositionedPort name=\"control\" />\n      <PositionedPort name=\"in\" />\n      <PositionedPort name=\"out\" />\n      <Shape />\n    </Wrapper>\n  );\n};\n\nexport default ControlledBufferWidget;\n","import React from 'react';\n\nimport { Shape } from './ControlledBufferWidget';\n\nconst ControlledBufferIcon = () => <Shape size={30} />;\n\nexport default ControlledBufferIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './ControlledBufferIcon';\nimport model from './ControlledBufferModel';\nimport widget from './ControlledBufferWidget';\n\nexport default new Component({\n  type: 'ControlledBuffer',\n  name: 'Controlled buffer',\n  description: 'Useful for I/O managing',\n  group: 'Logic gates',\n  configurations: [\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class ControlledBufferModel extends BaseModel {\n  initialize(configurations) {\n    const DATA_BITS = Number(configurations.DATA_BITS);\n\n    this.addInputPort('control');\n    this.addInputPort('in', { bits: DATA_BITS });\n    this.addOutputPort('out', { bits: DATA_BITS });\n  }\n\n  step(input) {\n    if (input.control === 0) return { out: 'x' };\n    return { out: input.in };\n  }\n\n  stepFloating(input) {\n    if (input.control[0] === 'x') return { out: 'e' };\n    if (input.control[0] === 0) return { out: 'x' };\n    return { out: input.in };\n  }\n\n  stepError(input) {\n    return this.stepFloating(input);\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 45px;\n  height: 30px;\n\n  transition: 100ms linear;\n  svg {\n    fill: ${props =>\n      props.selected\n        ? 'var(--body-selected)'\n        : 'var(--body-unselected)'};\n    stroke: ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  }\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  ${props => {\n    if (props.name === 'control') return 'bottom: -5px; left: 10px;';\n    if (props.name === 'in') return 'left: -5px;';\n    if (props.name === 'out') return 'right: -5px;';\n    return '';\n  }}\n`;\n\nexport const Shape = ({ size = 30 }) => (\n  <svg\n    height={size}\n    width={size + 15}\n    viewBox=\"11 0 45.0 45.0\"\n    fill=\"var(--body-unselected)\"\n    stroke=\"var(--border-unselected)\"\n    strokeWidth=\"var(--border-width)\"\n  >\n    <g>\n      <path d=\"M 1.0207771,1.6492624 V 43.357967 L 42.724327,22.649262 Z\" />\n      <circle r=\"8\" cy=\"22\" cx=\"51\" />\n      <line x1=\"22.5\" y1=\"32.5\" x2=\"22.5\" y2=\"45\" />\n    </g>\n  </svg>\n);\n\nconst ControlledInverterWidget = props => {\n  const { model } = props;\n  const {\n    options: { selected },\n  } = model;\n\n  return (\n    <Wrapper selected={selected}>\n      <PositionedPort name=\"control\" />\n      <PositionedPort name=\"in\" />\n      <PositionedPort name=\"out\" />\n      <Shape />\n    </Wrapper>\n  );\n};\n\nexport default ControlledInverterWidget;\n","import React from 'react';\n\nimport { Shape } from './ControlledInverterWidget';\n\nconst ControlledInverterIcon = () => <Shape size={30} />;\n\nexport default ControlledInverterIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './ControlledInverterIcon';\nimport model from './ControlledInverterModel';\nimport widget from './ControlledInverterWidget';\n\nexport default new Component({\n  type: 'ControlledInverter',\n  name: 'Controlled inverter',\n  description: 'Useful for I/O managing',\n  group: 'Logic gates',\n  configurations: [\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class ControlledInverterModel extends BaseModel {\n  initialize(configurations) {\n    const DATA_BITS = Number(configurations.DATA_BITS);\n\n    this.addInputPort('control');\n    this.addInputPort('in', { bits: DATA_BITS });\n    this.addOutputPort('out', { bits: DATA_BITS });\n  }\n\n  step(input) {\n    if (input.control === 0) return { out: 'x' };\n    return { out: ~input.in };\n  }\n\n  stepFloating(input) {\n    if (input.control[0] === 'x') return { out: 'e' };\n    if (input.control[0] === 0) return { out: 'x' };\n    return {\n      out: input.in.map(bit => {\n        if (bit === 0) return 1;\n        if (bit === 1) return 0;\n        if (bit === 'x') return 'e';\n        return bit;\n      }),\n    };\n  }\n\n  stepError(input) {\n    return this.stepFloating(input);\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 30px;\n  height: 30px;\n\n  font-size: 12px;\n\n  transition: 100ms linear;\n\n  background: ${props =>\n    props.selected\n      ? 'var(--body-selected)'\n      : 'var(--body-unselected)'};\n\n  border: 2px solid\n    ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  ${props => {\n    if (props.name === 'in') return 'left: -7px;';\n    if (props.name === 'out') return 'right: -7px;';\n    return '';\n  }}\n`;\n\nconst CounterWidget = props => {\n  const { model } = props;\n  const {\n    options: { selected },\n  } = model;\n\n  return (\n    <Wrapper selected={selected}>\n      <PositionedPort name=\"in\" />\n      <PositionedPort name=\"out\" />\n      ++\n    </Wrapper>\n  );\n};\n\nexport default CounterWidget;\n","import React from 'react';\n\nimport { Wrapper } from './CounterWidget';\n\nconst CounterIcon = () => <Wrapper>++</Wrapper>;\n\nexport default CounterIcon;\n","import { Component } from '@logossim/core';\nimport { MAX_VALUE } from '@logossim/core/Simulation/utils';\n\nimport icon from './CounterIcon';\nimport model from './CounterModel';\nimport widget from './CounterWidget';\n\nexport default new Component({\n  type: 'Counter',\n  name: 'Counter',\n  description: 'Counts every input rising or falling edge',\n  group: 'Miscellaneous',\n  configurations: [\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n    {\n      name: 'COUNT_ON',\n      type: 'select',\n      default: 'rising',\n      label: 'Count on',\n      options: [\n        {\n          label: 'Rising edge',\n          value: 'rising',\n        },\n        {\n          label: 'Falling edge',\n          value: 'falling',\n        },\n      ],\n    },\n    {\n      name: 'START_AT',\n      type: 'number',\n      default: 0,\n      label: 'Start value at',\n      min: 0,\n      max: MAX_VALUE[16],\n      validate(value, configurations) {\n        const DATA_BITS = Number(configurations.DATA_BITS);\n\n        if (value > MAX_VALUE[DATA_BITS])\n          return `Maximum value for ${DATA_BITS}-bit is ${MAX_VALUE[DATA_BITS]}`;\n\n        return null;\n      },\n    },\n    {\n      name: 'WRAP_AT',\n      type: 'number',\n      default: 0,\n      label: 'Wrap value at (0 means no wrap)',\n      min: 0,\n      max: MAX_VALUE[16],\n      validate(value, configurations) {\n        const DATA_BITS = Number(configurations.DATA_BITS);\n        const START_AT = Number(configurations.START_AT);\n\n        if (value > MAX_VALUE[DATA_BITS])\n          return `Maximum value for ${DATA_BITS}-bit is ${MAX_VALUE[DATA_BITS]}`;\n\n        if (value !== 0 && value <= START_AT)\n          return `Value must be greater than ${START_AT} (start value)`;\n\n        return null;\n      },\n    },\n    {\n      name: 'STEP_VALUE',\n      type: 'number',\n      default: 1,\n      label: 'Step value',\n      min: 1,\n      max: MAX_VALUE[16],\n      validate(value, configurations) {\n        const DATA_BITS = Number(configurations.DATA_BITS);\n\n        if (value > MAX_VALUE[DATA_BITS])\n          return `Maximum value for ${DATA_BITS}-bit is ${MAX_VALUE[DATA_BITS]}`;\n\n        return null;\n      },\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class CounterModel extends BaseModel {\n  initialize(configurations) {\n    this.dataBits = Number(configurations.DATA_BITS);\n    this.countOnRising = configurations.COUNT_ON === 'rising';\n    this.startAt = configurations.START_AT;\n    this.wrapAt = configurations.WRAP_AT || 2 ** this.dataBits;\n    this.stepValue = configurations.STEP_VALUE;\n\n    this.addInputPort('in');\n    this.addOutputPort('out', { bits: this.dataBits });\n\n    this.current = this.startAt;\n  }\n\n  isRisingEdge(meta) {\n    if (this.countOnRising) return meta.in.risingEdge;\n    return meta.in.fallingEdge;\n  }\n\n  step(input, meta) {\n    if (!this.isRisingEdge(meta)) return { out: this.current };\n\n    this.current += this.stepValue;\n\n    if (this.current >= this.wrapAt) this.current = this.startAt;\n\n    return {\n      out: this.current,\n    };\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  ${props => {\n    if (props.name === 'in') return 'left: -5px;';\n    if (props.name === 'selection') return 'left: 10px;';\n    return 'right: -5px;';\n  }};\n  ${props => {\n    if (props.name === 'selection') return 'bottom: -5px;';\n    return `top: ${(props.position || 0) - 5}px;`;\n  }};\n`;\n\nconst Wrapper = styled.div`\n  position: relative;\n\n  width: 30px;\n  height: ${props => (props.outputNumber + 2) * 15}px;\n`;\n\nexport const Shape = ({ selected, outputNumber, icon }) => {\n  const height = (outputNumber + 2) * 15;\n\n  return (\n    <svg\n      viewBox={`0 0 30 ${height}`}\n      height={icon ? 30 : height}\n      width={icon ? 15 : 30}\n      fill={\n        selected ? 'var(--body-selected)' : 'var(--body-unselected)'\n      }\n      stroke={\n        selected ? 'var(--link-selected)' : 'var(--link-16-bit-color)'\n      }\n      strokeLinecap=\"round\"\n      strokeWidth=\"2\"\n    >\n      <path d={`M0,15 L0,${height - 15} L30,${height} L30,0 Z`} />\n      <path d={`M15,${height - 7.5} L15,${height}`} />\n    </svg>\n  );\n};\n\nconst DemuxWidget = props => {\n  const { model } = props;\n  const {\n    options: { selected },\n  } = model;\n\n  const outputPorts = Object.values(model.getOutputPorts());\n  const { outputNumber } = model;\n\n  return (\n    <Wrapper outputNumber={outputNumber}>\n      <PositionedPort\n        name=\"in\"\n        position={((outputNumber + 2) * 15) / 2}\n      />\n      <PositionedPort name=\"selection\" />\n      {outputPorts.map((port, i) => (\n        <PositionedPort\n          key={port.getName()}\n          name={port.getName()}\n          position={(i + 1) * 15}\n        />\n      ))}\n      <Shape selected={selected} outputNumber={outputNumber} />\n    </Wrapper>\n  );\n};\n\nexport default DemuxWidget;\n","import React from 'react';\n\nimport { Shape } from './DemuxWidget';\n\nconst DemuxIcon = () => <Shape dataBits={1} outputNumber={2} icon />;\n\nexport default DemuxIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './DemuxIcon';\nimport model from './DemuxModel';\nimport widget from './DemuxWidget';\n\nexport default new Component({\n  type: 'Demux',\n  name: 'Demux',\n  description: 'Demultiplexer',\n  group: 'Plexers',\n  configurations: [\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bits',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n    {\n      name: 'OUTPUT_NUMBER',\n      type: 'select',\n      default: '2',\n      label: 'Number of outputs',\n      options: [\n        {\n          label: '2',\n          value: '2',\n        },\n        {\n          label: '4',\n          value: '4',\n        },\n        {\n          label: '16',\n          value: '16',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class DemuxModel extends BaseModel {\n  initialize(configurations) {\n    const DATA_BITS = Number(configurations.DATA_BITS);\n    this.outputNumber = Number(configurations.OUTPUT_NUMBER);\n\n    this.addInputPort('in', { bits: DATA_BITS });\n    this.addInputPort('selection', {\n      bits: Math.log2(this.outputNumber),\n    });\n\n    for (let i = 0; i < this.outputNumber; i += 1) {\n      this.addOutputPort(`out${i}`, { bits: DATA_BITS });\n    }\n  }\n\n  step(input) {\n    return {\n      ...Object.fromEntries(\n        [...new Array(this.outputNumber)].map((_, i) => [\n          `out${i}`,\n          0,\n        ]),\n      ),\n      [`out${input.selection}`]: input.in,\n    };\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  left: 50%;\n  top: -5px;\n  transform: translateX(-50%);\n`;\n\nconst Wrapper = styled.div`\n  position: relative;\n\n  width: 30px;\n  height: 30px;\n`;\n\nexport const Shape = ({ selected, dataBits = 1 }) => {\n  return (\n    <svg\n      viewBox=\"0 0 30 30\"\n      width=\"30\"\n      height=\"30\"\n      fill=\"none\"\n      stroke={selected ? 'var(--value-5)' : 'var(--value-0)'}\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <polyline\n        points=\"15 0 15 15\"\n        strokeWidth={`var(--link-${dataBits}-bit-width)`}\n        strokeLinecap=\"butt\"\n      />\n      <polyline points=\"7 15 23 15\" />\n      <polyline points=\"7 15 2 25\" />\n      <polyline points=\"15 15 9 25\" />\n      <polyline points=\"23 15 17 25\" />\n    </svg>\n  );\n};\n\nconst GroundWidget = props => {\n  const { model } = props;\n  const {\n    options: { selected },\n  } = model;\n\n  return (\n    <Wrapper>\n      <Shape selected={selected} dataBits={model.dataBits} />\n      <PositionedPort name=\"out\" />\n    </Wrapper>\n  );\n};\n\nexport default GroundWidget;\n","import React from 'react';\n\nimport { Shape } from './GroundWidget';\n\nconst GroundIcon = () => <Shape />;\n\nexport default GroundIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './GroundIcon';\nimport model from './GroundModel';\nimport widget from './GroundWidget';\n\nexport default new Component({\n  type: 'Ground',\n  name: 'Ground',\n  description: 'Ground (GND) component',\n  group: 'Wiring',\n  configurations: [\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class GroundModel extends BaseModel {\n  initialize(configurations) {\n    this.dataBits = Number(configurations.DATA_BITS);\n\n    this.addOutputPort('out', { bits: this.dataBits });\n  }\n\n  onSimulationStart() {\n    this.emit({ out: 0 });\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst SHAPE_SIZES = {\n  1: { width: 30, height: 30 },\n  2: { width: 60, height: 30 },\n  4: { width: 120, height: 30 },\n  8: { width: 120, height: 60 },\n  16: { width: 240, height: 60 },\n};\n\nconst PIN_BACKGROUND = {\n  0: 'var(--value-off)',\n  1: 'var(--value-on)',\n  x: 'var(--value-floating)',\n};\n\nconst PIN_BORDER = {\n  0: 'var(--value-on)',\n  1: 'var(--value-off)',\n  x: 'black',\n};\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  right: -7px;\n  top: 50%;\n  transform: translateY(-50%);\n`;\n\nexport const Shape = styled.div`\n  position: relative;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: ${props => SHAPE_SIZES[props.dataBits].width}px;\n  height: ${props => SHAPE_SIZES[props.dataBits].height}px;\n\n  background: ${props =>\n    props.selected\n      ? 'var(--body-selected)'\n      : 'var(--body-unselected)'};\n  border: 2px solid\n    ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  border-radius: 20px;\n`;\n\nexport const PinContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  align-items: center;\n\n  max-width: 215px;\n`;\n\nexport const Pin = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 20px;\n  height: 20px;\n  margin: 2px;\n\n  background: ${props => PIN_BACKGROUND[props.value]};\n  border: 2px solid ${props => PIN_BORDER[props.value]};\n  border-radius: 100%;\n\n  color: ${props => (props.value === 1 ? 'black' : 'white')};\n  font-family: monospace;\n\n  transition: 100ms linear;\n`;\n\nconst InputWidget = props => {\n  const { model } = props;\n  const {\n    options: { selected },\n    configurations: { DATA_BITS },\n  } = model;\n\n  const dataBits = Number(DATA_BITS);\n\n  return (\n    <Shape selected={selected} dataBits={dataBits}>\n      <PinContainer>\n        {[...new Array(dataBits)].map((_, index) => {\n          const value = model.getBitAt(index);\n\n          return (\n            <Pin\n              // eslint-disable-next-line react/no-array-index-key\n              key={index}\n              onClick={() => model.onClick(index)}\n              value={value}\n            >\n              {value}\n            </Pin>\n          );\n        })}\n      </PinContainer>\n      <PositionedPort name=\"out\" />\n    </Shape>\n  );\n};\n\nexport default InputWidget;\n","import React from 'react';\n\nimport { Shape, Pin } from './InputWidget';\n\nconst InputIcon = () => (\n  <Shape dataBits={1}>\n    <Pin as=\"div\" value={0} />\n  </Shape>\n);\n\nexport default InputIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './InputIcon';\nimport model from './InputModel';\nimport widget from './InputWidget';\n\nexport default new Component({\n  type: 'Input',\n  name: 'Input pin',\n  description: 'Simple input pin',\n  group: 'Input & output',\n  configurations: [\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n    {\n      name: 'THREE_STATE',\n      type: 'select',\n      default: 'false',\n      label: 'Three state',\n      options: [\n        {\n          label: 'Yes',\n          value: 'true',\n        },\n        {\n          label: 'No',\n          value: 'false',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class InputModel extends BaseModel {\n  initialize(configurations) {\n    this.dataBits = Number(configurations.DATA_BITS);\n    this.threeState = configurations.THREE_STATE === 'true';\n\n    this.addOutputPort('out', { bits: this.dataBits });\n  }\n\n  onSimulationStart() {\n    this.emit({ out: 0 });\n  }\n\n  nextValue(value) {\n    if (value === 'x') return 0;\n    if (value === 0) return 1;\n    return this.threeState ? 'x' : 0;\n  }\n\n  onClick(index) {\n    this.emit({\n      out: this.getOutput().map((v, i) => {\n        if (i === index) return this.nextValue(v);\n        return v;\n      }),\n    });\n  }\n\n  getOutput() {\n    return (\n      this.getPort('out').getValue() || Array(this.dataBits).fill(0)\n    );\n  }\n\n  getBitAt(index) {\n    return this.getOutput()[index];\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n\n  ${props => {\n    if (props.name === 'out') return `right: -5px; top: -5px`;\n    return `left: -5px; bottom: ${props.position - 5}px;`;\n  }}\n`;\n\nconst Wrapper = styled.div`\n  position: relative;\n\n  width: 30px;\n  height: ${props => 15 * props.dataBits}px;\n`;\n\nexport const Shape = ({ selected, dataBits }) => {\n  const height = dataBits * 15;\n\n  return (\n    <svg\n      viewBox={`0 0 30 ${height}`}\n      height={height}\n      width=\"30\"\n      fill=\"none\"\n      stroke={\n        selected ? 'var(--link-selected)' : 'var(--link-16-bit-color)'\n      }\n      strokeLinecap=\"butt\"\n      strokeWidth=\"2\"\n    >\n      <path strokeWidth=\"4\" d={`M30,0 L15,15 L15,${height}`} />\n      {[...new Array(dataBits)]\n        .map((_, index) => index)\n        .map(index => {\n          const bitHeight = height - index * 15;\n\n          return (\n            <path\n              key={index}\n              d={`M15,${bitHeight} L0,${bitHeight}`}\n            />\n          );\n        })}\n    </svg>\n  );\n};\n\nconst JoinerWidget = props => {\n  const { model } = props;\n  const {\n    options: { selected },\n    configurations: { DATA_BITS },\n  } = model;\n\n  const dataBits = Number(DATA_BITS);\n  const inputPorts = Object.values(model.getInputPorts());\n\n  return (\n    <Wrapper dataBits={dataBits}>\n      {inputPorts.map((port, i) => (\n        <PositionedPort\n          key={port.getName()}\n          name={port.getName()}\n          position={i * 15}\n        />\n      ))}\n      <PositionedPort name=\"out\" />\n      <Shape selected={selected} dataBits={dataBits} />\n    </Wrapper>\n  );\n};\n\nexport default JoinerWidget;\n","import React from 'react';\n\nimport { Shape } from './JoinerWidget';\n\nconst JoinerIcon = () => <Shape dataBits={2} />;\n\nexport default JoinerIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './JoinerIcon';\nimport model from './JoinerModel';\nimport widget from './JoinerWidget';\n\nexport default new Component({\n  type: 'Joiner',\n  name: 'Joiner',\n  description: 'Joins N 1 bit wires into one N bit wire',\n  group: 'Wiring',\n  configurations: [\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '2',\n      label: 'Output data bits',\n      options: [\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class JoinerModel extends BaseModel {\n  initialize(configurations) {\n    this.bits = Number(configurations.DATA_BITS);\n\n    for (let i = 0; i < this.bits; i += 1) {\n      this.addInputPort(`in${i}`);\n    }\n    this.addOutputPort('out', { bits: this.bits });\n  }\n\n  step(input) {\n    return {\n      out: Object.values(input)\n        .map(value => value.asArray(1)[0])\n        .map((_, index, arr) => arr[arr.length - index - 1]),\n    };\n  }\n\n  stepFloating(input) {\n    return this.step(input);\n  }\n\n  stepError(input) {\n    return this.step(input);\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  left: -7px;\n  top: 50%;\n  transform: translateY(-50%);\n`;\n\nexport const Shape = styled.div`\n  position: relative;\n\n  width: 30px;\n  height: 30px;\n\n  background: ${props =>\n    `${props.color}${props.selected ? '80' : 'ff'}`};\n  box-shadow: 0 0 ${props => (props.isActive ? 15 : 0)}px\n    ${props => props.color};\n  border: 2px solid\n    ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  border-radius: 15px;\n`;\n\nconst LedWidget = props => {\n  const { model } = props;\n  const {\n    options: { selected },\n  } = model;\n\n  return (\n    <Shape\n      selected={selected}\n      color={model.getColor()}\n      isActive={model.isActive()}\n      data-testid=\"shape\"\n    >\n      <PositionedPort name=\"in\" />\n    </Shape>\n  );\n};\n\nexport default LedWidget;\n","import React from 'react';\n\nimport { Shape } from './LedWidget';\n\nconst LedIcon = () => <Shape color=\"#00ff00\" />;\n\nexport default LedIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './LedIcon';\nimport model from './LedModel';\nimport widget from './LedWidget';\n\nexport default new Component({\n  type: 'Led',\n  name: 'LED',\n  description: 'Simple LED component',\n  group: 'Input & output',\n  configurations: [\n    {\n      name: 'ACTIVE_WHEN',\n      type: 'select',\n      default: 'HIGH',\n      label: 'Active when',\n      options: [\n        {\n          label: 'High',\n          value: 'HIGH',\n        },\n        {\n          label: 'Low',\n          value: 'LOW',\n        },\n      ],\n    },\n    {\n      name: 'ON_COLOR',\n      type: 'select',\n      default: '#00ff00',\n      label: 'On color',\n      options: [\n        {\n          label: 'Red',\n          value: '#ff0000',\n        },\n        {\n          label: 'Green',\n          value: '#00ff00',\n        },\n        {\n          label: 'Blue',\n          value: '#0000ff',\n        },\n        {\n          label: 'White',\n          value: '#ffffff',\n        },\n        {\n          label: 'Black',\n          value: '#000000',\n        },\n      ],\n    },\n    {\n      name: 'OFF_COLOR',\n      type: 'select',\n      default: '#000000',\n      label: 'Off color',\n      options: [\n        {\n          label: 'Red',\n          value: '#ff0000',\n        },\n        {\n          label: 'Green',\n          value: '#00ff00',\n        },\n        {\n          label: 'Blue',\n          value: '#0000ff',\n        },\n        {\n          label: 'White',\n          value: '#ffffff',\n        },\n        {\n          label: 'Black',\n          value: '#000000',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class LedModel extends BaseModel {\n  initialize(configurations) {\n    this.activeWhen = configurations.ACTIVE_WHEN;\n    this.colors = {\n      on: configurations.ON_COLOR,\n      off: configurations.OFF_COLOR,\n    };\n\n    this.addInputPort('in');\n  }\n\n  getInput() {\n    const value = this.getPort('in').getValue();\n\n    if (!value) return 0;\n    return value[0];\n  }\n\n  isActive() {\n    const input = this.getInput();\n\n    if (this.activeWhen === 'HIGH') {\n      if (input === 0) return false;\n      return true;\n    }\n\n    if (input === 0) return true;\n    return false;\n  }\n\n  getColor() {\n    if (this.isActive()) return this.colors.on;\n    return this.colors.off;\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  ${props => {\n    if (props.name === 'out') return 'right: -5px;';\n    if (props.name === 'selection') return 'left: 10px;';\n    return 'left: -5px;';\n  }};\n  ${props => {\n    if (props.name === 'selection') return 'bottom: -5px;';\n    return `top: ${(props.position || 0) - 5}px;`;\n  }};\n`;\n\nconst Wrapper = styled.div`\n  position: relative;\n\n  width: 30px;\n  height: ${props => (props.inputNumber + 2) * 15}px;\n`;\n\nexport const Shape = ({ selected, inputNumber, icon }) => {\n  const height = (inputNumber + 2) * 15;\n\n  return (\n    <svg\n      viewBox={`0 0 30 ${height}`}\n      height={icon ? 30 : height}\n      width={icon ? 15 : 30}\n      fill={\n        selected ? 'var(--body-selected)' : 'var(--body-unselected)'\n      }\n      stroke={\n        selected ? 'var(--link-selected)' : 'var(--link-16-bit-color)'\n      }\n      strokeLinecap=\"round\"\n      strokeWidth=\"2\"\n    >\n      <path d={`M0,0 L0,${height} L30,${height - 15} L30,15 Z`} />\n      <path d={`M15,${height - 7.5} L15,${height}`} />\n    </svg>\n  );\n};\n\nconst MuxWidget = props => {\n  const { model } = props;\n  const {\n    options: { selected },\n  } = model;\n\n  const inputPorts = Object.values(model.getInputPorts());\n  const inputNumber = inputPorts.length;\n\n  return (\n    <Wrapper inputNumber={inputNumber}>\n      {inputPorts.map((port, i) => (\n        <PositionedPort\n          key={port.getName()}\n          name={port.getName()}\n          position={(i + 1) * 15}\n        />\n      ))}\n      <PositionedPort\n        name=\"out\"\n        position={((inputNumber + 1) * 15) / 2}\n      />\n      <Shape selected={selected} inputNumber={inputNumber} />\n    </Wrapper>\n  );\n};\n\nexport default MuxWidget;\n","import React from 'react';\n\nimport { Shape } from './MuxWidget';\n\nconst MuxIcon = () => <Shape dataBits={1} inputNumber={2} icon />;\n\nexport default MuxIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './MuxIcon';\nimport model from './MuxModel';\nimport widget from './MuxWidget';\n\nexport default new Component({\n  type: 'Mux',\n  name: 'Mux',\n  description: 'Multiplexer',\n  group: 'Plexers',\n  configurations: [\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bits',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n    {\n      name: 'INPUT_NUMBER',\n      type: 'select',\n      default: '2',\n      label: 'Number of inputs',\n      options: [\n        {\n          label: '2',\n          value: '2',\n        },\n        {\n          label: '4',\n          value: '4',\n        },\n        {\n          label: '16',\n          value: '16',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class MuxModel extends BaseModel {\n  initialize(configurations) {\n    const DATA_BITS = Number(configurations.DATA_BITS);\n    const INPUT_NUMBER = Number(configurations.INPUT_NUMBER);\n\n    for (let i = 0; i < INPUT_NUMBER; i += 1) {\n      this.addInputPort(`in${i}`, { bits: DATA_BITS });\n    }\n\n    this.addInputPort('selection', { bits: Math.log2(INPUT_NUMBER) });\n    this.addOutputPort('out', { bits: DATA_BITS });\n  }\n\n  step(input) {\n    return { out: input[`in${input.selection}`] };\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nimport { PortExtension, distributePorts } from '../portExtendUtils';\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 105px;\n  height: 90px;\n\n  transition: 100ms linear;\n  svg {\n    fill: ${props =>\n      props.selected\n        ? 'var(--body-selected)'\n        : 'var(--body-unselected)'};\n    stroke: ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  }\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n\n  ${props => {\n    if (props.name === 'out') return '';\n    return `top: ${props.position * 15 - 5}px;`;\n  }}\n\n  ${props => {\n    if (props.name === 'out') return 'right: -5px';\n    return 'left: -5px';\n  }};\n`;\n\nexport const Shape = ({ size = 90 }) => (\n  <svg\n    height={size}\n    width={size + 15}\n    viewBox=\"0 0 27.781249 23.812501\"\n    fill=\"var(--body-unselected)\"\n    stroke=\"var(--border-unselected)\"\n    strokeWidth=\"var(--border-width)\"\n  >\n    <g transform=\"scale(0.26458333)\">\n      <path d=\"m 2,2 v 43 a 42.999999,42.999999 0 0 0 0,0.271484 V 88 H 45 A 42.999999,42.999999 0 0 0 88,45 42.999999,42.999999 0 0 0 45,2 h -0.271484 z\" />\n      <circle r=\"5.72056\" cy=\"45\" cx=\"94.27944\" />\n    </g>\n  </svg>\n);\n\nconst NandWidget = props => {\n  const { model } = props;\n\n  const inputPorts = Object.values(model.getInputPorts());\n  const portPositions = distributePorts(inputPorts.length);\n\n  return (\n    <Wrapper selected={model.isSelected()}>\n      <PortExtension\n        selected={model.isSelected()}\n        portPositions={portPositions}\n      />\n      {inputPorts.map((port, i) => (\n        <PositionedPort\n          key={port.getName()}\n          name={port.getName()}\n          position={portPositions[i]}\n        />\n      ))}\n      <PositionedPort name=\"out\" />\n      <Shape />\n    </Wrapper>\n  );\n};\n\nexport default NandWidget;\n","import React from 'react';\n\nimport { Shape } from './NandWidget';\n\nconst NandIcon = () => <Shape size={30} />;\n\nexport default NandIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './NandIcon';\nimport model from './NandModel';\nimport widget from './NandWidget';\n\nexport default new Component({\n  type: 'Nand',\n  name: 'Nand',\n  description: 'Logic \"not and\" gate',\n  group: 'Logic gates',\n  configurations: [\n    {\n      name: 'INPUT_PORTS_NUMBER',\n      type: 'number',\n      default: 2,\n      label: 'Number of input ports',\n      min: 2,\n      max: 16,\n      validate(value) {\n        if (value < this.min)\n          return `Minimum input ports is ${this.min}`;\n        if (value > this.max)\n          return `Maximum input ports is ${this.max}`;\n        return null;\n      },\n    },\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class NandModel extends BaseModel {\n  initialize(configurations) {\n    const INPUT_PORTS_NUMBER = Number(\n      configurations.INPUT_PORTS_NUMBER,\n    );\n    this.dataBits = Number(configurations.DATA_BITS);\n\n    for (let i = 0; i < INPUT_PORTS_NUMBER; i += 1) {\n      this.addInputPort(`in${i}`, { bits: this.dataBits });\n    }\n    this.addOutputPort('out', { bits: this.dataBits });\n  }\n\n  executeBit(bits) {\n    if (bits.some(bit => bit === 0)) return 1;\n    if (bits.every(bit => bit === 1)) return 0;\n    return 'e';\n  }\n\n  step(input) {\n    return {\n      out: Object.values(input)\n        .map(value => value.asArray(this.dataBits))\n        .transpose()\n        .map(this.executeBit),\n    };\n  }\n\n  stepFloating(input) {\n    return this.step(input);\n  }\n\n  stepError(input) {\n    return this.step(input);\n  }\n}\n","import React, { Fragment } from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nimport { PortExtension, distributePorts } from '../portExtendUtils';\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 105px;\n  height: 90px;\n\n  transition: 100ms linear;\n  svg {\n    fill: ${props =>\n      props.selected\n        ? 'var(--body-selected)'\n        : 'var(--body-unselected)'};\n    stroke: ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  }\n`;\n\nconst PortExtensionConnector = styled.div`\n  position: absolute;\n  z-index: -1;\n\n  background: ${props =>\n    props.selected\n      ? 'var(--border-selected)'\n      : 'var(--border-unselected)'};\n\n  height: 2px;\n  width: 15px;\n\n  top: ${props => props.position * 15 - 1}px;\n  left: -2px;\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n\n  ${props => {\n    if (props.name === 'out') return '';\n    return `top: ${props.position * 15 - 5}px;`;\n  }}\n\n  ${props => {\n    if (props.name === 'out') return 'right: -5px';\n    return 'left: -5px';\n  }};\n`;\n\nexport const Shape = ({ size = 90, portPositions = [] }) => (\n  <svg\n    height={size}\n    width={size + 15}\n    viewBox=\"0 0 27.781249 23.812501\"\n    fill=\"var(--body-unselected)\"\n    stroke=\"var(--border-unselected)\"\n    strokeWidth=\"var(--border-width)\"\n  >\n    <g transform=\"scale(0.26458333)\">\n      <path d=\"m 12.810547,2 c 5.50133,9.517685 8.779279,25.095781 8.779297,41.722656 C 21.590006,62.052878 17.611871,78.966668 11.175781,88 H 45 C 68.748245,88.000001 88.005576,45.650843 88,45 87.994195,44.322314 68.748245,1.9999989 45,2 h -0.271484 z\" />\n      <circle r=\"5.72056\" cy=\"45\" cx=\"94.27944\" />\n    </g>\n    <g strokeWidth={0.5}>\n      {portPositions.includes(1) && (\n        <path d=\"M 4.8860442,4.1010415 H 0.38245295\" />\n      )}\n      {portPositions.includes(2) && (\n        <path d=\"M 5.3419835,8.0697915 H 0.38232292\" />\n      )}\n      {portPositions.includes(3) && (\n        <path d=\"M 5.5975927,12.038541 H 0.38232292\" />\n      )}\n      {portPositions.includes(4) && (\n        <path d=\"M 5.2516863,16.007291 H 0.38232292\" />\n      )}\n      {portPositions.includes(5) && (\n        <path d=\"M 4.3916654,19.976041 H 0.38232292\" />\n      )}\n    </g>\n  </svg>\n);\n\nconst NorWidget = props => {\n  const { model } = props;\n\n  const inputPorts = Object.values(model.getInputPorts());\n  const portPositions = distributePorts(inputPorts.length);\n\n  return (\n    <Wrapper selected={model.options.selected}>\n      <PortExtension\n        selected={model.isSelected()}\n        portPositions={portPositions}\n        offsetX={12}\n      />\n      {inputPorts.map((port, i) => (\n        <Fragment key={port.getName()}>\n          <PositionedPort\n            name={port.getName()}\n            position={portPositions[i]}\n          />\n          {(portPositions[i] < 1 || portPositions[i] > 5) && (\n            <PortExtensionConnector\n              selected={model.isSelected()}\n              position={portPositions[i]}\n            />\n          )}\n        </Fragment>\n      ))}\n      <PositionedPort name=\"out\" />\n      <Shape portPositions={portPositions} />\n    </Wrapper>\n  );\n};\n\nexport default NorWidget;\n","import React from 'react';\n\nimport { Shape } from './NorWidget';\n\nconst NorIcon = () => <Shape size={30} />;\n\nexport default NorIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './NorIcon';\nimport model from './NorModel';\nimport widget from './NorWidget';\n\nexport default new Component({\n  type: 'Nor',\n  name: 'Nor',\n  description: 'Logic \"not or\" gate',\n  group: 'Logic gates',\n  configurations: [\n    {\n      name: 'INPUT_PORTS_NUMBER',\n      type: 'number',\n      default: 2,\n      label: 'Number of input ports',\n      min: 2,\n      max: 16,\n      validate(value) {\n        if (value < this.min)\n          return `Minimum input ports is ${this.min}`;\n        if (value > this.max)\n          return `Maximum input ports is ${this.max}`;\n        return null;\n      },\n    },\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class NorModel extends BaseModel {\n  initialize(configurations) {\n    const INPUT_PORTS_NUMBER = Number(\n      configurations.INPUT_PORTS_NUMBER,\n    );\n    this.dataBits = Number(configurations.DATA_BITS);\n\n    for (let i = 0; i < INPUT_PORTS_NUMBER; i += 1) {\n      this.addInputPort(`in${i}`, { bits: this.dataBits });\n    }\n    this.addOutputPort('out', { bits: this.dataBits });\n  }\n\n  executeBit(bits) {\n    if (bits.every(bit => bit === 0)) return 1;\n    if (bits.some(bit => bit === 1)) return 0;\n    return 'e';\n  }\n\n  step(input) {\n    return {\n      out: Object.values(input)\n        .map(value => value.asArray(this.dataBits))\n        .transpose()\n        .map(this.executeBit),\n    };\n  }\n\n  stepFloating(input) {\n    return this.step(input);\n  }\n\n  stepError(input) {\n    return this.step(input);\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 45px;\n  height: 30px;\n\n  transition: 100ms linear;\n  svg {\n    fill: ${props =>\n      props.selected\n        ? 'var(--body-selected)'\n        : 'var(--body-unselected)'};\n    stroke: ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  }\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  ${props => {\n    if (props.name === 'in') return 'left: -5px;';\n    if (props.name === 'out') return 'right: -5px;';\n    return '';\n  }}\n`;\n\nexport const Shape = ({ size = 30 }) => (\n  <svg\n    height={size}\n    width={size + 15}\n    viewBox=\"11 0 45.0 45.0\"\n    fill=\"var(--body-unselected)\"\n    stroke=\"var(--border-unselected)\"\n    strokeWidth=\"var(--border-width)\"\n  >\n    <g>\n      <path d=\"M 1.0207771,1.6492624 V 43.357967 L 42.724327,22.649262 Z\" />\n      <circle r=\"8\" cy=\"22\" cx=\"51\" />\n    </g>\n  </svg>\n);\n\nconst NotWidget = props => {\n  const { model } = props;\n  const {\n    options: { selected },\n  } = model;\n\n  return (\n    <Wrapper selected={selected}>\n      <PositionedPort name=\"in\" />\n      <PositionedPort name=\"out\" />\n      <Shape />\n    </Wrapper>\n  );\n};\n\nexport default NotWidget;\n","import React from 'react';\n\nimport { Shape } from './NotWidget';\n\nconst NotIcon = () => <Shape size={30} />;\n\nexport default NotIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './NotIcon';\nimport model from './NotModel';\nimport widget from './NotWidget';\n\nexport default new Component({\n  type: 'Not',\n  name: 'Not',\n  description: 'Negation component',\n  group: 'Logic gates',\n  configurations: [\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class NotModel extends BaseModel {\n  initialize(configurations) {\n    this.dataBits = Number(configurations.DATA_BITS);\n\n    this.addInputPort('in', { bits: this.dataBits });\n    this.addOutputPort('out', { bits: this.dataBits });\n  }\n\n  step(input) {\n    return {\n      out: input.in.asArray(this.dataBits).map(bit => {\n        if (bit === 1) return 0;\n        return 1;\n      }),\n    };\n  }\n}\n","import React, { Fragment } from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nimport { PortExtension, distributePorts } from '../portExtendUtils';\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 90px;\n  height: 90px;\n\n  transition: 100ms linear;\n  svg {\n    fill: ${props =>\n      props.selected\n        ? 'var(--body-selected)'\n        : 'var(--body-unselected)'};\n    stroke: ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  }\n`;\n\nconst PortExtensionConnector = styled.div`\n  position: absolute;\n  z-index: -1;\n\n  background: ${props =>\n    props.selected\n      ? 'var(--border-selected)'\n      : 'var(--border-unselected)'};\n\n  height: 2px;\n  width: 15px;\n\n  top: ${props => props.position * 15 - 1}px;\n  left: -2px;\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n\n  ${props => {\n    if (props.name === 'out') return '';\n    return `top: ${props.position * 15 - 5}px;`;\n  }}\n\n  ${props => {\n    if (props.name === 'out') return 'right: -5px';\n    return 'left: -5px';\n  }};\n`;\n\nexport const Shape = ({ size = 90, portPositions = [] }) => (\n  <svg\n    height={size}\n    width={size}\n    viewBox=\"0 0 23.812499 23.812501\"\n    fill=\"var(--body-unselected)\"\n    stroke=\"var(--border-unselected)\"\n    strokeWidth=\"var(--border-width)\"\n  >\n    <g>\n      <path\n        d=\"m 12.810547,2 c 5.50133,9.517685 8.779279,25.095781 8.779297,41.722656 C 21.590006,62.052878 17.611871,78.966668 11.175781,88 H 45 C 68.748245,88.000001 88.005576,45.650843 88,45 87.994195,44.322314 68.748245,1.9999989 45,2 h -0.271484 z\"\n        transform=\"scale(0.26458333)\"\n      />\n    </g>\n    <g strokeWidth={0.5}>\n      {portPositions.includes(1) && (\n        <path d=\"M 4.8860442,4.1010415 H 0.38245295\" />\n      )}\n      {portPositions.includes(2) && (\n        <path d=\"M 5.3419835,8.0697915 H 0.38232292\" />\n      )}\n      {portPositions.includes(3) && (\n        <path d=\"M 5.5975927,12.038541 H 0.38232292\" />\n      )}\n      {portPositions.includes(4) && (\n        <path d=\"M 5.2516863,16.007291 H 0.38232292\" />\n      )}\n      {portPositions.includes(5) && (\n        <path d=\"M 4.3916654,19.976041 H 0.38232292\" />\n      )}\n    </g>\n  </svg>\n);\n\nconst OrWidget = props => {\n  const { model } = props;\n\n  const inputPorts = Object.values(model.getInputPorts());\n  const portPositions = distributePorts(inputPorts.length);\n\n  return (\n    <Wrapper selected={model.options.selected}>\n      <PortExtension\n        selected={model.isSelected()}\n        portPositions={portPositions}\n        offsetX={12}\n      />\n      {inputPorts.map((port, i) => (\n        <Fragment key={port.getName()}>\n          <PositionedPort\n            name={port.getName()}\n            position={portPositions[i]}\n          />\n          {(portPositions[i] < 1 || portPositions[i] > 5) && (\n            <PortExtensionConnector\n              selected={model.isSelected()}\n              position={portPositions[i]}\n            />\n          )}\n        </Fragment>\n      ))}\n      <PositionedPort name=\"out\" />\n      <Shape portPositions={portPositions} />\n    </Wrapper>\n  );\n};\n\nexport default OrWidget;\n","import React from 'react';\n\nimport { Shape } from './OrWidget';\n\nconst OrIcon = () => <Shape size={30} />;\n\nexport default OrIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './OrIcon';\nimport model from './OrModel';\nimport widget from './OrWidget';\n\nexport default new Component({\n  type: 'Or',\n  name: 'Or',\n  description: 'Logic \"or\" gate',\n  group: 'Logic gates',\n  configurations: [\n    {\n      name: 'INPUT_PORTS_NUMBER',\n      type: 'number',\n      default: 2,\n      label: 'Number of input ports',\n      min: 2,\n      max: 16,\n      validate(value) {\n        if (value < this.min)\n          return `Minimum input ports is ${this.min}`;\n        if (value > this.max)\n          return `Maximum input ports is ${this.max}`;\n        return null;\n      },\n    },\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class OrModel extends BaseModel {\n  initialize(configurations) {\n    const INPUT_PORTS_NUMBER = Number(\n      configurations.INPUT_PORTS_NUMBER,\n    );\n    this.dataBits = Number(configurations.DATA_BITS);\n\n    for (let i = 0; i < INPUT_PORTS_NUMBER; i += 1) {\n      this.addInputPort(`in${i}`, { bits: this.dataBits });\n    }\n    this.addOutputPort('out', { bits: this.dataBits });\n  }\n\n  executeBit(bits) {\n    if (bits.every(bit => bit === 0)) return 0;\n    if (bits.some(bit => bit === 1)) return 1;\n    return 'e';\n  }\n\n  step(input) {\n    return {\n      out: Object.values(input)\n        .map(value => value.asArray(this.dataBits))\n        .transpose()\n        .map(this.executeBit),\n    };\n  }\n\n  stepFloating(input) {\n    return this.step(input);\n  }\n\n  stepError(input) {\n    return this.step(input);\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst SHAPE_SIZES = {\n  1: { width: 30, height: 30 },\n  2: { width: 60, height: 30 },\n  4: { width: 120, height: 30 },\n  8: { width: 120, height: 60 },\n  16: { width: 240, height: 60 },\n};\n\nconst PIN_BACKGROUND = {\n  0: 'var(--value-off)',\n  1: 'var(--value-on)',\n  x: 'var(--value-floating)',\n  e: 'var(--value-error)',\n};\n\nconst PIN_BORDER = {\n  0: 'var(--value-on)',\n  1: 'var(--value-off)',\n  x: 'black',\n  e: 'black',\n};\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  left: -7px;\n  top: 50%;\n  transform: translateY(-50%);\n`;\n\nexport const Shape = styled.div`\n  position: relative;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: ${props => {\n    if (props.format === 'BITS')\n      return SHAPE_SIZES[props.dataBits].width;\n\n    return SHAPE_SIZES[4].width;\n  }}px;\n  height: ${props => {\n    if (props.format === 'BITS')\n      return SHAPE_SIZES[props.dataBits].height;\n\n    return SHAPE_SIZES[4].height;\n  }}px;\n\n  background: ${props =>\n    props.selected\n      ? 'var(--body-selected)'\n      : 'var(--body-unselected)'};\n  border: 2px solid\n    ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  border-radius: 20px;\n`;\n\nexport const PinContainer = styled.span`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  align-items: center;\n  font-family: monospace;\n\n  max-width: 215px;\n`;\n\nexport const Pin = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 20px;\n  height: 20px;\n  margin: 2px;\n\n  background: ${props => PIN_BACKGROUND[props.value]};\n  border: 2px solid ${props => PIN_BORDER[props.value]};\n  border-radius: 100%;\n\n  color: ${props => (props.value === 1 ? 'black' : 'white')};\n  font-family: monospace;\n\n  transition: 100ms linear;\n`;\n\nconst ErrorMessage = styled.span`\n  color: var(--value-error);\n  font-weight: bold;\n  font-family: monospace;\n`;\n\nconst FloatingMessage = styled.span`\n  color: var(--value-floating);\n  font-weight: bold;\n  font-family: monospace;\n`;\n\nconst mapBits = model => {\n  const {\n    configurations: { DATA_BITS },\n  } = model;\n  const dataBits = Number(DATA_BITS);\n\n  return [...new Array(dataBits)].map((_, index) => {\n    const value = model.getBitAt(index);\n\n    return (\n      <Pin\n        // eslint-disable-next-line react/no-array-index-key\n        key={index}\n        value={value}\n      >\n        {value}\n      </Pin>\n    );\n  });\n};\n\nconst showAsNumber = (input, format) => {\n  const number = input.asNumber();\n  if (number === 'e') return <ErrorMessage>(error)</ErrorMessage>;\n  if (number === 'x')\n    return <FloatingMessage>(floating)</FloatingMessage>;\n\n  if (format === 'DECIMAL') return number;\n  if (format === 'HEXADECIMAL')\n    return `0x${number.toString(16).padStart(4, '0')}`;\n  return '';\n};\n\nconst OutputWidget = props => {\n  const { model } = props;\n  const {\n    options: { selected },\n    configurations: { OUTPUT_FORMAT, DATA_BITS },\n  } = model;\n\n  const dataBits = Number(DATA_BITS);\n\n  return (\n    <Shape\n      selected={selected}\n      format={OUTPUT_FORMAT}\n      dataBits={dataBits}\n    >\n      <PinContainer data-testid=\"pin-container\">\n        {OUTPUT_FORMAT === 'BITS'\n          ? mapBits(model)\n          : showAsNumber(model.getInput(), OUTPUT_FORMAT)}\n      </PinContainer>\n      <PositionedPort name=\"in\" />\n    </Shape>\n  );\n};\n\nexport default OutputWidget;\n","import React from 'react';\n\nimport { Shape, Pin } from './OutputWidget';\n\nconst OutputIcon = () => (\n  <Shape dataBits={1} format=\"BITS\">\n    <Pin as=\"div\" value={0} />\n  </Shape>\n);\n\nexport default OutputIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './OutputIcon';\nimport model from './OutputModel';\nimport widget from './OutputWidget';\n\nexport default new Component({\n  type: 'Output',\n  name: 'Output pin',\n  description: 'Simple output pin',\n  group: 'Input & output',\n  configurations: [\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n    {\n      name: 'OUTPUT_FORMAT',\n      type: 'select',\n      default: 'BITS',\n      label: 'Output format',\n      options: [\n        {\n          label: 'Bit by bit',\n          value: 'BITS',\n        },\n        {\n          label: 'Decimal number',\n          value: 'DECIMAL',\n        },\n        {\n          label: 'Hexadecimal number',\n          value: 'HEXADECIMAL',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class OutputModel extends BaseModel {\n  initialize(configurations) {\n    this.dataBits = Number(configurations.DATA_BITS);\n\n    this.addInputPort('in', { bits: this.dataBits });\n  }\n\n  getInput() {\n    return (\n      this.getPort('in').getValue() ||\n      new Array(this.dataBits).fill(0)\n    );\n  }\n\n  getBitAt(index) {\n    return this.getInput()[index];\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  left: 50%;\n  bottom: -5px;\n  transform: translateX(-50%);\n`;\n\nconst Wrapper = styled.div`\n  position: relative;\n\n  width: 30px;\n  height: 30px;\n`;\n\nexport const Shape = ({ selected, dataBits = 1 }) => {\n  return (\n    <svg\n      viewBox=\"0 0 30 30\"\n      width=\"30\"\n      height=\"30\"\n      fill=\"none\"\n      stroke={selected ? 'var(--value-5)' : 'var(--value-10)'}\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <polyline\n        points=\"15 15 15 30\"\n        strokeWidth={`var(--link-${dataBits}-bit-width)`}\n        strokeLinecap=\"butt\"\n      />\n      <polyline\n        points=\"7 15 15 0 23 15 7 15\"\n        fill=\"var(--value-2)\"\n        fillOpacity={\n          selected\n            ? 'var(--unselected-opacity)'\n            : 'var(--selected-opacity)'\n        }\n      />\n    </svg>\n  );\n};\n\nconst PowerWidget = props => {\n  const { model } = props;\n  const {\n    options: { selected },\n  } = model;\n\n  return (\n    <Wrapper>\n      <Shape selected={selected} dataBits={model.dataBits} />\n      <PositionedPort name=\"out\" />\n    </Wrapper>\n  );\n};\n\nexport default PowerWidget;\n","import React from 'react';\n\nimport { Shape } from './PowerWidget';\n\nconst PowerIcon = () => <Shape />;\n\nexport default PowerIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './PowerIcon';\nimport model from './PowerModel';\nimport widget from './PowerWidget';\n\nexport default new Component({\n  type: 'Power',\n  name: 'Power',\n  description: 'Power (VCC) component',\n  group: 'Wiring',\n  configurations: [\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class PowerModel extends BaseModel {\n  initialize(configurations) {\n    this.dataBits = Number(configurations.DATA_BITS);\n\n    this.addOutputPort('out', { bits: this.dataBits });\n  }\n\n  onSimulationStart() {\n    this.emit({ out: 0b1111_1111_1111_1111 });\n  }\n}\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nconst Icon = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 30px;\n  height: 30px;\n  font-size: 10px;\n\n  background: var(--body-unselected);\n  border: 1px solid var(--border-unselected);\n`;\n\nconst RamIcon = () => <Icon>RAM</Icon>;\n\nexport default RamIcon;\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: relative;\n\n  width: 180px;\n  height: 150px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background: ${props =>\n    props.selected\n      ? 'var(--body-selected)'\n      : 'var(--body-unselected)'};\n  border: 1px solid\n    ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n\n  transition: 100ms linear;\n`;\n\nconst Memory = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  overflow: hidden;\n  background: white;\n  border: 2px solid #c9c9c9;\n\n  width: 80%;\n  height: 112px;\n  font-size: 10px;\n`;\n\nconst Cell = styled.div`\n  display: flex;\n  border-bottom: 1px solid #c9c9c9;\n  padding: 0 4px;\n`;\n\nconst ActiveAddress = styled.div`\n  width: 0;\n  height: 0;\n  border-style: solid;\n  border-width: 4px 0 4px 8px;\n  border-color: ${({ isSelected }) =>\n    `transparent transparent transparent ${\n      isSelected ? '#f44336' : 'transparent'\n    }`};\n  margin: auto 4px auto -4px;\n`;\n\nconst AddressValueContainer = styled.div`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Address = styled.span`\n  margin-right: 4px;\n  padding: 1px 4px;\n  height: fit-content;\n\n  font-family: monospace;\n  font-size: 8px;\n  color: white;\n\n  background: #2642a0;\n  border-radius: 2px;\n`;\n\nconst Value = styled.span`\n  padding: 4px;\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n\n  ${props => {\n    if (props.name === 'clock') return 'bottom: -5px';\n    if (props.name === 'load')\n      return 'bottom: -5px; right: calc(50% - 20px)';\n    if (props.name === 'clear')\n      return 'bottom: -5px; right: calc(50% - 35px)';\n    if (props.name === 'select')\n      return 'bottom: -5px; right: calc(50% - 50px)';\n    if (props.name === 'address') return 'left: -5px';\n    if (props.name === 'data') return 'right: -5px';\n    return '';\n  }}\n`;\n\nconst getMemoryDisplayRange = (memory, address) => {\n  if (address <= 1) return [0, 5];\n  if (address >= memory.length - 2)\n    return [memory.length - 5, memory.length];\n  return [address - 2, address + 3];\n};\n\nconst RamWidget = props => {\n  const { model } = props;\n  const memory = model.getMemory();\n  const selectedAddress = model.getAddress();\n  const range = getMemoryDisplayRange(memory, selectedAddress);\n\n  return (\n    <Wrapper selected={model.isSelected()}>\n      <PositionedPort name=\"clock\" />\n      <PositionedPort name=\"load\" />\n      <PositionedPort name=\"address\" />\n      <PositionedPort name=\"data\" />\n      <PositionedPort name=\"clear\" />\n      <PositionedPort name=\"select\" />\n\n      <Memory>\n        {memory.slice(...range).map((value, index) => {\n          const address = index + range[0];\n          const formattedAddress = `0x${address\n            .toString(16)\n            .padStart(2, '0')}`;\n\n          return (\n            <Cell key={formattedAddress}>\n              <ActiveAddress\n                isSelected={address === selectedAddress}\n              />\n              <AddressValueContainer>\n                <Address>{formattedAddress}</Address>\n                <Value isSelected>{value}</Value>\n              </AddressValueContainer>\n            </Cell>\n          );\n        })}\n      </Memory>\n    </Wrapper>\n  );\n};\n\nexport default RamWidget;\n","import { Component } from '@logossim/core';\n\nimport icon from './RamIcon';\nimport model from './RamModel';\nimport widget from './RamWidget';\n\nexport default new Component({\n  type: 'Ram',\n  name: 'RAM',\n  description: 'Random access memory',\n  group: 'Memory',\n  configurations: [\n    {\n      name: 'DATA_WIDTH',\n      type: 'select',\n      default: '1',\n      label: 'Data width',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n    {\n      name: 'ADDRESS_WIDTH',\n      type: 'select',\n      default: '1',\n      label: 'Address width',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n      ],\n    },\n    {\n      name: 'CONTENT',\n      type: 'binary',\n      label: 'Initial content',\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class RamModel extends BaseModel {\n  initialize(configurations) {\n    this.dataWidth = Number(configurations.DATA_WIDTH);\n    this.addressWidth = Number(configurations.ADDRESS_WIDTH);\n    this.memory = (configurations.CONTENT || '').parseBinary(\n      this.dataWidth,\n      2 ** this.addressWidth,\n    );\n\n    this.addInputPort('clock', { floating: 0 });\n    this.addInputPort('load', { floating: 1 });\n    this.addInputPort('address', {\n      bits: this.addressWidth,\n      floating: 0,\n    });\n    this.addInputPort('clear', { floating: 0 });\n    this.addInputPort('select', { floating: 1 });\n    this.addOutputPort('data', { bits: this.dataWidth });\n  }\n\n  clearMemory() {\n    this.memory = Array(2 ** this.addressWidth).fill(0);\n  }\n\n  getMemory() {\n    return this.memory;\n  }\n\n  getAddress() {\n    if (!this.select) return 0;\n    return (this.currentAddress || 0).asNumber();\n  }\n\n  step(input, meta) {\n    this.currentAddress = input.address;\n    this.select = input.select;\n\n    if (input.clear) this.clearMemory();\n    if (!input.select) return { data: 'x' };\n\n    if (!input.load) {\n      if (meta.clock.risingEdge && !input.clear) {\n        this.memory[input.address] = this.getPort('data')\n          .getWireValue()\n          .asNumber();\n      }\n\n      return { data: 'x' };\n    }\n\n    return {\n      data: this.memory[input.address],\n    };\n  }\n}\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nconst Icon = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 30px;\n  height: 30px;\n  font-size: 10px;\n\n  background: var(--body-unselected);\n  border: 1px solid var(--border-unselected);\n`;\n\nconst RomIcon = () => <Icon>ROM</Icon>;\n\nexport default RomIcon;\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: relative;\n\n  width: 180px;\n  height: 150px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background: ${props =>\n    props.selected\n      ? 'var(--body-selected)'\n      : 'var(--body-unselected)'};\n  border: 1px solid\n    ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n\n  transition: 100ms linear;\n`;\n\nconst Memory = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  overflow: hidden;\n  background: white;\n  border: 2px solid #c9c9c9;\n\n  width: 80%;\n  height: 112px;\n  font-size: 10px;\n`;\n\nconst Cell = styled.div`\n  display: flex;\n  border-bottom: 1px solid #c9c9c9;\n  padding: 0 4px;\n`;\n\nconst ActiveAddress = styled.div`\n  width: 0;\n  height: 0;\n  border-style: solid;\n  border-width: 4px 0 4px 8px;\n  border-color: ${({ isSelected }) =>\n    `transparent transparent transparent ${\n      isSelected ? '#f44336' : 'transparent'\n    }`};\n  margin: auto 4px auto -4px;\n`;\n\nconst AddressValueContainer = styled.div`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Address = styled.span`\n  margin-right: 4px;\n  padding: 1px 4px;\n  height: fit-content;\n\n  font-family: monospace;\n  font-size: 8px;\n  color: white;\n\n  background: #2642a0;\n  border-radius: 2px;\n`;\n\nconst Value = styled.span`\n  padding: 4px;\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n\n  ${props => {\n    if (props.name === 'select')\n      return 'bottom: -5px; right: calc(50% - 50px)';\n    if (props.name === 'address') return 'left: -5px';\n    if (props.name === 'data') return 'right: -5px';\n    return '';\n  }}\n`;\n\nconst getMemoryDisplayRange = (memory, address) => {\n  if (address <= 1) return [0, 5];\n  if (address >= memory.length - 2)\n    return [memory.length - 5, memory.length];\n  return [address - 2, address + 3];\n};\n\nconst RomWidget = props => {\n  const { model } = props;\n  const memory = model.getMemory();\n  const selectedAddress = model.getAddress();\n  const range = getMemoryDisplayRange(memory, selectedAddress);\n\n  return (\n    <Wrapper selected={model.isSelected()}>\n      <PositionedPort name=\"address\" />\n      <PositionedPort name=\"data\" />\n      <PositionedPort name=\"select\" />\n\n      <Memory>\n        {memory.slice(...range).map((value, index) => {\n          const address = index + range[0];\n          const formattedAddress = `0x${address\n            .toString(16)\n            .padStart(2, '0')}`;\n\n          return (\n            <Cell key={formattedAddress}>\n              <ActiveAddress\n                isSelected={address === selectedAddress}\n              />\n              <AddressValueContainer>\n                <Address>{formattedAddress}</Address>\n                <Value isSelected>{value}</Value>\n              </AddressValueContainer>\n            </Cell>\n          );\n        })}\n      </Memory>\n    </Wrapper>\n  );\n};\n\nexport default RomWidget;\n","import { Component } from '@logossim/core';\n\nimport icon from './RomIcon';\nimport model from './RomModel';\nimport widget from './RomWidget';\n\nexport default new Component({\n  type: 'Rom',\n  name: 'ROM',\n  description: 'Read only memory',\n  group: 'Memory',\n  configurations: [\n    {\n      name: 'DATA_WIDTH',\n      type: 'select',\n      default: '1',\n      label: 'Data width',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n    {\n      name: 'ADDRESS_WIDTH',\n      type: 'select',\n      default: '1',\n      label: 'Address width',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n      ],\n    },\n    {\n      name: 'CONTENT',\n      type: 'binary',\n      label: 'Initial content',\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class RomModel extends BaseModel {\n  initialize(configurations) {\n    this.dataWidth = Number(configurations.DATA_WIDTH);\n    this.addressWidth = Number(configurations.ADDRESS_WIDTH);\n    this.memory = (configurations.CONTENT || '').parseBinary(\n      this.dataWidth,\n      2 ** this.addressWidth,\n    );\n\n    this.addInputPort('address', {\n      bits: this.addressWidth,\n      floating: 0,\n    });\n    this.addInputPort('select', { floating: 1 });\n    this.addOutputPort('data', { bits: this.dataWidth });\n  }\n\n  getMemory() {\n    return this.memory;\n  }\n\n  getAddress() {\n    if (!this.select) return 0;\n    return (this.currentAddress || 0).asNumber();\n  }\n\n  step(input) {\n    this.currentAddress = input.address;\n    this.select = input.select;\n\n    if (!input.select) return { data: 'x' };\n\n    return {\n      data: this.memory[input.address],\n    };\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  ${props => (props.name === 'in' ? 'left: -5px' : 'right: -5px')};\n  bottom: ${props => (props.position || 0) - 5}px;\n`;\n\nconst Wrapper = styled.div`\n  position: relative;\n\n  width: 30px;\n  height: ${props => 15 * props.dataBits}px;\n`;\n\nexport const Shape = ({ selected, dataBits }) => {\n  const height = dataBits * 15;\n\n  return (\n    <svg\n      viewBox={`0 0 30 ${height}`}\n      height={height}\n      width=\"30\"\n      fill=\"none\"\n      stroke={\n        selected ? 'var(--link-selected)' : 'var(--link-16-bit-color)'\n      }\n      strokeLinecap=\"butt\"\n      strokeWidth=\"2\"\n    >\n      <path\n        strokeWidth=\"4\"\n        d={`M0,${height} L15,${height - 15} L15,0`}\n      />\n      {[...new Array(dataBits)]\n        .map((_, index) => index + 1)\n        .map(index => {\n          const bitHeight = height - index * 15;\n\n          return (\n            <path\n              key={index}\n              d={`M15,${bitHeight} L30,${bitHeight}`}\n            />\n          );\n        })}\n    </svg>\n  );\n};\n\nconst SplitterWidget = props => {\n  const { model } = props;\n  const {\n    options: { selected },\n    configurations: { DATA_BITS },\n  } = model;\n\n  const dataBits = Number(DATA_BITS);\n  const outputPorts = Object.values(model.getOutputPorts());\n\n  return (\n    <Wrapper dataBits={dataBits}>\n      <PositionedPort name=\"in\" />\n      {outputPorts.map((port, i) => (\n        <PositionedPort\n          key={port.getName()}\n          name={port.getName()}\n          position={(i + 1) * 15}\n        />\n      ))}\n      <Shape selected={selected} dataBits={dataBits} />\n    </Wrapper>\n  );\n};\n\nexport default SplitterWidget;\n","import React from 'react';\n\nimport { Shape } from './SplitterWidget';\n\nconst SplitterIcon = () => <Shape dataBits={2} />;\n\nexport default SplitterIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './SplitterIcon';\nimport model from './SplitterModel';\nimport widget from './SplitterWidget';\n\nexport default new Component({\n  type: 'Splitter',\n  name: 'Splitter',\n  description: 'Split wire with N bits into N 1 bit wires',\n  group: 'Wiring',\n  configurations: [\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '2',\n      label: 'Input data bits',\n      options: [\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class SplitterModel extends BaseModel {\n  initialize(configurations) {\n    this.bits = Number(configurations.DATA_BITS);\n\n    this.addInputPort('in', { bits: this.bits });\n    for (let i = 0; i < this.bits; i += 1) {\n      this.addOutputPort(`out${i}`);\n    }\n  }\n\n  step(input) {\n    return Object.fromEntries(\n      input.in\n        .asArray(this.bits)\n        .map((bit, index, { length }) => [\n          `out${length - index - 1}`,\n          bit,\n        ]),\n    );\n  }\n\n  stepFloating(input) {\n    return this.step(input);\n  }\n\n  stepError(input) {\n    return this.step(input);\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst SEGMENTS = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'dp'];\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  left: ${props => props.position.horizontal}px;\n  top: ${props => props.position.vertical}px;\n  transform: translateY(-50%);\n`;\n\nexport const Wrapper = styled.div`\n  position: relative;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: ${props => (props.icon ? 23 : 75)}px;\n  height: ${props => (props.icon ? 36 : 90)}px;\n\n  background: ${props => `#ffffff${props.selected ? '80' : 'ff'}`};\n  box-shadow: 0 0 ${props => (props.isActive ? 15 : 0)}px\n    ${props => props.color};\n  border: 2px solid\n    ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  border-radius: 5px;\n`;\n\nexport const Shape = ({ segments, selected, icon }) => (\n  <svg\n    width={icon ? 18 : 50}\n    height={icon ? 36 : 90}\n    viewBox={icon ? '-7 0 60 90' : '0 0 50 90'}\n    fill=\"none\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    style={{\n      opacity: selected ? '80' : 'ff',\n      fillOpacity: selected ? '80' : 'ff',\n    }}\n  >\n    {/* A */}\n    <polyline\n      points=\"5 18 11 20 32 20 35 14 9 14\"\n      fill={segments.a}\n      data-testid=\"a\"\n    />\n    {/* B */}\n    <polyline\n      points=\"37 14 41 20 39 42 37 44 33 39 34 20\"\n      fill={segments.b}\n      data-testid=\"b\"\n    />\n    {/* C */}\n    <polyline\n      points=\"37 46 38 47 36 71 31 76 29 69 31 51\"\n      fill={segments.c}\n      data-testid=\"c\"\n    />\n    {/* D */}\n    <polyline\n      points=\"0 72 7 69 27 69 29 76 4 76\"\n      fill={segments.d}\n      data-testid=\"d\"\n    />\n    {/* E */}\n    <polyline\n      points=\"4 46 8 51 7 67 0 70 2 47\"\n      fill={segments.e}\n      data-testid=\"e\"\n    />\n    {/* F */}\n    <polyline\n      points=\"5 20 11 22 10 39 4 44 3 42\"\n      fill={segments.f}\n      data-testid=\"f\"\n    />\n    {/* G */}\n    <polyline\n      points=\"6 45 9 48 31 48 35 45 32 41 11 41\"\n      fill={segments.g}\n      data-testid=\"g\"\n    />\n    {/* DP */}\n    <circle\n      r=\"5\"\n      cx=\"45\"\n      cy=\"71\"\n      fill={segments.dp}\n      data-testid=\"dp\"\n    />\n  </svg>\n);\n\nconst LedWidget = props => {\n  const { model } = props;\n  const {\n    options: { selected },\n  } = model;\n\n  return (\n    <Wrapper selected={selected}>\n      <Shape\n        selected={selected}\n        segments={SEGMENTS.reduce(\n          (prev, segment) => ({\n            ...prev,\n            [segment]: model.getColor(segment),\n          }),\n          {},\n        )}\n      />\n      {SEGMENTS.map(segment => (\n        <PositionedPort\n          key={segment}\n          name={segment}\n          position={model.getPositionForSegment(segment)}\n        />\n      ))}\n    </Wrapper>\n  );\n};\n\nexport default LedWidget;\n","import React from 'react';\n\nimport { Wrapper, Shape } from './SsdWidget';\n\nconst SsdIcon = () => (\n  <Wrapper icon>\n    <Shape\n      icon\n      segments={{\n        a: '#ff0000',\n        b: '#ff0000',\n        c: '#ff0000',\n        d: '#ff0000',\n        e: '#ff0000',\n        f: '#ff0000',\n        g: '#ff0000',\n        dp: '#ff0000',\n      }}\n    />\n  </Wrapper>\n);\n\nexport default SsdIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './SsdIcon';\nimport model from './SsdModel';\nimport widget from './SsdWidget';\n\nexport default new Component({\n  type: 'Ssd',\n  name: 'SSD',\n  description: 'Seven segments display',\n  group: 'Input & output',\n  configurations: [\n    {\n      name: 'ACTIVE_WHEN',\n      type: 'select',\n      default: 'HIGH',\n      label: 'Active when',\n      options: [\n        {\n          label: 'High',\n          value: 'HIGH',\n        },\n        {\n          label: 'Low',\n          value: 'LOW',\n        },\n      ],\n    },\n    {\n      name: 'ON_COLOR',\n      type: 'select',\n      default: '#ff0000',\n      label: 'On color',\n      options: [\n        {\n          label: 'Red',\n          value: '#ff0000',\n        },\n        {\n          label: 'Green',\n          value: '#00ff00',\n        },\n        {\n          label: 'Blue',\n          value: '#0000ff',\n        },\n        {\n          label: 'White',\n          value: '#ffffff',\n        },\n        {\n          label: 'Black',\n          value: '#000000',\n        },\n      ],\n    },\n    {\n      name: 'OFF_COLOR',\n      type: 'select',\n      default: '#00000040',\n      label: 'Off color',\n      options: [\n        {\n          label: 'Red',\n          value: '#ff000040',\n        },\n        {\n          label: 'Green',\n          value: '#00ff0040',\n        },\n        {\n          label: 'Blue',\n          value: '#0000ff40',\n        },\n        {\n          label: 'White',\n          value: '#ffffff40',\n        },\n        {\n          label: 'Black',\n          value: '#00000040',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class LedModel extends BaseModel {\n  initialize(configurations) {\n    this.activeWhen = configurations.ACTIVE_WHEN;\n    this.colors = {\n      on: configurations.ON_COLOR,\n      off: configurations.OFF_COLOR,\n    };\n\n    this.addInputPort('a', { floating: 0, error: 0 });\n    this.addInputPort('b', { floating: 0, error: 0 });\n    this.addInputPort('c', { floating: 0, error: 0 });\n    this.addInputPort('d', { floating: 0, error: 0 });\n    this.addInputPort('e', { floating: 0, error: 0 });\n    this.addInputPort('f', { floating: 0, error: 0 });\n    this.addInputPort('g', { floating: 0, error: 0 });\n    this.addInputPort('dp', { floating: 0, error: 0 });\n  }\n\n  getInput(segment) {\n    return this.getPort(segment).getValue() || [0];\n  }\n\n  isActive(segment) {\n    const input = this.getInput(segment)[0];\n\n    if (this.activeWhen === 'HIGH') {\n      if (input === 0) return false;\n      return true;\n    }\n\n    if (input === 0) return true;\n    return false;\n  }\n\n  getPositionForSegment(segment) {\n    const POSITIONS = {\n      a: {\n        vertical: 1,\n        horizontal: 3,\n      },\n      b: {\n        vertical: 1,\n        horizontal: 4,\n      },\n      c: {\n        vertical: 2,\n        horizontal: 3,\n      },\n      d: {\n        vertical: 2,\n        horizontal: 2,\n      },\n      e: {\n        vertical: 2,\n        horizontal: 1,\n      },\n      f: {\n        vertical: 1,\n        horizontal: 2,\n      },\n      g: {\n        vertical: 1,\n        horizontal: 1,\n      },\n      dp: {\n        vertical: 2,\n        horizontal: 4,\n      },\n    };\n\n    const position = POSITIONS[segment];\n\n    return {\n      horizontal: 8 + 15 * (position.horizontal - 1),\n      vertical: position.vertical === 1 ? -2 : 88,\n    };\n  }\n\n  getColor(segment) {\n    if (this.isActive(segment)) return this.colors.on;\n    return this.colors.off;\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  right: -7px;\n  top: 50%;\n  transform: translateY(-50%);\n`;\n\nexport const Shape = styled.div`\n  position: relative;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 45px;\n  height: 30px;\n\n  background: ${props =>\n    props.selected\n      ? 'var(--body-selected)'\n      : 'var(--body-unselected)'};\n  border: 2px solid\n    ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  border-radius: 20px;\n`;\n\nexport const Switch = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 40px;\n  height: 24px;\n  margin: 2px;\n\n  background: #848484;\n  border: 2px solid #313131;\n  border-radius: 15px;\n\n  color: ${props => (props.value === 1 ? 'black' : 'white')};\n  font-family: monospace;\n`;\n\nexport const SwitchValue = styled.div`\n  transform: ${props =>\n    props.isActive ? 'translateX(6px)' : 'translateX(-6px)'};\n\n  width: 15px;\n  height: 15px;\n\n  border-radius: 100%;\n  transition: 100ms linear;\n  background: black;\n`;\n\nconst SwitchWidget = props => {\n  const { model } = props;\n  const {\n    options: { selected },\n  } = model;\n\n  return (\n    <Shape selected={selected}>\n      <Switch onClick={() => model.onClick()}>\n        <SwitchValue isActive={model.isActive()} />\n      </Switch>\n      <PositionedPort name=\"out\" />\n    </Shape>\n  );\n};\n\nexport default SwitchWidget;\n","import React from 'react';\n\nimport { Shape, Switch, SwitchValue } from './SwitchWidget';\n\nconst SwitchIcon = () => (\n  <Shape>\n    <Switch as=\"div\">\n      <SwitchValue value={0} />\n    </Switch>\n  </Shape>\n);\n\nexport default SwitchIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './SwitchIcon';\nimport model from './SwitchModel';\nimport widget from './SwitchWidget';\n\nexport default new Component({\n  type: 'Switch',\n  name: 'Switch',\n  description: 'On/off switch',\n  group: 'Input & output',\n  configurations: [],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class SwitchModel extends BaseModel {\n  initialize() {\n    this.addOutputPort('out');\n  }\n\n  onSimulationStart() {\n    this.emit({ out: 0 });\n  }\n\n  onClick(index) {\n    const mask = 0b1 << index;\n\n    this.emit({ out: this.getOutput() ^ mask });\n  }\n\n  getOutput() {\n    return this.getPort('out').getValue() || [0];\n  }\n\n  isActive() {\n    return this.getOutput()[0] === 1;\n  }\n}\n","import React, { Fragment } from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nimport { PortExtension, distributePorts } from '../portExtendUtils';\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 105px;\n  height: 90px;\n\n  transition: 100ms linear;\n  svg {\n    fill: ${props =>\n      props.selected\n        ? 'var(--body-selected)'\n        : 'var(--body-unselected)'};\n    stroke: ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  }\n`;\n\nconst PortExtensionConnector = styled.div`\n  position: absolute;\n  z-index: -1;\n\n  background: ${props =>\n    props.selected\n      ? 'var(--border-selected)'\n      : 'var(--border-unselected)'};\n\n  height: 2px;\n  width: 15px;\n\n  top: ${props => props.position * 15 - 1}px;\n  left: -2px;\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n\n  ${props => {\n    if (props.name === 'out') return '';\n    return `top: ${props.position * 15 - 5}px;`;\n  }}\n\n  ${props => {\n    if (props.name === 'out') return 'right: -5px';\n    return 'left: -5px';\n  }};\n`;\n\nexport const Shape = ({ size = 90, portPositions = [] }) => (\n  <svg\n    height={size}\n    width={size + 15}\n    viewBox=\"0 0 27.781249 23.812501\"\n    fill=\"var(--body-unselected)\"\n    stroke=\"var(--border-unselected)\"\n    strokeWidth=\"var(--border-width)\"\n  >\n    <g>\n      <path\n        fill=\"none\"\n        style={{\n          transform:\n            'scale(0.284583, 0.284583) translate(-1px, -3px)',\n        }}\n        d=\"m 11.926664,1.1161165 c 5.50133,9.5176855 9.663162,25.9796645 9.66318,42.6065395 m 0,0 c 1.62e-4,18.330222 -4.950245,36.216284 -11.386335,45.249616\"\n      />\n      <g transform=\"scale(0.26458333)\">\n        <path\n          d=\"m 12.810547,2 c 5.50133,9.517685 8.779279,25.095781 8.779297,41.722656 C 21.590006,62.052878 17.611871,78.966668 11.175781,88 H 37.875 c 23.748245,0 43.005576,-42.349157 43,-43 -0.0058,-0.677686 -19.251755,-43 -43,-43 h -0.271484 z\"\n          transform=\"translate(7)\"\n        />\n        <circle r=\"5.72056\" cy=\"45\" cx=\"94.27944\" />\n      </g>\n    </g>\n    <g strokeWidth={0.5}>\n      {portPositions.includes(1) && (\n        <path d=\"M 4.8860442,4.1010415 H 0.38245295\" />\n      )}\n      {portPositions.includes(2) && (\n        <path d=\"M 5.3419835,8.0697915 H 0.38232292\" />\n      )}\n      {portPositions.includes(3) && (\n        <path d=\"M 5.5975927,12.038541 H 0.38232292\" />\n      )}\n      {portPositions.includes(4) && (\n        <path d=\"M 5.2516863,16.007291 H 0.38232292\" />\n      )}\n      {portPositions.includes(5) && (\n        <path d=\"M 4.3916654,19.976041 H 0.38232292\" />\n      )}\n    </g>\n  </svg>\n);\n\nconst XnorWidget = props => {\n  const { model } = props;\n\n  const inputPorts = Object.values(model.getInputPorts());\n  const portPositions = distributePorts(inputPorts.length);\n\n  return (\n    <Wrapper selected={model.options.selected}>\n      <PortExtension\n        selected={model.isSelected()}\n        portPositions={portPositions}\n        offsetX={12}\n      />\n      {inputPorts.map((port, i) => (\n        <Fragment key={port.getName()}>\n          <PositionedPort\n            name={port.getName()}\n            position={portPositions[i]}\n          />\n          {(portPositions[i] < 1 || portPositions[i] > 5) && (\n            <PortExtensionConnector\n              selected={model.isSelected()}\n              position={portPositions[i]}\n            />\n          )}\n        </Fragment>\n      ))}\n      <PositionedPort name=\"out\" />\n      <Shape portPositions={portPositions} />\n    </Wrapper>\n  );\n};\n\nexport default XnorWidget;\n","import React from 'react';\n\nimport { Shape } from './XnorWidget';\n\nconst XnorIcon = () => <Shape size={30} />;\n\nexport default XnorIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './XnorIcon';\nimport model from './XnorModel';\nimport widget from './XnorWidget';\n\nexport default new Component({\n  type: 'Xnor',\n  name: 'Xnor',\n  description: 'Logic \"not exclusive or\" gate',\n  group: 'Logic gates',\n  configurations: [\n    {\n      name: 'INPUT_PORTS_NUMBER',\n      type: 'number',\n      default: 2,\n      label: 'Number of input ports',\n      min: 2,\n      max: 16,\n      validate(value) {\n        if (value < this.min)\n          return `Minimum input ports is ${this.min}`;\n        if (value > this.max)\n          return `Maximum input ports is ${this.max}`;\n        return null;\n      },\n    },\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n    {\n      name: 'MULTIPLE_INPUT_BEHAVIOR',\n      type: 'select',\n      default: 'ONE',\n      label: 'Multiple input behavior',\n      options: [\n        {\n          label: 'Detect when only one input is on',\n          value: 'ONE',\n        },\n        {\n          label: 'Detect when an odd number of inputs are on',\n          value: 'ODD',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class XnorModel extends BaseModel {\n  initialize(configurations) {\n    this.behavior = configurations.MULTIPLE_INPUT_BEHAVIOR;\n    this.dataBits = Number(configurations.DATA_BITS);\n\n    const INPUT_PORTS_NUMBER = Number(\n      configurations.INPUT_PORTS_NUMBER,\n    );\n\n    for (let i = 0; i < INPUT_PORTS_NUMBER; i += 1) {\n      this.addInputPort(`in${i}`, { bits: this.dataBits });\n    }\n    this.addOutputPort('out', { bits: this.dataBits });\n  }\n\n  executeBit(bits) {\n    if (this.behavior === 'ONE') return this.executeOne(bits);\n    if (this.behavior === 'ODD') return this.executeOdd(bits);\n    return {};\n  }\n\n  executeOne(bits) {\n    return bits.filter(bit => bit === 1).length === 1 ? 0 : 1;\n  }\n\n  executeOdd(bits) {\n    return bits.filter(bit => bit === 1).length % 2 ? 0 : 1;\n  }\n\n  step(input) {\n    return {\n      out: Object.values(input)\n        .map(value => value.asArray(this.dataBits))\n        .transpose()\n        .map(this.executeBit.bind(this)),\n    };\n  }\n\n  stepFloating(input) {\n    return this.step(input);\n  }\n}\n","import React, { Fragment } from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nimport { PortExtension, distributePorts } from '../portExtendUtils';\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 90px;\n  height: 90px;\n\n  transition: 100ms linear;\n  svg {\n    fill: ${props =>\n      props.selected\n        ? 'var(--body-selected)'\n        : 'var(--body-unselected)'};\n    stroke: ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  }\n`;\n\nconst PortExtensionConnector = styled.div`\n  position: absolute;\n  z-index: -1;\n\n  background: ${props =>\n    props.selected\n      ? 'var(--border-selected)'\n      : 'var(--border-unselected)'};\n\n  height: 2px;\n  width: 15px;\n\n  top: ${props => props.position * 15 - 1}px;\n  left: -2px;\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n\n  ${props => {\n    if (props.name === 'out') return '';\n    return `top: ${props.position * 15 - 5}px;`;\n  }}\n\n  ${props => {\n    if (props.name === 'out') return 'right: -5px';\n    return 'left: -5px';\n  }};\n`;\n\nexport const Shape = ({ size = 90, portPositions = [] }) => (\n  <svg\n    height={size}\n    width={size}\n    viewBox=\"0 0 23.812499 23.812501\"\n    fill=\"var(--body-unselected)\"\n    stroke=\"var(--border-unselected)\"\n    strokeWidth=\"var(--border-width)\"\n  >\n    <g>\n      <path\n        fill=\"none\"\n        style={{\n          transform:\n            'scale(0.284583, 0.284583) translate(-1px, -3px)',\n        }}\n        d=\"m 11.926664,1.1161165 c 5.50133,9.5176855 9.663162,25.9796645 9.66318,42.6065395 m 0,0 c 1.62e-4,18.330222 -4.950245,36.216284 -11.386335,45.249616\"\n      />\n      <g transform=\"translate(1.8657598)\">\n        <path\n          d=\"m 12.810547,2 c 5.50133,9.517685 8.779279,25.095781 8.779297,41.722656 C 21.590006,62.052878 17.611871,78.966668 11.175781,88 H 37.875 c 23.748245,0 43.005576,-42.349157 43,-43 -0.0058,-0.677686 -19.251755,-43 -43,-43 h -0.271484 z\"\n          transform=\"scale(0.26458333)\"\n        />\n      </g>\n    </g>\n    <g strokeWidth={0.5}>\n      {portPositions.includes(1) && (\n        <path d=\"M 4.8860442,4.1010415 H 0.38245295\" />\n      )}\n      {portPositions.includes(2) && (\n        <path d=\"M 5.3419835,8.0697915 H 0.38232292\" />\n      )}\n      {portPositions.includes(3) && (\n        <path d=\"M 5.5975927,12.038541 H 0.38232292\" />\n      )}\n      {portPositions.includes(4) && (\n        <path d=\"M 5.2516863,16.007291 H 0.38232292\" />\n      )}\n      {portPositions.includes(5) && (\n        <path d=\"M 4.3916654,19.976041 H 0.38232292\" />\n      )}\n    </g>\n  </svg>\n);\n\nconst XorWidget = props => {\n  const { model } = props;\n\n  const inputPorts = Object.values(model.getInputPorts());\n  const portPositions = distributePorts(inputPorts.length);\n\n  return (\n    <Wrapper selected={model.options.selected}>\n      <PortExtension\n        selected={model.isSelected()}\n        portPositions={portPositions}\n        offsetX={12}\n      />\n      {inputPorts.map((port, i) => (\n        <Fragment key={port.getName()}>\n          <PositionedPort\n            name={port.getName()}\n            position={portPositions[i]}\n          />\n          {(portPositions[i] < 1 || portPositions[i] > 5) && (\n            <PortExtensionConnector\n              selected={model.isSelected()}\n              position={portPositions[i]}\n            />\n          )}\n        </Fragment>\n      ))}\n      <PositionedPort name=\"out\" />\n      <Shape portPositions={portPositions} />\n    </Wrapper>\n  );\n};\n\nexport default XorWidget;\n","import React from 'react';\n\nimport { Shape } from './XorWidget';\n\nconst XorIcon = () => <Shape size={30} />;\n\nexport default XorIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './XorIcon';\nimport model from './XorModel';\nimport widget from './XorWidget';\n\nexport default new Component({\n  type: 'Xor',\n  name: 'Xor',\n  description: 'Logic \"exclusive or\" gate',\n  group: 'Logic gates',\n  configurations: [\n    {\n      name: 'INPUT_PORTS_NUMBER',\n      type: 'number',\n      default: 2,\n      label: 'Number of input ports',\n      min: 2,\n      max: 16,\n      validate(value) {\n        if (value < this.min)\n          return `Minimum input ports is ${this.min}`;\n        if (value > this.max)\n          return `Maximum input ports is ${this.max}`;\n        return null;\n      },\n    },\n    {\n      name: 'DATA_BITS',\n      type: 'select',\n      default: '1',\n      label: 'Data bits',\n      options: [\n        {\n          label: '1 bit',\n          value: '1',\n        },\n        {\n          label: '2 bits',\n          value: '2',\n        },\n        {\n          label: '4 bits',\n          value: '4',\n        },\n        {\n          label: '8 bits',\n          value: '8',\n        },\n        {\n          label: '16 bits',\n          value: '16',\n        },\n      ],\n    },\n    {\n      name: 'MULTIPLE_INPUT_BEHAVIOR',\n      type: 'select',\n      default: 'ONE',\n      label: 'Multiple input behavior',\n      options: [\n        {\n          label: 'Detect when only one input is on',\n          value: 'ONE',\n        },\n        {\n          label: 'Detect when an odd number of inputs are on',\n          value: 'ODD',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class XorModel extends BaseModel {\n  initialize(configurations) {\n    this.behavior = configurations.MULTIPLE_INPUT_BEHAVIOR;\n    this.dataBits = Number(configurations.DATA_BITS);\n\n    const INPUT_PORTS_NUMBER = Number(\n      configurations.INPUT_PORTS_NUMBER,\n    );\n\n    for (let i = 0; i < INPUT_PORTS_NUMBER; i += 1) {\n      this.addInputPort(`in${i}`, { bits: this.dataBits });\n    }\n    this.addOutputPort('out', { bits: this.dataBits });\n  }\n\n  executeBit(bits) {\n    if (this.behavior === 'ONE') return this.executeOne(bits);\n    if (this.behavior === 'ODD') return this.executeOdd(bits);\n    return {};\n  }\n\n  executeOne(bits) {\n    return bits.filter(bit => bit === 1).length === 1 ? 1 : 0;\n  }\n\n  executeOdd(bits) {\n    return bits.filter(bit => bit === 1).length % 2 ? 1 : 0;\n  }\n\n  step(input) {\n    return {\n      out: Object.values(input)\n        .map(value => value.asArray(this.dataBits))\n        .transpose()\n        .map(this.executeBit.bind(this)),\n    };\n  }\n\n  stepFloating(input) {\n    return this.step(input);\n  }\n}\n","import And from './And/AndRegister';\nimport Buffer from './Buffer/BufferRegister';\nimport Button from './Button/ButtonRegister';\nimport Buzzer from './Buzzer/BuzzerRegister';\nimport Clock from './Clock/ClockRegister';\nimport ControlledBuffer from './ControlledBuffer/ControlledBufferRegister';\nimport ControlledInverter from './ControlledInverter/ControlledInverterRegister';\nimport Counter from './Counter/CounterRegister';\nimport Demux from './Demux/DemuxRegister';\nimport Ground from './Ground/GroundRegister';\nimport Input from './Input/InputRegister';\nimport Joiner from './Joiner/JoinerRegister';\nimport Led from './Led/LedRegister';\nimport Mux from './Mux/MuxRegister';\nimport Nand from './Nand/NandRegister';\nimport Nor from './Nor/NorRegister';\nimport Not from './Not/NotRegister';\nimport Or from './Or/OrRegister';\nimport Output from './Output/OutputRegister';\nimport Power from './Power/PowerRegister';\nimport Ram from './Ram/RamRegister';\nimport Rom from './Rom/RomRegister';\nimport Splitter from './Splitter/SplitterRegister';\nimport Ssd from './Ssd/SsdRegister';\nimport Switch from './Switch/SwitchRegister';\nimport Xnor from './Xnor/XnorRegister';\nimport Xor from './Xor/XorRegister';\n\nconst components = [\n  Input,\n  Output,\n  Button,\n  Switch,\n  Clock,\n  Led,\n  Ssd,\n  Buzzer,\n  And,\n  Nand,\n  Or,\n  Nor,\n  Xor,\n  Xnor,\n  Buffer,\n  Not,\n  ControlledBuffer,\n  ControlledInverter,\n  Splitter,\n  Joiner,\n  Power,\n  Ground,\n  Mux,\n  Demux,\n  Ram,\n  Rom,\n  Counter,\n];\n\nexport default components;\n\nexport const groupedComponents = components.reduce(\n  (acc, component) => {\n    const group = acc.find(g => g.name === component.group);\n\n    if (group) group.components.push(component);\n    else acc.push({ name: component.group, components: [component] });\n\n    return acc;\n  },\n  [],\n);\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n\n  z-index: 2;\n`;\n\nconst Button = styled.button.attrs(({ ...props }) => ({\n  ...props,\n  type: 'button',\n}))`\n  border: none;\n  border-radius: 100%;\n\n  background: orange;\n  box-shadow: inset 0 0 10px #ff8d00;\n\n  width: 60px;\n  height: 60px;\n  margin: 16px;\n\n  font-size: 2em;\n  line-height: 1em;\n  color: white;\n\n  transition: 0.5s ease-in-out;\n\n  &:disabled {\n    opacity: 10%;\n    cursor: not-allowed;\n    background: gray;\n    box-shadow: inset 0 0 10px black;\n  }\n`;\n\nconst ComponentSelectButton = ({ handleClick, disabled }) => (\n  <Container id=\"component-select-button\">\n    <Button\n      onClick={handleClick}\n      disabled={disabled}\n      data-for=\"tooltip\"\n      data-tip=\"Add component...\"\n      data-place=\"left\"\n    >\n      +\n    </Button>\n  </Container>\n);\n\nexport default ComponentSelectButton;\n","import React from 'react';\n\nconst ArrowLeft = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    fill={color}\n    viewBox=\"100 100 300 300\"\n  >\n    <polygon points=\"352,128.4 319.7,96 160,256 160,256 160,256 319.7,416 352,383.6 224.7,256 \" />\n  </svg>\n);\n\nexport default ArrowLeft;\n","import React from 'react';\n\nconst Chevron = ({ size = 16, color = 'gray' }) => (\n  <svg width={size} height={size} fill={color} viewBox=\"0 0 48 48\">\n    <polygon points=\"5,30.9 8.1,34 24,18.1 39.9,34 43,30.9 24,12\" />\n  </svg>\n);\n\nexport default Chevron;\n","import React from 'react';\n\nconst Chevrons = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <polyline points=\"17 11 12 6 7 11\" />\n    <polyline points=\"17 18 12 13 7 18\" />\n  </svg>\n);\n\nexport default Chevrons;\n","import React from 'react';\n\nconst Close = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    fill={color}\n    viewBox=\"0 0 60.963 60.842\"\n  >\n    <path d=\"M59.595,52.861L37.094,30.359L59.473,7.98c1.825-1.826,1.825-4.786,0-6.611  c-1.826-1.825-4.785-1.825-6.611,0L30.483,23.748L8.105,1.369c-1.826-1.825-4.785-1.825-6.611,0c-1.826,1.826-1.826,4.786,0,6.611  l22.378,22.379L1.369,52.861c-1.826,1.826-1.826,4.785,0,6.611c0.913,0.913,2.109,1.369,3.306,1.369s2.393-0.456,3.306-1.369  l22.502-22.502l22.501,22.502c0.913,0.913,2.109,1.369,3.306,1.369s2.393-0.456,3.306-1.369  C61.42,57.647,61.42,54.687,59.595,52.861z\" />\n  </svg>\n);\n\nexport default Close;\n","import React from 'react';\n\nconst Copy = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\" />\n    <path d=\"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1\" />\n  </svg>\n);\n\nexport default Copy;\n","import React from 'react';\n\nconst Cut = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <circle cx=\"6\" cy=\"6\" r=\"3\" />\n    <circle cx=\"6\" cy=\"18\" r=\"3\" />\n    <line x1=\"20\" y1=\"4\" x2=\"8.12\" y2=\"15.88\" />\n    <line x1=\"14.47\" y1=\"14.48\" x2=\"20\" y2=\"20\" />\n    <line x1=\"8.12\" y1=\"8.12\" x2=\"12\" y2=\"12\" />\n  </svg>\n);\n\nexport default Cut;\n","import React from 'react';\n\nconst Delete = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <polyline points=\"3 6 5 6 21 6\" />\n    <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\" />\n    <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\" />\n    <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\" />\n  </svg>\n);\n\nexport default Delete;\n","import React from 'react';\n\nconst Duplicate = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={(size * 18) / 24}\n    viewBox=\"0 0 24 18\"\n    fill=\"none\"\n    stroke=\"none\"\n    strokeWidth=\"2\"\n  >\n    <g transform=\"translate(-678.000000, -2727.000000)\">\n      <g transform=\"translate(100.000000, 2626.000000)\">\n        <g transform=\"translate(578.000000, 98.000000)\">\n          <g transform=\"translate(0.000000, 0.000000)\">\n            <polygon points=\"0 0 24 0 24 24 0 24\" />\n            <path\n              d=\"M15,8 C14.45,8 14,8.45 14,9 L14,11 L12,11 C11.45,11 11,11.45 11,12 C11,12.55 11.45,13 12,13 L14,13 L14,15 C14,15.55 14.45,16 15,16 C15.55,16 16,15.55 16,15 L16,13 L18,13 C18.55,13 19,12.55 19,12 C19,11.45 18.55,11 18,11 L16,11 L16,9 C16,8.45 15.55,8 15,8 Z M2,12 C2,9.42 3.4,7.17 5.48,5.96 C5.8,5.77 6.01,5.45 6.01,5.08 C6.01,4.31 5.17,3.83 4.5,4.22 C1.82,5.78 0,8.68 0,12 C0,15.32 1.82,18.22 4.5,19.78 C5.17,20.17 6.01,19.69 6.01,18.92 C6.01,18.55 5.8,18.23 5.48,18.04 C3.4,16.83 2,14.58 2,12 Z M15,3 C10.04,3 6,7.04 6,12 C6,16.96 10.04,21 15,21 C19.96,21 24,16.96 24,12 C24,7.04 19.96,3 15,3 Z M15,19 C11.14,19 8,15.86 8,12 C8,8.14 11.14,5 15,5 C18.86,5 22,8.14 22,12 C22,15.86 18.86,19 15,19 Z\"\n              fill={color}\n            />\n          </g>\n        </g>\n      </g>\n    </g>\n  </svg>\n);\n\nexport default Duplicate;\n","import React from 'react';\n\nconst Edit = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\" />\n    <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\" />\n  </svg>\n);\n\nexport default Edit;\n","import React from 'react';\n\nconst Paste = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    fill={color}\n    viewBox=\"0 0 512.001 512.001\"\n  >\n    <g>\n      <g>\n        <g>\n          <path\n            d=\"M481,371c11.046,0,20-8.954,20-20v-92c0-33.084-26.916-60-60-60h-39v-79c0-44.112-35.888-80-80-80h-47.533\n\t\t\t\tc-7.739-23.749-29.864-40-55.16-40h-25.614c-25.296,0-47.421,16.251-55.16,40H91c-44.112,0-80,35.888-80,80v312\n\t\t\t\tc0,44.112,35.888,80,80,80h88c11.046,0,20-8.954,20-20c0-11.046-8.954-20-20-20H91c-22.056,0-40-17.944-40-40V120\n\t\t\t\tc0-22.056,17.944-40,40-40h2v59c0,11.046,8.954,20,20,20h189c11.046,0,20-8.954,20-20V80c22.056,0,40,17.944,40,40v79h-65.007\n\t\t\t\tC263.914,199,237,225.913,237,258.993v193.015c0,33.08,26.916,59.993,60.01,59.993L441,511.926c33.084,0,60-26.913,60-59.992\n\t\t\t\tc0-11.046-8.954-20-20-20c-11.046,0-20,8.954-20,20c0,11.024-8.972,19.992-20.01,19.992L297,472c-11.028,0-20-8.969-20-19.993\n\t\t\t\tV258.993c0-11.024,8.969-19.993,19.993-19.993H441c11.028,0,20,8.972,20,20v92C461,362.046,469.955,371,481,371z M282,119H133V80\n\t\t\t\th21c9.177,0,17.177-6.246,19.403-15.149l2.798-11.194C178.211,45.616,185.404,40,193.693,40h25.614\n\t\t\t\tc8.289,0,15.481,5.616,17.492,13.657l2.798,11.194C241.823,73.754,249.823,80,259,80h23V119z\"\n          />\n          <path\n            d=\"M401,279h-64c-11.046,0-20,8.954-20,20c0,11.046,8.954,20,20,20h64c11.046,0,20-8.954,20-20\n\t\t\t\tC421,287.954,412.047,279,401,279z\"\n          />\n          <path\n            d=\"M401,349h-64c-11.046,0-20,8.954-20,20c0,11.046,8.954,20,20,20h64c11.046,0,20-8.954,20-20\n\t\t\t\tC421,357.954,412.047,349,401,349z\"\n          />\n        </g>\n      </g>\n    </g>\n  </svg>\n);\n\nexport default Paste;\n","import React from 'react';\n\nconst Pause = ({ size = 16, color = '#ffb100' }) => (\n  <svg width={size} height={size} fill={color} viewBox=\"0 0 512 512\">\n    <path d=\"M395,512a73.14,73.14,0,0,1-73.14-73.14V73.14a73.14,73.14,0,1,1,146.29,0V438.86A73.14,73.14,0,0,1,395,512Z\" />\n    <path d=\"M117,512a73.14,73.14,0,0,1-73.14-73.14V73.14a73.14,73.14,0,1,1,146.29,0V438.86A73.14,73.14,0,0,1,117,512Z\" />\n  </svg>\n);\n\nexport default Pause;\n","import React from 'react';\n\nconst Play = ({ size = 16, color = '#008000' }) => (\n  <svg width={size} height={size} fill={color} viewBox=\"0 0 512 512\">\n    <path d=\"M60.54,512c-17.06,0-30.43-13.86-30.43-31.56V31.55C30.12,13.86,43.48,0,60.55,0A32.94,32.94,0,0,1,77,4.52L465.7,229c10.13,5.85,16.18,16,16.18,27s-6,21.2-16.18,27L77,507.48A32.92,32.92,0,0,1,60.55,512Z\" />\n  </svg>\n);\n\nexport default Play;\n","import React from 'react';\n\nconst Redo = ({ size = 16, color = 'gray' }) => (\n  <svg width={size} height={size} viewBox=\"0 0 512 512\" fill={color}>\n    <path d=\"m431 481c0 11.046-8.954 20-20 20h-66c-11.046 0-20-8.954-20-20s8.954-20 20-20h66c11.046 0 20 8.954 20 20zm63.358-352.994-112.284-111.215c-7.848-7.773-20.511-7.713-28.284.135s-7.712 20.511.135 28.284l106.808 105.79h-285.733c-96.495 0-175 78.505-175 175s78.505 175 175 175h69c11.046 0 20-8.954 20-20s-8.954-20-20-20h-69c-74.439 0-135-60.561-135-135s60.561-135 135-135h284.836l-105.037 105.917c-7.778 7.843-7.725 20.506.118 28.284 3.9 3.868 8.992 5.799 14.083 5.799 5.146 0 10.292-1.975 14.202-5.917l111.225-112.157c11.332-11.332 17.573-26.4 17.573-42.426s-6.241-31.094-17.642-42.494z\" />\n  </svg>\n);\n\nexport default Redo;\n","import React from 'react';\n\nconst Settings = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <circle cx=\"12\" cy=\"12\" r=\"3\" />\n    <path d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\" />\n  </svg>\n);\n\nexport default Settings;\n","import React from 'react';\n\nconst Stop = ({ size = 16, color = '#c53838' }) => (\n  <svg width={size} height={size} fill={color} viewBox=\"0 0 512 512\">\n    <path d=\"M 65.249771,0 A 65.248738,65.376306 0 0 0 0.413662,58.057582 h -0.18732 v 1.884685 A 65.248738,65.376306 0 0 0 0,65.377342 65.248738,65.376306 0 0 0 0.226342,70.796781 V 441.18757 A 65.248738,65.376306 0 0 0 0,446.62268 a 65.248738,65.376306 0 0 0 0.226342,5.41161 v 2.88566 H 0.530738 A 65.248738,65.376306 0 0 0 65.249771,512 a 65.248738,65.376306 0 0 0 2.44297,-0.0468 H 444.31507 a 65.248738,65.376306 0 0 0 2.43514,0.0468 65.248738,65.376306 0 0 0 2.44297,-0.0468 h 0.56977 v -0.024 a 65.248738,65.376306 0 0 0 61.70628,-57.00966 h 0.0312 v -0.22662 a 65.248738,65.376306 0 0 0 0.49952,-8.07049 65.248738,65.376306 0 0 0 -0.49952,-8.01579 V 67.011775 a 65.248738,65.376306 0 0 0 0.0234,-1.634433 65.248738,65.376306 0 0 0 -0.0234,-1.681351 v -5.638409 h -0.38247 A 65.248738,65.376306 0 0 0 456.2645,0.77420532 V 0 H 446.40678 446.2741 65.374651 Z\" />\n  </svg>\n);\n\nexport default Stop;\n","import React from 'react';\n\nconst Undo = ({ size = 16, color = 'gray' }) => (\n  <svg width={size} height={size} viewBox=\"0 0 512 512\" fill={color}>\n    <path d=\"m 81,481 c 0,11.046 8.954,20 20,20 h 66 c 11.046,0 20,-8.954 20,-20 0,-11.046 -8.954,-20 -20,-20 h -66 c -11.046,0 -20,8.954 -20,20 z M 17.642,128.006 129.926,16.791 c 7.848,-7.773 20.511,-7.713 28.284,0.135 7.773,7.848 7.712,20.511 -0.135,28.284 L 51.267,151 H 337 c 96.495,0 175,78.505 175,175 0,96.495 -78.505,175 -175,175 h -69 c -11.046,0 -20,-8.954 -20,-20 0,-11.046 8.954,-20 20,-20 h 69 c 74.439,0 135,-60.561 135,-135 0,-74.439 -60.561,-135 -135,-135 H 52.164 l 105.037,105.917 c 7.778,7.843 7.725,20.506 -0.118,28.284 -3.9,3.868 -8.992,5.799 -14.083,5.799 -5.146,0 -10.292,-1.975 -14.202,-5.917 L 17.573,212.926 C 6.241,201.594 0,186.526 0,170.5 0,154.474 6.241,139.406 17.642,128.006 Z\" />\n  </svg>\n);\n\nexport default Undo;\n","import React from 'react';\n\nconst ZoomIn = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <circle cx=\"11\" cy=\"11\" r=\"8\" />\n    <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\" />\n    <line x1=\"11\" y1=\"8\" x2=\"11\" y2=\"14\" />\n    <line x1=\"8\" y1=\"11\" x2=\"14\" y2=\"11\" />\n  </svg>\n);\n\nexport default ZoomIn;\n","import React from 'react';\n\nconst ZoomOut = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <circle cx=\"11\" cy=\"11\" r=\"8\" />\n    <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\" />\n    <line x1=\"8\" y1=\"11\" x2=\"14\" y2=\"11\" />\n  </svg>\n);\n\nexport default ZoomOut;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nimport { Play, Pause, Stop } from '../Icons';\n\nconst Container = styled.div`\n  position: absolute;\n  bottom: 16px;\n  left: 50%;\n  transform: translate(-50%, 0);\n\n  background: rgb(224, 224, 224);\n  background: linear-gradient(\n    0deg,\n    rgba(224, 224, 224, 1) 0%,\n    rgba(255, 255, 255, 1) 100%\n  );\n\n  border: 1px solid gray;\n  border-radius: 16px;\n\n  z-index: 2;\n\n  & > button {\n    border-right: 1px solid gray;\n    &:last-child {\n      border-right: none;\n    }\n  }\n`;\n\nconst Button = styled.button.attrs(({ ...props }) => ({\n  ...props,\n  type: 'button',\n}))`\n  background: none;\n  border: none;\n\n  font-size: 1.2em;\n\n  min-width: 75px;\n  min-height: 60px;\n\n  &:disabled {\n    & > svg {\n      fill: #bfbfbf;\n    }\n  }\n`;\n\nconst SimulationControlButtons = ({\n  state,\n  handleClickStart,\n  handleClickPause,\n  handleClickStop,\n}) => (\n  <Container id=\"simulation-control-buttons\">\n    <Button\n      onClick={handleClickStart}\n      disabled={state === 'started'}\n      data-for=\"tooltip\"\n      data-tip=\"Start simulation\"\n    >\n      <Play />\n    </Button>\n    <Button\n      onClick={handleClickPause}\n      disabled={state === 'paused' || state === 'stopped'}\n      data-for=\"tooltip\"\n      data-tip=\"Pause simulation\"\n    >\n      <Pause />\n    </Button>\n    <Button\n      onClick={handleClickStop}\n      disabled={state === 'stopped'}\n      data-for=\"tooltip\"\n      data-tip=\"Stop simulation\"\n    >\n      <Stop />\n    </Button>\n  </Container>\n);\n\nexport default SimulationControlButtons;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nconst Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  z-index: 3;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100vw;\n  height: 100vh;\n\n  background: rgba(0, 0, 0, 0.75);\n`;\n\nconst Window = styled.div`\n  width: 60vw;\n  height: 80vh;\n\n  max-width: 600px;\n  max-height: 800px;\n\n  background: white;\n\n  border: 1px solid black;\n  border-radius: 25px;\n\n  padding: 16px;\n\n  z-index: 4;\n`;\n\nconst Modal = ({ children }) => (\n  <Overlay>\n    <Window>{children}</Window>\n  </Overlay>\n);\n\nexport default Modal;\n","import styled from 'styled-components';\n\nexport const Header = styled.div`\n  position: relative;\n\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-content: space-between;\n\n  height: 50px;\n`;\n\nexport const Title = styled.h1`\n  flex-grow: 1;\n  font-size: 1.5em;\n\n  margin: 0;\n\n  align-self: center;\n  text-align: center;\n`;\n\nexport const Subtitle = styled.h2`\n  flex-grow: 1;\n  font-size: 1.2em;\n\n  margin: 0;\n\n  align-self: center;\n  text-align: center;\n`;\n\nexport const Content = styled.div`\n  margin-top: 32px;\n`;\n\nexport const IconButton = styled.button`\n  position: absolute;\n\n  flex-shrink: 0;\n\n  border: 1px solid gray;\n  border-radius: 25px;\n  width: 50px;\n  height: 50px;\n\n  ${props => {\n    if (props.left) return 'left: 0;';\n    return 'right: 0;';\n  }}\n\n  background: none;\n\n  :hover {\n    background: rgba(0, 0, 0, 0.05);\n    cursor: pointer;\n  }\n`;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 16px;\n\n  label {\n    font-size: 0.8em;\n    font-weight: bold;\n    text-transform: uppercase;\n    color: ${props => (props.error ? '#710606' : 'inherit')};\n\n    background: #eee;\n    border: 1px solid ${props => (props.error ? '#c80a0a' : 'gray')};\n    border-radius: 8px;\n\n    position: relative;\n    top: 0.8em;\n\n    width: max-content;\n    margin-left: 15px;\n    padding: 0 8px;\n  }\n\n  select,\n  input {\n    background: white;\n    border: 1px solid ${props => (props.error ? '#c80a0a' : 'gray')};\n    border-radius: 25px;\n\n    font-size: 1.2em;\n\n    padding: 10px 0 5px 16px;\n  }\n\n  input[type='file'] {\n    font-size: 1em;\n    margin-top: 2px;\n  }\n`;\n\nconst Input = ({\n  // Formik\n  form,\n  field,\n  // General\n  name,\n  label,\n  componentType,\n  type,\n  innerRef,\n  // Select\n  options = [],\n  // Number\n  step,\n  min,\n  max,\n}) => {\n  const handleBinaryLoad = event => {\n    const {\n      target: { files },\n    } = event;\n\n    if (files.length !== 1) return;\n\n    const handleError = () =>\n      this.showSnackbar(\n        `Error loading binary file:\\n${files[0].name}`,\n      );\n\n    const fr = new FileReader();\n    fr.onerror = handleError;\n    fr.onload = e => {\n      try {\n        const file = e.target.result;\n        form.setFieldValue(field.name, file);\n      } catch (exception) {\n        handleError();\n      }\n    };\n    fr.readAsText(files.item(0));\n  };\n\n  switch (type) {\n    case 'select':\n      return (\n        <>\n          <label htmlFor={name}>{label}</label>\n          <select id={name} ref={innerRef} {...field}>\n            {options.map(option => (\n              <option value={option.value} key={option.value}>\n                {option.label}\n              </option>\n            ))}\n          </select>\n        </>\n      );\n    case 'number':\n      return (\n        <>\n          <label htmlFor={name}>{label}</label>\n          <input\n            id={name}\n            ref={innerRef}\n            {...field}\n            step={step}\n            min={min}\n            max={max}\n            type=\"number\"\n          />\n        </>\n      );\n    case 'text':\n      return (\n        <>\n          <label htmlFor={name}>{label}</label>\n          <input id={name} ref={innerRef} {...field} type=\"text\" />\n        </>\n      );\n    case 'binary':\n      return (\n        <>\n          <label htmlFor={name}>{label}</label>\n          <input\n            id={name}\n            accept=\".lgbin\"\n            type=\"file\"\n            onChange={handleBinaryLoad}\n          />\n        </>\n      );\n    default:\n      throw new Error(\n        `[logossim] Invalid configuration type for ${componentType}: ${type}`,\n      );\n  }\n};\n\nconst ErrorMessage = styled.div`\n  font-size: 0.8em;\n  color: #c80a0a;\n\n  background: white;\n\n  position: relative;\n  bottom: 0.7em;\n\n  width: max-content;\n  padding: 0 8px;\n  margin: -15px auto auto auto;\n  transform: translateY(15px);\n`;\n\nconst ComponentConfigurationInput = props => {\n  const {\n    field: { name },\n    form: { errors },\n  } = props;\n\n  const error = errors[name];\n\n  return (\n    <Container error={error}>\n      <Input {...props} />\n      {error && <ErrorMessage>{error}</ErrorMessage>}\n    </Container>\n  );\n};\n\nexport default ComponentConfigurationInput;\n","import React from 'react';\nimport Tooltip from 'react-tooltip';\n\nimport ComponentContext from '@logossim/core/ComponentContext';\nimport DiagramContext from '@logossim/core/Diagram/DiagramContext';\n\nimport styled from 'styled-components';\n\nconst diagramEngineStub = {\n  getEngine: () => ({\n    registerListener: () => {},\n    getCanvas: () => {},\n    getPortCoords: () => ({\n      getWidth: () => {},\n      getHeight: () => {},\n      getTopLeft: () => {},\n    }),\n    getModel: () => ({ isLocked: () => false }),\n  }),\n};\n\nconst getTooltip = (error, disabled) => {\n  if (disabled) return '';\n  if (error) return 'Check form errors';\n  return 'Drag me!';\n};\n\nconst ErrorWidget = styled.div`\n  border: 1px dashed var(--value-error);\n  border-radius: 5px;\n  width: 30px;\n  height: 30px;\n`;\n\nconst DraggableComponent = ({\n  component: { type, Widget, Model },\n  configurations,\n  handleClose,\n  error,\n  disabled,\n}) => {\n  const model = new Model(configurations, type);\n\n  return (\n    <div\n      draggable={!error && !disabled}\n      onDragStart={event => {\n        event.dataTransfer.setDragImage(\n          event.currentTarget.children[0],\n          0,\n          0,\n        );\n\n        event.dataTransfer.setData(\n          'component',\n          JSON.stringify({\n            type,\n            configurations,\n          }),\n        );\n\n        requestAnimationFrame(() => {\n          Tooltip.hide();\n          handleClose();\n        });\n      }}\n      data-for=\"tooltip\"\n      data-tip={getTooltip(error, disabled)}\n      data-place=\"bottom\"\n    >\n      {error ? (\n        <ErrorWidget />\n      ) : (\n        <DiagramContext.Provider value={diagramEngineStub}>\n          <ComponentContext.Provider value={model}>\n            <Widget model={model} />\n          </ComponentContext.Provider>\n        </DiagramContext.Provider>\n      )}\n    </div>\n  );\n};\n\nexport default DraggableComponent;\n","import React, { useEffect, useRef } from 'react';\nimport Tooltip from 'react-tooltip';\n\nimport { Formik, Form, Field } from 'formik';\nimport styled from 'styled-components';\n\nimport { ArrowLeft, Close } from '../Icons';\nimport {\n  Header,\n  Title,\n  Content,\n  IconButton,\n} from '../Modal/ModalContentLayout';\nimport ComponentConfigurationInput from './ComponentConfigurationInput';\nimport DraggableComponent from './DraggableComponent';\n\nconst DragArea = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  height: 200px;\n  margin-bottom: 32px;\n\n  box-shadow: ${props =>\n    `inset 0 0 20px rgba(${props.error ? 255 : 0}, 0, 0, 0.3)`};\n\n  background-image: ${props => `linear-gradient(\n      to right,\n      rgba(${props.error ? 255 : 0}, 0, 0, 0.1) 1px,\n      transparent 1px,\n      transparent 15px,\n      rgba(${props.error ? 255 : 0}, 0, 0, 0.05) 15px,\n      transparent 16px,\n      transparent 30px,\n      rgba(${props.error ? 255 : 0}, 0, 0, 0.05) 30px,\n      transparent 31px\n    ),\n    linear-gradient(\n      to bottom,\n      rgba(${props.error ? 255 : 0}, 0, 0, 0.1) 1px,\n      transparent 1px,\n      transparent 15px,\n      rgba(${props.error ? 255 : 0}, 0, 0, 0.05) 15px,\n      transparent 16px,\n      transparent 30px,\n      rgba(${props.error ? 255 : 0}, 0, 0, 0.05) 30px,\n      transparent 31px\n    )`};\n  background-size: 45px 45px;\n  border-radius: 25px;\n\n  overflow: hidden;\n`;\n\nconst FormScroll = styled.div`\n  height: 375px;\n  overflow-y: auto;\n`;\n\nconst Footer = styled.div`\n  display: flex;\n`;\n\nconst Hint = styled.span`\n  font-size: 0.8em;\n  font-style: italic;\n  align-self: center;\n  text-align: right;\n  margin-right: 10px;\n`;\n\nconst SubmitButton = styled.button.attrs(({ ...props }) => ({\n  ...props,\n  type: 'submit',\n}))`\n  border: none;\n  border-radius: 5px;\n  background: #07d26b;\n\n  color: white;\n  font-size: 1.2em;\n\n  width: 100%;\n  padding: 5px 20px;\n  margin: 5px;\n\n  :disabled {\n    background: #d22307;\n    cursor: not-allowed;\n  }\n`;\n\nconst getInitialValues = component =>\n  Object.fromEntries(\n    component.configurations.map(configuration => [\n      configuration.name,\n      configuration.default,\n    ]),\n  );\n\nconst getFormSubmitLabel = (isValid, editMode) => {\n  if (!isValid) return 'Check form errors';\n  if (editMode) return 'Edit component';\n  return 'Add to circuit';\n};\n\nconst ComponentConfiguration = ({\n  editMode,\n  component,\n  handleClose,\n  handleBack,\n  handleSubmit,\n}) => {\n  const firstInputRef = useRef();\n  const buttonRef = useRef();\n\n  useEffect(() => {\n    if (firstInputRef.current) {\n      firstInputRef.current.focus();\n    } else {\n      buttonRef.current.focus();\n    }\n  });\n\n  useEffect(Tooltip.rebuild);\n\n  return (\n    <>\n      <Header>\n        {!editMode && (\n          <IconButton\n            left\n            onClick={handleBack}\n            data-for=\"tooltip\"\n            data-tip=\"Go back...\"\n            data-place=\"right\"\n          >\n            <ArrowLeft />\n          </IconButton>\n        )}\n        <Title>{editMode ? 'Edit' : 'Configure'} component</Title>\n        <IconButton\n          right\n          onClick={handleClose}\n          data-for=\"tooltip\"\n          data-tip=\"Close\"\n          data-place=\"left\"\n        >\n          <Close />\n        </IconButton>\n      </Header>\n\n      <Content>\n        <Formik\n          initialValues={getInitialValues(component)}\n          onSubmit={values => {\n            handleSubmit(null, {\n              type: component.type,\n              configurations: values,\n            });\n            handleClose();\n          }}\n        >\n          {({ values, isValid }) => (\n            <Form>\n              <DragArea error={!isValid}>\n                <DraggableComponent\n                  component={component}\n                  configurations={values}\n                  handleClose={handleClose}\n                  error={!isValid}\n                  disabled={editMode}\n                />\n              </DragArea>\n\n              <FormScroll autoComplete=\"off\">\n                {component.configurations.map(\n                  (configuration, index) => (\n                    <Field\n                      key={configuration.name}\n                      component={ComponentConfigurationInput}\n                      innerRef={index === 0 ? firstInputRef : null}\n                      {...configuration}\n                      validate={\n                        configuration.validate\n                          ? value =>\n                              configuration.validate(value, values)\n                          : null\n                      }\n                    />\n                  ),\n                )}\n              </FormScroll>\n\n              <Footer>\n                {!editMode && (\n                  <Hint>(hint: you can also drag the component)</Hint>\n                )}\n                <SubmitButton disabled={!isValid} ref={buttonRef}>\n                  {getFormSubmitLabel(isValid, editMode)}\n                </SubmitButton>\n              </Footer>\n            </Form>\n          )}\n        </Formik>\n      </Content>\n    </>\n  );\n};\n\nexport default ComponentConfiguration;\n","import React, { useEffect, useCallback } from 'react';\n\nimport Modal from '../Modal/Modal';\nimport ComponentConfiguration from './ComponentConfiguration';\n\nconst closeOnEsc = ({ code }, handleClose) => {\n  if (code !== 'Escape') return;\n  handleClose();\n};\n\nconst ComponentEdit = ({\n  isOpen,\n  components,\n  component,\n  handleClose,\n  handleComponentEdit,\n}) => {\n  const callback = useCallback(\n    event => closeOnEsc(event, handleClose),\n    [handleClose],\n  );\n\n  useEffect(() => {\n    window.addEventListener('keydown', callback);\n    return () => window.removeEventListener('keydown', callback);\n  }, [callback]);\n\n  if (!isOpen) return null;\n\n  const factory = components.find(\n    c => c.type === component.options.type,\n  );\n\n  const edit = {\n    ...factory,\n    configurations: factory.configurations.map(configuration => ({\n      ...configuration,\n      default: component.configurations[configuration.name],\n    })),\n  };\n\n  return (\n    <Modal>\n      <ComponentConfiguration\n        editMode\n        handleClose={handleClose}\n        handleSubmit={(event, { configurations }) =>\n          handleComponentEdit(component, configurations)\n        }\n        component={edit}\n      />\n    </Modal>\n  );\n};\n\nexport default ComponentEdit;\n","import React, { useState } from 'react';\n\nimport styled from 'styled-components';\n\nimport { Chevron } from '../Icons';\n\nconst Container = styled.div`\n  margin-bottom: 32px;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Title = styled.div`\n  font-weight: bold;\n  font-size: 1.3em;\n`;\n\nconst HorizontalSeparator = styled.hr`\n  flex-grow: 1;\n  align-self: center;\n\n  margin: 16px;\n  border-top: 1px solid black;\n`;\n\nconst IconButton = styled.button`\n  background: none;\n  border: none;\n  width: 50px;\n\n  transform: ${props => (props.isOpen ? 'rotate(180deg)' : 'none')};\n`;\n\nconst ComponentsGrid = styled.div`\n  display: ${props => (props.isOpen ? 'grid' : 'none')};\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 8px;\n`;\n\nconst ComponentButton = styled.button`\n  display: flex;\n  align-items: center;\n\n  padding: 8px;\n\n  background: rgba(0, 0, 0, 0.05);\n  border: 1px solid gray;\n  border-radius: 5px;\n\n  :hover {\n    background: rgba(0, 0, 0, 0.1);\n    border-style: dashed;\n  }\n`;\n\nconst ComponentTitle = styled.h2`\n  font-weight: normal;\n  font-size: 1.2em;\n`;\n\nconst ComponentIcon = styled.div`\n  margin-right: 16px;\n`;\n\nconst ComponentGroup = ({\n  name,\n  components,\n  handleComponentSelect,\n}) => {\n  const [isOpen, setOpen] = useState(true);\n\n  return (\n    <Container>\n      <Header onClick={() => setOpen(!isOpen)}>\n        <Title>{name}</Title>\n        <HorizontalSeparator />\n        <IconButton\n          left\n          isOpen={isOpen}\n          onClick={() => setOpen(!isOpen)}\n        >\n          <Chevron />\n        </IconButton>\n      </Header>\n      <ComponentsGrid isOpen={isOpen}>\n        {components.map(component => (\n          <ComponentButton\n            onClick={() => handleComponentSelect(component)}\n            key={component.name}\n            data-for=\"tooltip\"\n            data-tip={component.description}\n          >\n            <ComponentIcon>\n              <component.Icon />\n            </ComponentIcon>\n            <ComponentTitle>{component.name}</ComponentTitle>\n          </ComponentButton>\n        ))}\n      </ComponentsGrid>\n    </Container>\n  );\n};\n\nexport default ComponentGroup;\n","import React, { useState, useEffect } from 'react';\nimport Tooltip from 'react-tooltip';\n\nimport styled from 'styled-components';\n\nimport { Close } from '../Icons';\nimport {\n  Header,\n  Content,\n  IconButton,\n} from '../Modal/ModalContentLayout';\nimport ComponentGroup from './ComponentGroup';\n\nconst SearchBar = styled.input`\n  flex-grow: 1;\n\n  padding: 10px;\n  margin-right: 60px;\n  font-size: 1.5em;\n\n  border-radius: 25px;\n  border: 1px solid gray;\n\n  ::placeholder {\n    font-weight: 300;\n    color: #cfcfcf;\n  }\n`;\n\nconst Scroll = styled.div`\n  padding-right: 16px;\n  max-height: calc(min(800px, 80vh) - 130px);\n  overflow-y: auto;\n`;\n\nconst ComponentSearch = ({\n  groups,\n  handleComponentSelect,\n  handleClose,\n}) => {\n  useEffect(Tooltip.rebuild);\n\n  const [filteredGroups, setFilteredGroups] = useState(groups);\n  const [searchText, setSearchText] = useState('');\n\n  const handleSearchChange = value => {\n    setSearchText(value);\n\n    if (!value) {\n      setFilteredGroups(groups);\n      return;\n    }\n\n    const like = new RegExp(`${value}.*`, 'i');\n\n    const newFilteredGroups = groups\n      .map(group => {\n        const hasAnyMatchingComponent = group.components.some(\n          component => component.name.match(like),\n        );\n\n        if (hasAnyMatchingComponent)\n          return {\n            ...group,\n            components: group.components.filter(component =>\n              component.name.match(like),\n            ),\n          };\n        return null;\n      })\n      .filter(group => group != null);\n\n    setFilteredGroups(newFilteredGroups);\n  };\n\n  const handleKeyDown = key => {\n    if (key === 'Escape') {\n      setSearchText('');\n      setFilteredGroups(groups);\n    }\n\n    if (\n      key === 'Enter' &&\n      searchText &&\n      filteredGroups.length > 0 &&\n      filteredGroups[0].components.length > 0\n    ) {\n      handleComponentSelect(filteredGroups[0].components[0]);\n    }\n  };\n\n  return (\n    <>\n      <Header>\n        <SearchBar\n          autoFocus\n          placeholder=\"Search components...\"\n          value={searchText}\n          onChange={({ target: { value } }) =>\n            handleSearchChange(value)\n          }\n          onKeyDown={({ key }) => handleKeyDown(key)}\n        />\n        <IconButton\n          right\n          onClick={handleClose}\n          data-for=\"tooltip\"\n          data-tip=\"Close\"\n          data-place=\"left\"\n        >\n          <Close />\n        </IconButton>\n      </Header>\n\n      <Content>\n        <Scroll>\n          {filteredGroups.map(({ name, components }) => (\n            <ComponentGroup\n              name={name}\n              components={components}\n              handleComponentSelect={handleComponentSelect}\n              key={name}\n            />\n          ))}\n        </Scroll>\n      </Content>\n    </>\n  );\n};\n\nexport default ComponentSearch;\n","import React, { useState, useEffect, useCallback } from 'react';\n\nimport Modal from '../Modal/Modal';\nimport ComponentConfiguration from './ComponentConfiguration';\nimport ComponentSearch from './ComponentSearch';\n\nconst closeOnEsc = (\n  { code },\n  { handleClose, setSelectedComponent },\n) => {\n  if (code !== 'Escape') return;\n  handleClose();\n  setSelectedComponent(null);\n};\n\nconst ComponentSelect = ({\n  isOpen,\n  groups,\n  handleClose,\n  handleComponentDrop,\n}) => {\n  const [selectedComponent, setSelectedComponent] = useState(null);\n  const callback = useCallback(\n    event => closeOnEsc(event, { handleClose, setSelectedComponent }),\n    [handleClose],\n  );\n\n  useEffect(() => {\n    window.addEventListener('keydown', callback);\n    return () => window.removeEventListener('keydown', callback);\n  }, [callback]);\n\n  if (!isOpen) return null;\n\n  return (\n    <Modal>\n      {selectedComponent ? (\n        <ComponentConfiguration\n          handleClose={() => {\n            handleClose();\n            setSelectedComponent(null);\n          }}\n          handleSubmit={handleComponentDrop}\n          handleBack={() => setSelectedComponent(null)}\n          component={selectedComponent}\n        />\n      ) : (\n        <ComponentSearch\n          handleClose={handleClose}\n          handleComponentSelect={setSelectedComponent}\n          groups={groups}\n        />\n      )}\n    </Modal>\n  );\n};\n\nexport default ComponentSelect;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nconst Container = styled.span`\n  display: inline-flex;\n  align-items: center;\n\n  height: ${props => props.size}px;\n  padding: 0 ${props => props.size / 4}px;\n  margin: 2px ${props => props.size / 8}px;\n\n  font-size: ${props => props.size / 2}px;\n  font-family: monospace;\n  color: #000000c4;\n\n  background: #ececec;\n  border-radius: 4px;\n  border: 1px solid #ffffff17;\n  box-shadow: inset 0 0 ${props => props.size / 4}px #0000000a;\n`;\n\nconst Key = ({ children, size = 16 }) => (\n  <Container size={size}>{children}</Container>\n);\n\nexport default Key;\n","import styled from 'styled-components';\n\nconst ContextMenuIconContainer = styled.div`\n  display: flex;\n  align-items: center;\n\n  width: 16px;\n  height: 16px;\n  margin-right: 16px;\n`;\n\nexport default ContextMenuIconContainer;\n","import styled from 'styled-components';\n\nconst ContextMenuShortcutContainer = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: flex-end;\n  margin-left: 8px;\n`;\n\nexport default ContextMenuShortcutContainer;\n","import React from 'react';\nimport { Menu, Item, Separator } from 'react-contexify';\n\nimport {\n  Duplicate,\n  Copy,\n  Delete,\n  Paste,\n  Redo,\n  Settings,\n  Undo,\n  Cut,\n  ZoomIn,\n  ZoomOut,\n} from '../Icons';\nimport Key from '../Key/Key';\nimport ContextMenuIconContainer from './ContextMenuIconContainer';\nimport ContextMenuShortcutContainer from './ContextMenuShortcutContainer';\n\nconst ComponentContextMenu = ({\n  duplicateSelected,\n  cutSelected,\n  copySelected,\n  pasteSelected,\n  deleteSelected,\n  undo,\n  redo,\n  zoomIn,\n  zoomOut,\n  configureComponent,\n}) => (\n  <Menu id=\"component\">\n    <Item onClick={duplicateSelected}>\n      <ContextMenuIconContainer>\n        <Duplicate />\n      </ContextMenuIconContainer>\n      Duplicate\n      <ContextMenuShortcutContainer>\n        <Key>CTRL</Key>\n        <Key>D</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n\n    <Item onClick={cutSelected}>\n      <ContextMenuIconContainer>\n        <Cut />\n      </ContextMenuIconContainer>\n      Cut\n      <ContextMenuShortcutContainer>\n        <Key>CTRL</Key>\n        <Key>X</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n\n    <Item onClick={copySelected}>\n      <ContextMenuIconContainer>\n        <Copy />\n      </ContextMenuIconContainer>\n      Copy\n      <ContextMenuShortcutContainer>\n        <Key>CTRL</Key>\n        <Key>C</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n\n    <Item onClick={pasteSelected}>\n      <ContextMenuIconContainer>\n        <Paste />\n      </ContextMenuIconContainer>\n      Paste\n      <ContextMenuShortcutContainer>\n        <Key>CTRL</Key>\n        <Key>V</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n\n    <Item onClick={deleteSelected}>\n      <ContextMenuIconContainer>\n        <Delete />\n      </ContextMenuIconContainer>\n      Delete\n      <ContextMenuShortcutContainer>\n        <Key>Delete</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n\n    <Separator />\n\n    <Item onClick={zoomIn}>\n      <ContextMenuIconContainer>\n        <ZoomIn />\n      </ContextMenuIconContainer>\n      Zoom in\n    </Item>\n\n    <Item onClick={zoomOut}>\n      <ContextMenuIconContainer>\n        <ZoomOut />\n      </ContextMenuIconContainer>\n      Zoom out\n    </Item>\n\n    <Separator />\n\n    <Item onClick={undo}>\n      <ContextMenuIconContainer>\n        <Undo />\n      </ContextMenuIconContainer>\n      Undo\n      <ContextMenuShortcutContainer>\n        <Key>CTRL</Key>\n        <Key>Z</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n\n    <Item onClick={redo}>\n      <ContextMenuIconContainer>\n        <Redo />\n      </ContextMenuIconContainer>\n      Redo\n      <ContextMenuShortcutContainer>\n        <Key>CTRL</Key>\n        <Key>SHIFT</Key>\n        <Key>Z</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n\n    <Separator />\n\n    <Item\n      onClick={({ props: component }) =>\n        configureComponent(component)\n      }\n    >\n      <ContextMenuIconContainer>\n        <Settings />\n      </ContextMenuIconContainer>\n      Edit configurations...\n      <ContextMenuShortcutContainer>\n        <Key>CTRL</Key>\n        <Key>E</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n  </Menu>\n);\n\nexport default ComponentContextMenu;\n","import React from 'react';\nimport { Menu, Item, Separator } from 'react-contexify';\n\nimport { Redo, Undo, Paste, ZoomIn, ZoomOut } from '../Icons';\nimport Key from '../Key/Key';\nimport ContextMenuIconContainer from './ContextMenuIconContainer';\nimport ContextMenuShortcutContainer from './ContextMenuShortcutContainer';\n\nconst DiagramContextMenu = ({\n  pasteSelected,\n  undo,\n  redo,\n  zoomIn,\n  zoomOut,\n}) => (\n  <Menu id=\"diagram\">\n    <Item onClick={pasteSelected}>\n      <ContextMenuIconContainer>\n        <Paste />\n      </ContextMenuIconContainer>\n      Paste\n      <ContextMenuShortcutContainer>\n        <Key>CTRL</Key>\n        <Key>V</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n\n    <Separator />\n\n    <Item onClick={zoomIn}>\n      <ContextMenuIconContainer>\n        <ZoomIn />\n      </ContextMenuIconContainer>\n      Zoom in\n    </Item>\n    <Item onClick={zoomOut}>\n      <ContextMenuIconContainer>\n        <ZoomOut />\n      </ContextMenuIconContainer>\n      Zoom out\n    </Item>\n\n    <Separator />\n\n    <Item onClick={undo}>\n      <ContextMenuIconContainer>\n        <Undo />\n      </ContextMenuIconContainer>\n      Undo\n      <ContextMenuShortcutContainer>\n        <Key>CTRL</Key>\n        <Key>Z</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n\n    <Item onClick={redo}>\n      <ContextMenuIconContainer>\n        <Redo />\n      </ContextMenuIconContainer>\n      Redo\n      <ContextMenuShortcutContainer>\n        <Key>CTRL</Key>\n        <Key>SHIFT</Key>\n        <Key>Z</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n  </Menu>\n);\n\nexport default DiagramContextMenu;\n","import React from 'react';\n\nimport ComponentContextMenu from './ComponentContextMenu';\nimport DiagramContextMenu from './DiagramContextMenu';\n\nimport 'react-contexify/dist/ReactContexify.min.css';\n\nconst ContextMenus = ({\n  duplicateSelected,\n  cutSelected,\n  copySelected,\n  pasteSelected,\n  deleteSelected,\n  undo,\n  redo,\n  zoomIn,\n  zoomOut,\n  configureComponent,\n}) => (\n  <>\n    <DiagramContextMenu\n      pasteSelected={pasteSelected}\n      undo={undo}\n      redo={redo}\n      zoomIn={zoomIn}\n      zoomOut={zoomOut}\n    />\n    <ComponentContextMenu\n      duplicateSelected={duplicateSelected}\n      cutSelected={cutSelected}\n      copySelected={copySelected}\n      pasteSelected={pasteSelected}\n      deleteSelected={deleteSelected}\n      undo={undo}\n      redo={redo}\n      zoomIn={zoomIn}\n      zoomOut={zoomOut}\n      configureComponent={configureComponent}\n    />\n  </>\n);\n\nexport default ContextMenus;\n","import React, { useEffect, useCallback } from 'react';\nimport GitHubButton from 'react-github-button';\n\nimport styled from 'styled-components';\n\nimport { version } from '../../../package.json';\nimport { Close } from '../Icons';\nimport Modal from '../Modal/Modal';\nimport {\n  Header,\n  Title,\n  Content,\n  IconButton,\n} from '../Modal/ModalContentLayout';\n\nconst Version = styled.span`\n  font-weight: bold;\n  font-size: 1.1em;\n  margin-top: -32px;\n`;\n\nconst Divider = styled.hr`\n  width: 80%;\n  margin: 24px;\n  border-color: white;\n`;\n\nconst closeOnEsc = ({ code }, handleClose) => {\n  if (code !== 'Escape') return;\n  handleClose();\n};\n\nconst HelpAbout = ({ isOpen, handleClose }) => {\n  const callback = useCallback(\n    event => closeOnEsc(event, handleClose),\n    [handleClose],\n  );\n\n  useEffect(() => {\n    window.addEventListener('keydown', callback);\n    return () => window.removeEventListener('keydown', callback);\n  }, [callback]);\n\n  if (!isOpen) return null;\n\n  return (\n    <Modal>\n      <Header>\n        <Title>About</Title>\n        <IconButton\n          right\n          onClick={handleClose}\n          data-for=\"tooltip\"\n          data-tip=\"Close\"\n          data-place=\"left\"\n        >\n          <Close />\n        </IconButton>\n      </Header>\n\n      <Content\n        style={{\n          paddingTop: 0,\n          marginTop: 16,\n          overflowY: 'auto',\n          height: 'calc(100% - 70px)',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <img\n            src={`${process.env.PUBLIC_URL}/social.png`}\n            alt=\"logossim's logo\"\n            style={{ width: '75%' }}\n          />\n          <Version>Version {version}</Version>\n        </div>\n\n        <Divider />\n\n        <div style={{ margin: '0 32px' }}>\n          <p style={{ textAlign: 'center' }}>\n            If you want to know more about the project,{' '}\n            <a\n              href=\"https://github.com/renato-bohler/logossim\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              check us out on GitHub!\n            </a>\n          </p>\n          <GitHubButton\n            type=\"stargazers\"\n            namespace=\"renato-bohler\"\n            repo=\"logossim\"\n          />\n          <p style={{ textAlign: 'center' }}>\n            <strong>You can help us</strong> make logossim better! If\n            you know a little bit of web development, you can quite\n            easily develop new components to the application.\n          </p>\n        </div>\n\n        <Divider />\n\n        <div style={{ margin: '0 32px' }}>\n          <p style={{ textAlign: 'center' }}>\n            This is a project built by{' '}\n            <a\n              href=\"https://renato-bohler.github.io/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Renato Böhler\n            </a>{' '}\n            as an undegraduate thesis on Computer Engineering at{' '}\n            <a\n              href=\"http://www.utfpr.edu.br/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              UTFPR\n            </a>\n            .\n          </p>\n        </div>\n      </Content>\n    </Modal>\n  );\n};\n\nexport default HelpAbout;\n","import React, { useEffect, useCallback } from 'react';\n\nimport styled from 'styled-components';\n\nimport { Close } from '../Icons';\nimport Key from '../Key/Key';\nimport Modal from '../Modal/Modal';\nimport {\n  Header,\n  Title,\n  Subtitle,\n  Content,\n  IconButton,\n} from '../Modal/ModalContentLayout';\n\nconst closeOnEsc = ({ code }, handleClose) => {\n  if (code !== 'Escape') return;\n  handleClose();\n};\n\nconst TableContainer = styled.div`\n  display: flex;\n`;\n\nconst Table = styled.table`\n  flex: 1;\n  margin: 8px 0;\n`;\n\nconst TableColumn = styled.td`\n  padding: 8px;\n\n  border: 1px solid #5d2eb526;\n  border-radius: 8px;\n`;\n\nconst HelpKeyboardShortcuts = ({ isOpen, handleClose }) => {\n  const callback = useCallback(\n    event => closeOnEsc(event, handleClose),\n    [handleClose],\n  );\n\n  useEffect(() => {\n    window.addEventListener('keydown', callback);\n    return () => window.removeEventListener('keydown', callback);\n  }, [callback]);\n\n  if (!isOpen) return null;\n\n  return (\n    <Modal>\n      <Header>\n        <Title>Keyboard shortcuts</Title>\n        <IconButton\n          right\n          onClick={handleClose}\n          data-for=\"tooltip\"\n          data-tip=\"Close\"\n          data-place=\"left\"\n        >\n          <Close />\n        </IconButton>\n      </Header>\n\n      <Content\n        style={{\n          paddingTop: 16,\n          marginTop: 16,\n          overflowY: 'auto',\n          height: 'calc(100% - 70px)',\n        }}\n      >\n        <span>\n          <strong>Note:</strong> some of the actions may have two\n          shortcuts.\n        </span>\n\n        <Subtitle style={{ marginTop: 32 }}>\n          Circuit management\n        </Subtitle>\n        <TableContainer>\n          <Table>\n            <tbody>\n              <tr>\n                <TableColumn>Save</TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>S</Key>\n                </TableColumn>\n                <TableColumn />\n              </tr>\n              <tr>\n                <TableColumn>Load</TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>L</Key>\n                </TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>SHIFT</Key>\n                  <Key size={32}>S</Key>\n                </TableColumn>\n              </tr>\n              <tr>\n                <TableColumn>Undo</TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>Z</Key>\n                </TableColumn>\n                <TableColumn />\n              </tr>\n              <tr>\n                <TableColumn>Redo</TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>SHIFT</Key>\n                  <Key size={32}>Z</Key>\n                </TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>Y</Key>\n                </TableColumn>\n              </tr>\n            </tbody>\n          </Table>\n        </TableContainer>\n\n        <Subtitle style={{ marginTop: 32 }}>\n          Component management\n        </Subtitle>\n        <TableContainer>\n          <Table>\n            <tbody>\n              <tr>\n                <TableColumn>Edit configurations</TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>E</Key>\n                </TableColumn>\n              </tr>\n              <tr>\n                <TableColumn>Duplicate</TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>D</Key>\n                </TableColumn>\n              </tr>\n              <tr>\n                <TableColumn>Delete</TableColumn>\n                <TableColumn>\n                  <Key size={32}>Delete</Key>\n                </TableColumn>\n              </tr>\n              <tr>\n                <TableColumn>Copy</TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>C</Key>\n                </TableColumn>\n              </tr>\n              <tr>\n                <TableColumn>Paste</TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>V</Key>\n                </TableColumn>\n              </tr>\n              <tr>\n                <TableColumn>Cut</TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>X</Key>\n                </TableColumn>\n              </tr>\n            </tbody>\n          </Table>\n        </TableContainer>\n\n        <Subtitle style={{ marginTop: 32 }}>\n          Simulation control\n        </Subtitle>\n        <TableContainer>\n          <Table>\n            <tbody>\n              <tr>\n                <TableColumn>Play</TableColumn>\n                <TableColumn>\n                  <Key size={32}>SPACE</Key>\n                </TableColumn>\n                <TableColumn />\n              </tr>\n              <tr>\n                <TableColumn>Pause</TableColumn>\n                <TableColumn>\n                  <Key size={32}>SPACE</Key>\n                </TableColumn>\n                <TableColumn />\n              </tr>\n              <tr>\n                <TableColumn>Stop</TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>SPACE</Key>\n                </TableColumn>\n                <TableColumn>\n                  <Key size={32}>ESC</Key>\n                </TableColumn>\n              </tr>\n            </tbody>\n          </Table>\n        </TableContainer>\n      </Content>\n    </Modal>\n  );\n};\n\nexport default HelpKeyboardShortcuts;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  position: absolute;\n  z-index: 10;\n\n  font-size: 2em;\n  font-weight: bold;\n  font-family: monospace;\n\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  background: #ffffff80;\n  border: 1px solid #6441a5;\n  border-radius: 16px;\n\n  padding: 16px;\n`;\n\nconst LoadingExample = () => (\n  <Container>Loading example...</Container>\n);\n\nexport default LoadingExample;\n","import React from 'react';\n\nimport styled, { keyframes } from 'styled-components';\n\nconst BACKGROUND_COLOR = {\n  error: '#f44336',\n  warning: '#ff9800',\n  info: '#2196f3',\n  success: '#4caf50',\n};\n\nconst TRANSITION_DURATION = 500;\n\nconst Container = styled.div`\n  position: absolute;\n  top: ${props => (props.open ? '5px' : '-200px')};\n  left: 50%;\n  transition: top ${TRANSITION_DURATION}ms;\n  transform: translateX(-50%);\n  overflow: hidden;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n\n  border-radius: 10px;\n  min-width: 300px;\n  min-height: 50px;\n\n  cursor: pointer;\n\n  background: ${props => BACKGROUND_COLOR[props.type]};\n  color: white;\n  font-size: 14px;\n  font-weight: bold;\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2),\n    0px 6px 10px 0px rgba(0, 0, 0, 0.14),\n    0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n  z-index: 2;\n`;\n\nconst Message = styled.span`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  width: 100%;\n  align-items: flex-start;\n  margin-top: 5px;\n  padding: 8px 16px;\n`;\n\nconst progress = keyframes`\n  0% {\n    width: 100%;\n  }\n  100% {\n    width: 0;\n  }\n`;\n\nconst ProgressBar = styled.div`\n  background: #ffffff80;\n  height: 5px;\n  border-radius: 5px;\n  align-self: flex-start;\n  width: 100%;\n\n  animation-name: ${progress};\n  animation-play-state: ${props =>\n    props.paused ? 'paused' : 'running'};\n  animation-duration: ${props =>\n    props.timeout - TRANSITION_DURATION / 2}ms;\n  animation-delay: ${TRANSITION_DURATION / 2}ms;\n  animation-timing-function: linear;\n`;\n\nconst Snackbar = ({ open, handleClose, message, type, timeout }) => {\n  return (\n    <Container\n      type={type}\n      timeout={timeout}\n      open={open}\n      onClick={handleClose}\n    >\n      <Message>\n        {message.split(`\\n`).map((string, index) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <div key={index}>{string}</div>\n        ))}\n      </Message>\n\n      {open && <ProgressBar timeout={timeout} />}\n    </Container>\n  );\n};\n\nexport default Snackbar;\n","import React, { useState, useRef, useEffect } from 'react';\n\nimport styled from 'styled-components';\n\nimport { Edit, Chevrons } from '../Icons';\n\nconst Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n\n  z-index: 2;\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  background: white;\n  border-bottom: 1px solid #e5e5e5;\n  box-shadow: 0px -10px 20px 0px black;\n  padding: 12px;\n\n  transform: ${({ isHidden }) =>\n    isHidden ? 'translateY(-100%)' : 'none'};\n  transition: 0.5s ease-in-out;\n`;\n\nconst NameContainer = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 4px;\n  border: 1px solid\n    ${({ isFocused }) => (isFocused ? '#e5e5e5' : 'transparent')};\n  border-radius: 4px;\n  cursor: pointer;\n  &:hover {\n    border: 1px solid #e5e5e5;\n  }\n`;\n\nconst NameInput = styled.input`\n  background: none;\n  border: none;\n  cursor: pointer;\n  outline: none;\n  font-size: 20px;\n`;\n\nconst IconButton = styled.button`\n  border: none;\n  background: none;\n  outline: none;\n  cursor: pointer;\n`;\n\nconst ButtonsContainer = styled.div`\n  display: flex;\n`;\n\nconst Button = styled.button.attrs(({ ...props }) => ({\n  ...props,\n  type: 'button',\n}))`\n  border: none;\n  border-radius: 5px;\n  background: ${props => {\n    switch (props.color) {\n      case 'green':\n        return '#07d26b';\n      case 'orange':\n        return 'orange';\n      default:\n        return 'gray';\n    }\n  }};\n\n  color: white;\n  font-size: 1.2em;\n\n  min-width: 110px;\n  padding: 5px 20px;\n  margin: 5px;\n\n  transition: 0.5s ease-in-out;\n\n  &:disabled {\n    opacity: 10%;\n    cursor: not-allowed;\n    background: gray;\n  }\n`;\n\nconst FileInput = styled.input`\n  display: none;\n`;\n\nconst HelpButton = styled.button.attrs(({ ...props }) => ({\n  ...props,\n  type: 'button',\n}))`\n  background: rgba(255, 255, 255, 0.6);\n  border-radius: 50%;\n  border: 1px solid #6441a5;\n\n  width: 34px;\n  height: 34px;\n\n  margin: 5px;\n\n  color: #6441a5;\n  font-weight: bold;\n  font-size: 1.3em;\n\n  &:focus,\n  &:hover {\n    background: #6441a5;\n    border: 1px solid rgba(255, 255, 255, 0.6);\n    color: rgba(255, 255, 255, 0.6);\n  }\n`;\n\nconst HelpButtonMenu = styled.div`\n  position: absolute;\n  top: 80px;\n  transform: translateX(calc(17px + -50%));\n\n  display: flex;\n  flex-direction: column;\n\n  background: rgba(255, 255, 255, 0.6);\n  border: 1px solid #6441a5;\n  border-radius: 10px;\n  padding: 3px;\n\n  z-index: 3;\n`;\n\nconst HelpButtonMenuItem = styled.button`\n  font-size: 14px;\n  color: #222;\n  padding: 16px;\n  border: 0;\n  background: transparent;\n  border-bottom: ${props =>\n    props.last ? 'none' : '1px solid #6441a5'};\n\n  &:focus,\n  &:hover {\n    color: #6441a5;\n  }\n`;\n\nconst HideButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  top: 80px;\n  right: 20px;\n  background: white;\n  border: 1px solid #e5e5e5;\n  border-radius: 50%;\n  width: 30px;\n  height: 30px;\n  box-shadow: 0px 0px 12px 0px #6b6b6b;\n\n  svg {\n    transform: ${({ isHidden }) =>\n      isHidden ? 'rotate(180deg)' : 'none'};\n    transition: 0.5s ease-in-out;\n  }\n`;\n\nconst Titlebar = ({\n  circuitName,\n  isCircuitNameFocused,\n  handleChangeCircuitName,\n  handleFocusCircuitName,\n  handleBlurCircuitName,\n  handleClickSave,\n  handleFileLoad,\n  handleClickKeyboardShortcuts,\n  handleClickRedoTour,\n  handleClickAbout,\n  disabled,\n}) => {\n  const helpButtonRef = useRef();\n  const helpMenuRef = useRef();\n  const nameInputRef = useRef();\n  const fileInputRef = useRef();\n  const [isHelpMenuOpen, setHelpMenuOpen] = useState(false);\n  const [isHidden, setHidden] = useState(false);\n\n  const handleHideClick = () => setHidden(hidden => !hidden);\n  const handleNameConfirm = event => {\n    if (!nameInputRef.current) return;\n\n    const { key } = event;\n    if (key === 'Enter' || key === 'Escape')\n      nameInputRef.current.blur();\n  };\n  const handleNameEditClick = () => {\n    if (!nameInputRef.current) return;\n    nameInputRef.current.focus();\n  };\n  const handleToggleHelpMenu = () => setHelpMenuOpen(!isHelpMenuOpen);\n  const handleClickLoad = () => {\n    if (!fileInputRef.current) return;\n    fileInputRef.current.click();\n  };\n  const handleClickAway = event => {\n    if (\n      helpMenuRef.current &&\n      !helpMenuRef.current.contains(event.target) &&\n      helpButtonRef.current &&\n      !helpButtonRef.current.contains(event.target)\n    ) {\n      handleToggleHelpMenu();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickAway);\n    return () =>\n      document.removeEventListener('mousedown', handleClickAway);\n  });\n\n  return (\n    <Container isHidden={isHidden}>\n      <NameContainer\n        isFocused={isCircuitNameFocused}\n        data-for=\"tooltip\"\n        data-tip=\"Rename your circuit...\"\n        data-place=\"right\"\n      >\n        <NameInput\n          ref={nameInputRef}\n          value={circuitName}\n          onChange={handleChangeCircuitName}\n          onFocus={handleFocusCircuitName}\n          onBlur={handleBlurCircuitName}\n          onKeyDown={handleNameConfirm}\n          maxLength={50}\n        />\n        <IconButton onClick={handleNameEditClick}>\n          <Edit />\n        </IconButton>\n      </NameContainer>\n\n      <ButtonsContainer>\n        <HelpButton\n          id=\"help-button\"\n          ref={helpButtonRef}\n          onClick={handleToggleHelpMenu}\n          data-for=\"tooltip\"\n          data-tip=\"Get help...\"\n          data-place=\"left\"\n        >\n          <span>?</span>\n        </HelpButton>\n        {isHelpMenuOpen && (\n          <HelpButtonMenu ref={helpMenuRef}>\n            <HelpButtonMenuItem\n              onClick={() => {\n                handleClickKeyboardShortcuts();\n                handleToggleHelpMenu();\n              }}\n            >\n              Keyboard shortcuts\n            </HelpButtonMenuItem>\n            <HelpButtonMenuItem\n              onClick={() => {\n                setHidden(false);\n                handleClickRedoTour();\n                handleToggleHelpMenu();\n              }}\n            >\n              Redo the tour\n            </HelpButtonMenuItem>\n            <HelpButtonMenuItem\n              onClick={() => {\n                handleClickAbout();\n                handleToggleHelpMenu();\n              }}\n              last\n            >\n              About\n            </HelpButtonMenuItem>\n          </HelpButtonMenu>\n        )}\n\n        <div id=\"save-load-buttons\">\n          <Button\n            color=\"green\"\n            onClick={handleClickSave}\n            disabled={disabled}\n            data-for=\"tooltip\"\n            data-tip=\"Save circuit to file\"\n            data-place=\"left\"\n          >\n            Save\n          </Button>\n          <Button\n            color=\"orange\"\n            disabled={disabled}\n            onClick={handleClickLoad}\n            data-for=\"tooltip\"\n            data-tip=\"Load circuit from file...\"\n            data-place=\"left\"\n          >\n            Load\n          </Button>\n          <FileInput\n            id=\"file-input\"\n            ref={fileInputRef}\n            type=\"file\"\n            accept=\".lgsim\"\n            onChange={handleFileLoad}\n          />\n        </div>\n      </ButtonsContainer>\n\n      <HideButton\n        isHidden={isHidden}\n        onClick={handleHideClick}\n        data-for=\"tooltip\"\n        data-tip={isHidden ? 'Show titlebar' : 'Hide titlebar'}\n        data-place=\"left\"\n      >\n        <Chevrons />\n      </HideButton>\n    </Container>\n  );\n};\n\nexport default Titlebar;\n","export const DIMENSIONS = { width: 180, height: 135 };\n\n/**\n * Example circuit used to make the tour\n */\nexport default {\n  id: 'tour-circuit',\n  name: \"Logossim's tour circuit\",\n  createdAt: '2020-05-21T20:18:00.000Z',\n  updatedAt: '2020-09-08T11:47:00.000Z',\n  circuit: {\n    id: 'tour-circuit',\n    locked: false,\n    offsetX: 0,\n    offsetY: 0,\n    zoom: 100,\n    gridSize: 15,\n    layers: [\n      {\n        id: '4d94cbed-1005-4dc6-b0e3-44d71dc14380',\n        type: 'diagram-links',\n        isSvg: true,\n        transformed: true,\n        models: {\n          'clock-out-link': {\n            id: 'clock-out-link',\n            type: 'link',\n            selected: false,\n            source: 'clock',\n            sourcePort: 'clock-port',\n            target: 'and',\n            targetPort: 'and-port-in0',\n            points: [\n              {\n                id: 'bb7c0935-a272-45ea-b47a-f9b79fa7fac3',\n                type: 'point',\n                x: 30,\n                y: 15,\n              },\n              {\n                id: '2f339615-1c6c-450c-9862-06742ed3893f',\n                type: 'point',\n                x: 60,\n                y: 15,\n              },\n            ],\n            labels: [],\n            bifurcations: [],\n            bifurcationSource: null,\n            bifurcationTarget: null,\n            value: null,\n            bits: 1,\n          },\n          'and-out-link': {\n            id: 'and-out-link',\n            type: 'link',\n            selected: false,\n            source: 'and',\n            sourcePort: 'and-port-out',\n            target: null,\n            targetPort: null,\n            points: [\n              {\n                id: 'e4916002-7182-4866-9df7-46473e7de8bc',\n                type: 'point',\n                x: 150,\n                y: 45,\n              },\n              {\n                id: 'd677077d-9750-4831-be02-566294c988b1',\n                type: 'point',\n                x: 180,\n                y: 45,\n              },\n            ],\n            labels: [],\n            bifurcations: [],\n            bifurcationSource: null,\n            bifurcationTarget: null,\n            value: null,\n            bits: 1,\n          },\n          'button-out-link': {\n            id: 'button-out-link',\n            type: 'link',\n            selected: false,\n            source: 'button',\n            sourcePort: 'c241c69b-8e1a-45be-9982-4c96a537584f',\n            target: 'and',\n            targetPort: 'and-port-in1',\n            points: [\n              {\n                id: 'fbd656c6-6a36-4903-94b8-c715db34052d',\n                type: 'point',\n                x: 30,\n                y: 75,\n              },\n              {\n                id: 'f70cce22-3d5d-4257-9916-b602da9a901b',\n                type: 'point',\n                x: 60,\n                y: 75,\n              },\n            ],\n            labels: [],\n            bifurcations: ['not-in-link'],\n            bifurcationSource: null,\n            bifurcationTarget: null,\n            value: null,\n            bits: 1,\n          },\n          'not-out-link': {\n            id: 'not-out-link',\n            type: 'link',\n            selected: false,\n            source: 'not',\n            sourcePort: 'not-port-out',\n            target: null,\n            targetPort: null,\n            points: [\n              {\n                id: 'ba84ed0f-78ed-43c2-93d8-cf907b91b5fd',\n                type: 'point',\n                x: 120,\n                y: 120,\n              },\n              {\n                id: '78a6e161-97c3-4a31-a46c-244469ac75ff',\n                type: 'point',\n                x: 180,\n                y: 120,\n              },\n            ],\n            labels: [],\n            bifurcations: [],\n            bifurcationSource: null,\n            bifurcationTarget: null,\n            value: null,\n            bits: 1,\n          },\n          'not-in-link': {\n            id: 'not-in-link',\n            type: 'link',\n            selected: false,\n            source: null,\n            sourcePort: null,\n            target: 'not',\n            targetPort: '589ba5d7-8c75-4c82-9068-a67c9b023f77',\n            points: [\n              {\n                id: 'fada8e3b-4b46-4a24-a7ec-e3ca3bab77ab',\n                type: 'point',\n                x: 45,\n                y: 75,\n              },\n              {\n                id: 'f31e71e6-5d72-4f17-9af1-c23bfd257980',\n                type: 'point',\n                x: 45,\n                y: 120,\n              },\n              {\n                id: '2e747ee3-1c90-4e95-a40b-f221eb0710b3',\n                type: 'point',\n                x: 75,\n                y: 120,\n              },\n            ],\n            labels: [],\n            bifurcations: [],\n            bifurcationSource: 'button-out-link',\n            bifurcationTarget: null,\n            value: null,\n            bits: 1,\n          },\n        },\n      },\n      {\n        id: '9d30c1dd-e474-45b1-ad88-6b7739678ef3',\n        type: 'diagram-nodes',\n        isSvg: false,\n        transformed: true,\n        models: {\n          clock: {\n            id: 'clock',\n            type: 'Clock',\n            selected: false,\n            x: 0,\n            y: 0,\n            ports: [\n              {\n                id: 'clock-port',\n                type: 'Port',\n                selected: false,\n                x: 25,\n                y: 10,\n                name: 'out',\n                parentNode: 'clock',\n                links: ['clock-out-link'],\n                input: false,\n                value: null,\n                bits: 1,\n              },\n            ],\n            configurations: {\n              FREQUENCY_HZ: 0.5,\n              HIGH_DURATION: 1,\n              LOW_DURATION: 1,\n            },\n          },\n          and: {\n            id: 'and',\n            type: 'And',\n            selected: false,\n            x: 60,\n            y: 0,\n            ports: [\n              {\n                id: 'and-port-in0',\n                type: 'Port',\n                selected: false,\n                x: 55,\n                y: 10,\n                name: 'in0',\n                parentNode: 'and',\n                links: ['clock-out-link'],\n                input: true,\n                value: null,\n                bits: 1,\n              },\n              {\n                id: 'and-port-in1',\n                type: 'Port',\n                selected: false,\n                x: 55,\n                y: 70,\n                name: 'in1',\n                parentNode: 'and',\n                links: ['button-out-link'],\n                input: true,\n                value: null,\n                bits: 1,\n              },\n              {\n                id: 'and-port-out',\n                type: 'Port',\n                selected: false,\n                x: 145,\n                y: 40,\n                name: 'out',\n                parentNode: 'and',\n                links: ['and-out-link'],\n                input: false,\n                value: null,\n                bits: 1,\n              },\n            ],\n            configurations: { DATA_BITS: '1', INPUT_PORTS_NUMBER: 2 },\n          },\n          button: {\n            id: 'button',\n            type: 'Button',\n            selected: false,\n            x: 0,\n            y: 60,\n            ports: [\n              {\n                id: 'c241c69b-8e1a-45be-9982-4c96a537584f',\n                type: 'Port',\n                selected: false,\n                x: 25,\n                y: 70,\n                name: 'out',\n                parentNode: 'button',\n                links: ['button-out-link'],\n                input: false,\n                value: null,\n                bits: 1,\n              },\n            ],\n            configurations: {},\n          },\n          not: {\n            id: 'not',\n            type: 'Not',\n            selected: false,\n            x: 75,\n            y: 105,\n            ports: [\n              {\n                id: '589ba5d7-8c75-4c82-9068-a67c9b023f77',\n                type: 'Port',\n                selected: false,\n                x: 70,\n                y: 115,\n                name: 'in',\n                parentNode: 'not',\n                links: ['not-in-link'],\n                input: true,\n                value: null,\n                bits: 1,\n              },\n              {\n                id: 'not-port-out',\n                type: 'Port',\n                selected: false,\n                x: 115,\n                y: 115,\n                name: 'out',\n                parentNode: 'not',\n                links: ['not-out-link'],\n                input: false,\n                value: null,\n                bits: 1,\n              },\n            ],\n            configurations: {\n              DATA_BITS: '1',\n            },\n          },\n        },\n      },\n    ],\n  },\n};\n","import React, { Component } from 'react';\nimport GitHubButton from 'react-github-button';\nimport Joyride, { ACTIONS, EVENTS } from 'react-joyride';\n\nimport styled, { keyframes } from 'styled-components';\n\nimport Key from '../Key/Key';\nimport bifurcation from './images/bifurcation.gif';\nimport contextMenu from './images/context-menu.gif';\nimport simulation from './images/simulation.gif';\nimport wire from './images/wire.gif';\nimport { DIMENSIONS } from './tourCircuit';\n\nconst pulse = keyframes`\n  0% {\n    transform: scale(1);\n  }\n\n  55% {\n    background-color: rgba(42, 8, 69, 0.5);\n    transform: scale(1.2);\n  }\n`;\n\nconst Pulse = styled.span`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  animation: ${pulse} 1s ease-in-out infinite;\n  background-color: ${props => props.color};\n  border: 1px solid rgba(42, 8, 69, 0.7);\n  border-radius: 50%;\n\n  height: ${props => props.size}px;\n  width: ${props => props.size}px;\n`;\n\nconst Beacon = React.forwardRef((props, ref) => (\n  <Pulse\n    size={30}\n    color=\"rgba(100, 65, 165, 0.3)\"\n    ref={ref}\n    {...props}\n  >\n    <Pulse size={20} color=\"rgba(100, 65, 165, 0.5)\" />\n  </Pulse>\n));\n\nconst imageStyle = {\n  alignSelf: 'center',\n  borderRadius: 25,\n  boxShadow: 'rgba(171, 171, 171, 0.38) 0px 13px 20px 0px',\n  marginBottom: 16,\n};\n\nexport default class Tour extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentStep: 0,\n      steps: [\n        {\n          title: 'Welcome!',\n          content: (\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\n              <img\n                src={`${process.env.PUBLIC_URL}/social.png`}\n                alt=\"logossim's logo\"\n                style={{\n                  width: 300,\n                  height: 158,\n                  alignSelf: 'center',\n                }}\n              />\n              <p>\n                This is <strong>logossim</strong>: an open source\n                digital logic simulator, built for the web and to be\n                extensible.\n              </p>\n              <p>Would you like to take a quick tour?</p>\n            </div>\n          ),\n          target: 'body',\n          placement: 'center',\n          showProgress: false,\n          disableOverlayClose: false,\n          locale: {\n            skip: 'No, thanks',\n            next: 'Yes, please!',\n          },\n        },\n        {\n          target: '#tour-circuit-area-wrapper',\n          title: 'This is the circuit workstation',\n          content: (\n            <p>\n              Here&apos;s where you are going to draw your circuits\n            </p>\n          ),\n        },\n        {\n          target: '#component-select-button',\n          title: 'Adding components',\n          content: (\n            <span>\n              <p>And you&apos;ll start by adding some components.</p>\n              <p>\n                You can do it by clicking on this button, then\n                you&apos;ll see all available components, so you can\n                create awesome circuits...\n              </p>\n              <p>\n                <strong>Hint:</strong> use the\n                <Key size={24}>CTRL</Key>\n                <Key size={24}>A</Key> shortcut.\n              </p>\n            </span>\n          ),\n          placement: 'top',\n        },\n        {\n          target: '#tour-circuit-wrapper',\n          title: 'Adding components',\n          content: <p>... like this one, for example!</p>,\n          spotlightPadding: 30,\n        },\n        {\n          target: '#tour-circuit-wrapper',\n          title: 'Managing components',\n          content: (\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\n              <p>\n                Notice that you can right click anywhere on the canvas\n                to access some handy commands, like duplicate, undo\n                &amp; redo and component configuration editing.\n              </p>\n              <img\n                src={contextMenu}\n                alt=\"Context menu example video\"\n                style={{\n                  ...imageStyle,\n                  width: 268,\n                  height: 132,\n                }}\n              />\n            </div>\n          ),\n          spotlightPadding: 30,\n        },\n        {\n          target: '[data-linkid=\"clock-out-link\"]',\n          title: 'Wiring components',\n          content: (\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\n              <p>\n                To wire components together, you can drag a\n                component&apos;s port onto another port.\n              </p>\n              <img\n                src={wire}\n                alt=\"Wiring components example video\"\n                style={{\n                  ...imageStyle,\n                  width: 268,\n                  height: 178,\n                }}\n              />\n              <p>\n                <strong>Oh! Important note:</strong> you can select a\n                wire by clicking it, and delete it using the Delete\n                key.\n              </p>\n            </div>\n          ),\n          placement: 'top',\n          spotlightPadding: 45,\n        },\n        {\n          target: '[data-linkid=\"not-in-link\"]',\n          title: 'Wiring components',\n          content: (\n            <span\n              style={{ display: 'flex', flexDirection: 'column' }}\n            >\n              <p>\n                You can also drag a new wire from an existing wire.\n              </p>\n              <img\n                src={bifurcation}\n                alt=\"Bifurcating wires example video\"\n                style={{\n                  ...imageStyle,\n                  width: 268,\n                  height: 160,\n                }}\n              />\n              <p>\n                <strong>Another important note:</strong> you can leave\n                the wire with a loose end and connect it afterwards.\n              </p>\n            </span>\n          ),\n          placement: 'top',\n          spotlightPadding: 45,\n        },\n        {\n          target: '#simulation-control-buttons',\n          title: 'Simulation control',\n          content: (\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\n              <p>\n                After wiring it all together, you just need to run the\n                simulation to test your ideas!\n              </p>\n              <img\n                src={simulation}\n                alt=\"Simulation execution example video\"\n                style={{\n                  ...imageStyle,\n                  width: 254,\n                  height: 194,\n                }}\n              />\n              <p>Useful shortcuts:</p>\n              <ul style={{ margin: 0 }}>\n                <li>\n                  <strong>Play/pause:</strong>\n                  <Key size={24}>SPACE</Key>\n                </li>\n                <li>\n                  <strong>Stop:</strong>\n                  <Key size={24}>CTRL</Key>\n                  <Key size={24}>SPACE</Key>\n                </li>\n              </ul>\n            </div>\n          ),\n          placement: 'top',\n        },\n        {\n          target: '#help-button',\n          title: 'Still need help?',\n          content: (\n            <span>\n              <p>\n                In case you need any assistance in the future, come\n                back to this help button. Here you&apos;ll find:\n              </p>\n              <ol style={{ lineHeight: '200%' }}>\n                <li>All keyboard shortcuts</li>\n                <li>More about the project</li>\n                <li>\n                  And this tour, if you feel like doing it another\n                  time\n                </li>\n              </ol>\n            </span>\n          ),\n        },\n        {\n          target: '#save-load-buttons',\n          title: 'By the way...',\n          content: (\n            <span>\n              <p>\n                After you&apos;ve done your amazing circuit,\n                don&apos;t forget that you can save it and reload it\n                later!\n              </p>\n              <p>Useful shortcuts:</p>\n              <ul style={{ margin: 0 }}>\n                <li>\n                  <strong>Save:</strong>\n                  <Key size={24}>CTRL</Key>\n                  <Key size={24}>S</Key>\n                </li>\n                <li>\n                  <strong>Load:</strong>\n                  <Key size={24}>CTRL</Key>\n                  <Key size={24}>L</Key>\n                </li>\n              </ul>\n            </span>\n          ),\n        },\n        {\n          target: 'body',\n          title: \"And that's all folks!\",\n          content: (\n            <div>\n              <p>\n                If you want to know more about the project,{' '}\n                <a\n                  href=\"https://github.com/renato-bohler/logossim\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  check us out on GitHub!\n                </a>\n              </p>\n              <GitHubButton\n                type=\"stargazers\"\n                namespace=\"renato-bohler\"\n                repo=\"logossim\"\n              />\n              <p>\n                <strong>You can help us</strong> make logossim better!\n                If you know a little bit of web development, you can\n                quite easily develop new components to the\n                application.\n              </p>\n            </div>\n          ),\n          placement: 'center',\n          showProgress: false,\n          showSkipButton: false,\n          disableOverlayClose: false,\n        },\n      ],\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.recenterTourCircuit);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.recenterTourCircuit);\n  }\n\n  recenterTourCircuit = () => {\n    const { currentStep } = this.state;\n    const { run } = this.props;\n\n    if (!run) return;\n    if (currentStep < 3) return;\n\n    const { recenterCircuit } = this.props;\n    recenterCircuit();\n  };\n\n  callback = ({ type, action, index }) => {\n    const { setTourRunning, loadCircuit, clearCircuit } = this.props;\n\n    // Next step\n    if (type === EVENTS.STEP_AFTER) {\n      if (index === 2 && action === ACTIONS.NEXT) loadCircuit();\n      if (index === 3 && action === ACTIONS.PREV) clearCircuit();\n\n      this.setState({\n        currentStep: index + (action === ACTIONS.NEXT ? 1 : -1),\n      });\n    }\n\n    // Dismiss (skipping, closing or ending tour)\n    if (type === EVENTS.TOUR_END || action === ACTIONS.CLOSE) {\n      clearCircuit();\n      localStorage.setItem('tour-done', true);\n      setTourRunning(false);\n      this.setState({ currentStep: 0 });\n    }\n  };\n\n  render() {\n    const { steps, currentStep } = this.state;\n    const { run } = this.props;\n\n    return (\n      <>\n        <Joyride\n          run={run}\n          steps={steps}\n          stepIndex={currentStep}\n          continuous\n          scrollToFirstStep\n          showProgress\n          showSkipButton\n          disableOverlayClose\n          styles={{\n            tooltip: {\n              borderRadius: 10,\n            },\n            tooltipContent: {\n              fontSize: 14,\n              textAlign: 'left',\n            },\n            buttonBack: {\n              color: 'black',\n              fontSize: 12,\n            },\n            buttonNext: {\n              background: '#6441a5',\n              fontSize: 12,\n              borderRadius: 5,\n            },\n            buttonSkip: {\n              color: '#6441a5',\n              fontSize: 12,\n              border: '1px solid #6441a5',\n              borderRadius: 5,\n            },\n          }}\n          locale={{\n            back: 'Back',\n            close: 'Close',\n            last: 'Got it!',\n            next: 'Next',\n            open: 'Open',\n            skip: 'Skip',\n          }}\n          beaconComponent={Beacon}\n          callback={this.callback}\n        />\n        <div\n          style={{\n            display: run ? 'block' : 'none',\n            position: 'absolute',\n            width: window.innerWidth * 0.75,\n            height: window.innerHeight * 0.5,\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n          }}\n          id=\"tour-circuit-area-wrapper\"\n        />\n        <div\n          style={{\n            display: run ? 'block' : 'none',\n            position: 'absolute',\n            width: DIMENSIONS.width,\n            height: DIMENSIONS.height,\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n          }}\n          id=\"tour-circuit-wrapper\"\n        />\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Tooltip from 'react-tooltip';\n\nimport components, { groupedComponents } from '@logossim/components';\nimport {\n  SimulationEngine,\n  DiagramEngine,\n  Diagram,\n} from '@logossim/core';\n\nimport FileSaver from 'file-saver';\n\nimport {\n  Titlebar,\n  SimulationControlButtons,\n  ComponentSelectButton,\n  ComponentSelect,\n  ComponentEdit,\n  ContextMenus,\n  HelpKeyboardShortcuts,\n  LoadingExample,\n  HelpAbout,\n  Snackbar,\n  Tour,\n} from './ui-components';\nimport tourCircuit, {\n  DIMENSIONS,\n} from './ui-components/Tour/tourCircuit';\n\nimport './App.css';\n\nconst DEFAULT_CIRCUIT_NAME = 'Untitled circuit';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isComponentSelectOpen: false,\n      isComponentEditOpen: false,\n      isHelpKeyboardOpen: false,\n      isHelpAboutOpen: false,\n      componentEdit: null,\n      isTourAvailable: false,\n      isTourRunning: !JSON.parse(localStorage.getItem('tour-done')),\n      circuitName: DEFAULT_CIRCUIT_NAME,\n      circuitCreatedAt: null,\n      isCircuitNameFocused: false,\n      isLoadingExample: false,\n      snackbar: {\n        open: false,\n        message: '',\n        type: 'success',\n        timeout: 0,\n        timeoutID: null,\n      },\n    };\n\n    this.diagram = new DiagramEngine(\n      components,\n      this.areShortcutsAllowed,\n      this.showSnackbar,\n    );\n    this.simulation = new SimulationEngine(components);\n  }\n\n  componentDidMount() {\n    const urlParams = new URLSearchParams(window.location.search);\n    const example = urlParams.get('example');\n\n    if (example === null) {\n      window.addEventListener('load', this.loadHandler);\n    } else {\n      this.loadExample(example);\n    }\n\n    window.addEventListener('keydown', this.shortcutHandler);\n    window.addEventListener('beforeunload', this.unloadHandler);\n\n    this.autoSaveInterval = setInterval(this.autoSave, 15000);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.shortcutHandler);\n    window.addEventListener('load', this.loadHandler);\n    window.removeEventListener('beforeunload', this.unloadHandler);\n\n    clearInterval(this.autoSaveInterval);\n  }\n\n  areShortcutsAllowed = () => {\n    const {\n      isComponentSelectOpen,\n      isComponentEditOpen,\n      isHelpKeyboardOpen,\n      isHelpAboutOpen,\n      isCircuitNameFocused,\n      isTourRunning,\n    } = this.state;\n\n    return !(\n      isComponentSelectOpen ||\n      isComponentEditOpen ||\n      isHelpKeyboardOpen ||\n      isHelpAboutOpen ||\n      isCircuitNameFocused ||\n      isTourRunning\n    );\n  };\n\n  shortcutHandler = event => {\n    const { ctrlKey, shiftKey, code } = event;\n\n    if (!this.areShortcutsAllowed()) return;\n\n    // Add component\n    if (ctrlKey && code === 'KeyA') {\n      event.preventDefault();\n      if (!this.simulation.isStopped()) return;\n\n      this.showAddComponent();\n    }\n\n    // Component configuration\n    if (ctrlKey && code === 'KeyE') {\n      event.preventDefault();\n      if (!this.simulation.isStopped()) return;\n\n      const selectedNodes = this.diagram.getSelectedNodes();\n      if (selectedNodes.length !== 1) return;\n      const node = selectedNodes[0];\n      this.showEditComponent(node);\n    }\n\n    // Play/pause toggle simulation\n    if (!ctrlKey && code === 'Space') {\n      event.preventDefault();\n      if (this.simulation.isRunning()) this.handleClickPause();\n      else this.handleClickStart();\n    }\n\n    // Stop simulation\n    if ((ctrlKey && code === 'Space') || code === 'Escape') {\n      event.preventDefault();\n\n      if (!this.simulation.isStopped()) this.handleClickStop();\n    }\n\n    // Save circuit\n    if (ctrlKey && !shiftKey && code === 'KeyS') {\n      event.preventDefault();\n      this.handleClickSave();\n    }\n\n    // Load circuit\n    if (\n      (ctrlKey && code === 'KeyL') ||\n      (ctrlKey && shiftKey && code === 'KeyS')\n    ) {\n      event.preventDefault();\n      this.handleClickLoad();\n    }\n  };\n\n  isCircuitEmpty = circuit => {\n    if (!circuit) return true;\n\n    return Object.keys(circuit.layers[1].models).length === 0;\n  };\n\n  loadFile = file => {\n    this.setState({\n      circuitName: file.name,\n      circuitCreatedAt: file.createdAt,\n    });\n    this.diagram.load(file.circuit);\n  };\n\n  loadExample = async name => {\n    this.setState({ isLoadingExample: true });\n    const response = await window.fetch(`./examples/${name}.lgsim`);\n    const circuit = await response.json();\n    this.loadFile(circuit);\n    this.setState({ isLoadingExample: false });\n  };\n\n  loadHandler = () => {\n    const lastSaved = JSON.parse(\n      localStorage.getItem('circuit-autosave'),\n    );\n\n    if (this.isCircuitEmpty(lastSaved?.circuit)) {\n      this.setState({ isTourAvailable: true });\n      return;\n    }\n\n    // eslint-disable-next-line no-alert\n    const reload = window.confirm('Reload last unsaved circuit?');\n    if (reload) {\n      this.loadFile(lastSaved);\n    } else {\n      this.setState({ isTourAvailable: true });\n      localStorage.removeItem('circuit-autosave');\n    }\n  };\n\n  shouldWarnUnload = (currentCircuit, lastSavedCircuit) => {\n    if (this.isCircuitEmpty(currentCircuit)) return false;\n\n    return (\n      JSON.stringify(lastSavedCircuit.layers) !==\n      JSON.stringify(currentCircuit.layers)\n    );\n  };\n\n  unloadHandler = event => {\n    const lastSaved = JSON.parse(\n      localStorage.getItem('last-saved-circuit'),\n    );\n    const file = this.generateFile();\n\n    if (this.shouldWarnUnload(file.circuit, lastSaved.circuit)) {\n      if (this.simulation.isStopped()) {\n        localStorage.setItem(\n          'circuit-autosave',\n          JSON.stringify(file),\n        );\n      }\n      // eslint-disable-next-line no-param-reassign\n      event.returnValue =\n        'You have unsaved changes. Sure you want to leave?';\n    }\n  };\n\n  generateFile = () => {\n    const { circuitName, circuitCreatedAt } = this.state;\n    const circuit = this.diagram.serialize();\n\n    return {\n      id: circuit.id,\n      name: circuitName,\n      createdAt: circuitCreatedAt || new Date(),\n      updatedAt: new Date(),\n      circuit,\n    };\n  };\n\n  autoSave = () => {\n    const file = this.generateFile();\n\n    if (file.circuit.id === 'tour-circuit') return;\n    if (this.isCircuitEmpty(file.circuit)) return;\n    if (!this.simulation.isStopped()) return;\n\n    localStorage.setItem('circuit-autosave', JSON.stringify(file));\n  };\n\n  synchronizeSimulation = () => {\n    const diff = this.simulation.getDiff();\n\n    // Handles components diff\n    Object.entries(diff.components).forEach(([id, componentDiff]) =>\n      this.diagram.synchronizeComponent(id, componentDiff),\n    );\n\n    // Handles link value diff\n    Object.entries(diff.links).forEach(([id, value]) =>\n      this.diagram.synchronizeLink(id, value),\n    );\n\n    this.simulation.clearDiff();\n    this.diagram.repaint();\n  };\n\n  renderSimulation = () => {\n    if (!this.simulation.isRunning()) return;\n\n    this.synchronizeSimulation();\n\n    requestAnimationFrame(this.renderSimulation);\n  };\n\n  handleCircuitNameChange = event => {\n    event.stopPropagation();\n    event.preventDefault();\n    this.setState({ circuitName: event.target.value });\n  };\n\n  handleCircuitNameFocus = event => {\n    this.setState({ isCircuitNameFocused: true });\n    if (event.target.value === DEFAULT_CIRCUIT_NAME)\n      event.target.select();\n  };\n\n  handleCircuitNameBlur = () =>\n    this.setState({ isCircuitNameFocused: false });\n\n  handleClickSave = () => {\n    const { circuitCreatedAt } = this.state;\n    if (!circuitCreatedAt)\n      this.setState({ circuitCreatedAt: new Date() });\n\n    const file = JSON.stringify(this.generateFile(), null, 2);\n    const blob = new Blob([file], {\n      type: 'application/json',\n    });\n\n    const { circuitName } = this.state;\n    const filename = circuitName.replace(/[/|\\\\:*?\"<>]/g, '');\n    localStorage.setItem('last-saved-circuit', file);\n\n    FileSaver.saveAs(blob, `${filename}.lgsim`);\n  };\n\n  handleClickLoad = () =>\n    document.getElementById('file-input').click();\n\n  handleFileLoad = event => {\n    const {\n      target: { files },\n    } = event;\n\n    if (files.length !== 1) return;\n\n    const handleError = () =>\n      this.showSnackbar(\n        `Error loading circuit file:\\n${files[0].name}`,\n      );\n\n    const fr = new FileReader();\n    fr.onerror = handleError;\n    fr.onload = e => {\n      try {\n        const file = JSON.parse(e.target.result);\n        this.loadFile(file);\n      } catch (exception) {\n        handleError();\n      }\n    };\n    fr.readAsText(files.item(0));\n  };\n\n  handleClickStart = () => {\n    const serialized = JSON.stringify(this.diagram.serialize());\n    localStorage.setItem('circuit-autosave', serialized);\n\n    this.diagram.clearSelection();\n    this.diagram.setLocked(true);\n\n    this.simulation.start(this.diagram.getModel());\n    this.renderSimulation();\n    this.forceUpdate();\n  };\n\n  handleClickPause = () => {\n    this.simulation.pause();\n    this.forceUpdate();\n  };\n\n  handleClickStop = async () => {\n    await this.simulation.stop();\n    this.diagram.clearAllValues();\n    this.diagram.setLocked(false);\n    this.forceUpdate();\n    this.simulation.clearDiff();\n  };\n\n  showAddComponent = () =>\n    this.setState({\n      isComponentSelectOpen: true,\n    });\n\n  hideAddComponent = () =>\n    this.setState({\n      isComponentSelectOpen: false,\n    });\n\n  showEditComponent = componentEdit => {\n    this.diagram.clearSelection();\n\n    this.setState({\n      isComponentEditOpen: true,\n      componentEdit,\n    });\n  };\n\n  hideEditComponent = () =>\n    this.setState({\n      isComponentEditOpen: false,\n      componentEdit: null,\n    });\n\n  setTourRunning = isTourRunning => this.setState({ isTourRunning });\n\n  showHelpTour = () => this.setTourRunning(true);\n\n  showHelpKeyboard = () =>\n    this.setState({ isHelpKeyboardOpen: true });\n\n  hideHelpKeyboard = () =>\n    this.setState({ isHelpKeyboardOpen: false });\n\n  showHelpAbout = () => this.setState({ isHelpAboutOpen: true });\n\n  hideHelpAbout = () => this.setState({ isHelpAboutOpen: false });\n\n  showSnackbar = async (message, type = 'error') => {\n    const { snackbar } = this.state;\n    const timeout = 3000 + message.split(' ').length * 50;\n\n    if (snackbar.open) {\n      clearTimeout(snackbar.timeoutID);\n      this.hideSnackbar();\n      await new Promise(res => setTimeout(res, 500));\n    }\n\n    this.setState({\n      snackbar: {\n        open: true,\n        message,\n        type,\n        timeout,\n        timeoutID: setTimeout(this.hideSnackbar, timeout),\n      },\n    });\n  };\n\n  hideSnackbar = () => {\n    const { snackbar } = this.state;\n    clearTimeout(snackbar.timeoutID);\n\n    this.setState(state => ({\n      snackbar: {\n        ...state.snackbar,\n        open: false,\n      },\n    }));\n  };\n\n  handleLoadTourCircuit = () => {\n    this.circuitBeforeTour = this.generateFile();\n    this.loadFile(tourCircuit);\n    this.handleCenterTourCircuitOffset();\n  };\n\n  handleUnloadTourCircuit = () => {\n    if (!this.circuitBeforeTour) return;\n\n    this.loadFile(this.circuitBeforeTour);\n    this.circuitBeforeTour = null;\n  };\n\n  handleCenterTourCircuitOffset = () => {\n    this.diagram\n      .getModel()\n      .setOffset(\n        (window.innerWidth - DIMENSIONS.width) / 2,\n        (window.innerHeight - DIMENSIONS.height) / 2,\n      );\n    this.diagram.realignGrid();\n    this.diagram.repaint();\n  };\n\n  render() {\n    const {\n      isComponentSelectOpen,\n      isComponentEditOpen,\n      isHelpKeyboardOpen,\n      isHelpAboutOpen,\n      componentEdit,\n      isTourAvailable,\n      isTourRunning,\n      circuitName,\n      isCircuitNameFocused,\n      isLoadingExample,\n      snackbar,\n    } = this.state;\n\n    return (\n      <>\n        <Titlebar\n          circuitName={circuitName}\n          isCircuitNameFocused={isCircuitNameFocused}\n          handleChangeCircuitName={this.handleCircuitNameChange}\n          handleFocusCircuitName={this.handleCircuitNameFocus}\n          handleBlurCircuitName={this.handleCircuitNameBlur}\n          handleClickSave={this.handleClickSave}\n          handleFileLoad={this.handleFileLoad}\n          handleClickKeyboardShortcuts={this.showHelpKeyboard}\n          handleClickRedoTour={this.showHelpTour}\n          handleClickAbout={this.showHelpAbout}\n          disabled={!this.simulation.isStopped()}\n        />\n        <SimulationControlButtons\n          state={this.simulation.getState()}\n          handleClickStart={this.handleClickStart}\n          handleClickPause={this.handleClickPause}\n          handleClickStop={this.handleClickStop}\n        />\n        <ComponentSelectButton\n          handleClick={this.showAddComponent}\n          disabled={!this.simulation.isStopped()}\n        />\n\n        <ComponentSelect\n          isOpen={isComponentSelectOpen}\n          groups={groupedComponents}\n          handleClose={this.hideAddComponent}\n          handleComponentDrop={this.diagram.handleComponentDrop}\n        />\n        <ComponentEdit\n          isOpen={isComponentEditOpen}\n          components={components}\n          component={componentEdit}\n          handleClose={this.hideEditComponent}\n          handleComponentEdit={this.diagram.handleComponentEdit}\n        />\n\n        <HelpKeyboardShortcuts\n          isOpen={isHelpKeyboardOpen}\n          handleClose={this.hideHelpKeyboard}\n        />\n        <HelpAbout\n          isOpen={isHelpAboutOpen}\n          handleClose={this.hideHelpAbout}\n        />\n        {isTourAvailable && (\n          <Tour\n            run={isTourRunning}\n            setTourRunning={this.setTourRunning}\n            loadCircuit={this.handleLoadTourCircuit}\n            clearCircuit={this.handleUnloadTourCircuit}\n            recenterCircuit={this.handleCenterTourCircuitOffset}\n          />\n        )}\n\n        {isLoadingExample && <LoadingExample />}\n        <Diagram engine={this.diagram} />\n\n        <ContextMenus\n          duplicateSelected={this.diagram.duplicateSelected}\n          cutSelected={this.diagram.cutSelected}\n          copySelected={this.diagram.copySelected}\n          pasteSelected={this.diagram.pasteSelected}\n          deleteSelected={this.diagram.deleteSelected}\n          undo={this.diagram.undo}\n          redo={this.diagram.redo}\n          zoomIn={this.diagram.zoomIn}\n          zoomOut={this.diagram.zoomOut}\n          configureComponent={this.showEditComponent}\n        />\n\n        <Tooltip id=\"tooltip\" globalEventOff=\"click\" />\n        <Snackbar\n          open={snackbar.open}\n          type={snackbar.type}\n          message={snackbar.message}\n          timeout={snackbar.timeout}\n          handleClose={this.hideSnackbar}\n        />\n      </>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator\n  ) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\n        'Error during service worker registration:',\n        error,\n      );\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null &&\n          contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/* eslint-disable no-extend-native */\nArray.prototype.asArray = function arrayAsArray() {\n  return this;\n};\n\nArray.prototype.asNumber = function arrayAsNumber() {\n  if (this.some(bit => bit === 'e')) return 'e';\n  if (this.some(bit => bit === 'x')) return 'x';\n\n  if (this.some(bit => bit !== 0 && bit !== 1))\n    throw new Error(\n      '[logossim] Array cannot be converted to number because it contains invalid values',\n    );\n\n  return this.slice()\n    .reverse()\n    .reduce((acc, curr, index) => acc + curr * 2 ** index, 0);\n};\n\nArray.prototype.transpose = function transpose() {\n  return this[0].map((x1, i) => this.map(x2 => x2[i]));\n};\n\nNumber.prototype.asNumber = function numberAsNumber() {\n  return Number(this);\n};\n\nNumber.prototype.asArray = function numberAsArray(dataBits) {\n  if (!dataBits)\n    throw new Error(\n      '[logossim] To transform a number to array, you need to pass as argument the length of the array',\n    );\n\n  const result = [...this.toString(2)].map(Number);\n\n  return Array(dataBits)\n    .fill(0)\n    .concat(result)\n    .slice(result.length);\n};\n\nString.prototype.asArray = function stringAsArray(dataBits) {\n  if (!dataBits)\n    throw new Error(\n      '[logossim] To transform a number to array, you need to pass as argument the length of the array',\n    );\n\n  return [...this.padStart(dataBits, 0)].map(char => {\n    if (char === '0') return 0;\n    if (char === '1') return 1;\n    return char;\n  });\n};\n\nString.prototype.parseBinary = function parseBinary(\n  dataBits,\n  arrayLength,\n  fillWith = 0,\n) {\n  if (!dataBits)\n    throw new Error(\n      '[logossim] To parse a binary, you need to pass the value length in bits as first argument.',\n    );\n\n  if (!arrayLength)\n    throw new Error(\n      '[logossim] To parse a binary, you need to pass the result array length as second argument.',\n    );\n\n  const sanitize = /[^01]/g;\n  const chunk = new RegExp(`.{1,${dataBits}}`, 'g');\n\n  const content = (\n    this.replace(sanitize, '').match(chunk) || []\n  ).map(value => parseInt(value, 2));\n\n  return Array(arrayLength)\n    .fill(fillWith)\n    .map((original, i) => {\n      const value = content[i];\n      if (!value) return original;\n      return value;\n    });\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport '@logossim/core/common/prototype';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}